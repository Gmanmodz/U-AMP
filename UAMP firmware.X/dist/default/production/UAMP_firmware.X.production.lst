

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Apr 18 11:59:51 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16LF15324
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.10
    32                           ; Generated 31/07/2019 GMT
    33                           ; 
    34                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16LF15324 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000E                     	;# 
    79  0012                     	;# 
    80  0014                     	;# 
    81  0018                     	;# 
    82  001A                     	;# 
    83  009B                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  009F                     	;# 
    89  0119                     	;# 
    90  0119                     	;# 
    91  0119                     	;# 
    92  011A                     	;# 
    93  011A                     	;# 
    94  011A                     	;# 
    95  011B                     	;# 
    96  011B                     	;# 
    97  011B                     	;# 
    98  011B                     	;# 
    99  011B                     	;# 
   100  011C                     	;# 
   101  011C                     	;# 
   102  011C                     	;# 
   103  011D                     	;# 
   104  011D                     	;# 
   105  011D                     	;# 
   106  011E                     	;# 
   107  011E                     	;# 
   108  011E                     	;# 
   109  011F                     	;# 
   110  011F                     	;# 
   111  011F                     	;# 
   112  011F                     	;# 
   113  011F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  018E                     	;# 
   117  018F                     	;# 
   118  0190                     	;# 
   119  0191                     	;# 
   120  0192                     	;# 
   121  020C                     	;# 
   122  020C                     	;# 
   123  020D                     	;# 
   124  020E                     	;# 
   125  020F                     	;# 
   126  020F                     	;# 
   127  0210                     	;# 
   128  0210                     	;# 
   129  0211                     	;# 
   130  0211                     	;# 
   131  028C                     	;# 
   132  028C                     	;# 
   133  028D                     	;# 
   134  028D                     	;# 
   135  028E                     	;# 
   136  028F                     	;# 
   137  0290                     	;# 
   138  0291                     	;# 
   139  030C                     	;# 
   140  030C                     	;# 
   141  030D                     	;# 
   142  030E                     	;# 
   143  030F                     	;# 
   144  0310                     	;# 
   145  0310                     	;# 
   146  0311                     	;# 
   147  0312                     	;# 
   148  0313                     	;# 
   149  0314                     	;# 
   150  0314                     	;# 
   151  0315                     	;# 
   152  0316                     	;# 
   153  0318                     	;# 
   154  0318                     	;# 
   155  0319                     	;# 
   156  031A                     	;# 
   157  031C                     	;# 
   158  031C                     	;# 
   159  031D                     	;# 
   160  031E                     	;# 
   161  038C                     	;# 
   162  038C                     	;# 
   163  038D                     	;# 
   164  038E                     	;# 
   165  058C                     	;# 
   166  058C                     	;# 
   167  058D                     	;# 
   168  058E                     	;# 
   169  058F                     	;# 
   170  058F                     	;# 
   171  0590                     	;# 
   172  0591                     	;# 
   173  0592                     	;# 
   174  0593                     	;# 
   175  059C                     	;# 
   176  059C                     	;# 
   177  059D                     	;# 
   178  059D                     	;# 
   179  059E                     	;# 
   180  059F                     	;# 
   181  060C                     	;# 
   182  060D                     	;# 
   183  060E                     	;# 
   184  060F                     	;# 
   185  0610                     	;# 
   186  0611                     	;# 
   187  0612                     	;# 
   188  0613                     	;# 
   189  0614                     	;# 
   190  070C                     	;# 
   191  070D                     	;# 
   192  070E                     	;# 
   193  070F                     	;# 
   194  0710                     	;# 
   195  0711                     	;# 
   196  0712                     	;# 
   197  0713                     	;# 
   198  0716                     	;# 
   199  0717                     	;# 
   200  0718                     	;# 
   201  0719                     	;# 
   202  071A                     	;# 
   203  071B                     	;# 
   204  071C                     	;# 
   205  071D                     	;# 
   206  0796                     	;# 
   207  0797                     	;# 
   208  0798                     	;# 
   209  0799                     	;# 
   210  079A                     	;# 
   211  079B                     	;# 
   212  080C                     	;# 
   213  080D                     	;# 
   214  080E                     	;# 
   215  080F                     	;# 
   216  0810                     	;# 
   217  0811                     	;# 
   218  0813                     	;# 
   219  0814                     	;# 
   220  081A                     	;# 
   221  081A                     	;# 
   222  081B                     	;# 
   223  081C                     	;# 
   224  081C                     	;# 
   225  081D                     	;# 
   226  081E                     	;# 
   227  081F                     	;# 
   228  088C                     	;# 
   229  088D                     	;# 
   230  088E                     	;# 
   231  088F                     	;# 
   232  0890                     	;# 
   233  0891                     	;# 
   234  0892                     	;# 
   235  0893                     	;# 
   236  0895                     	;# 
   237  0896                     	;# 
   238  090C                     	;# 
   239  090E                     	;# 
   240  090F                     	;# 
   241  091F                     	;# 
   242  098F                     	;# 
   243  098F                     	;# 
   244  0990                     	;# 
   245  0991                     	;# 
   246  0992                     	;# 
   247  0993                     	;# 
   248  0994                     	;# 
   249  0995                     	;# 
   250  0996                     	;# 
   251  0997                     	;# 
   252  0A19                     	;# 
   253  0A19                     	;# 
   254  0A1A                     	;# 
   255  0A1A                     	;# 
   256  0A1B                     	;# 
   257  0A1B                     	;# 
   258  0A1B                     	;# 
   259  0A1C                     	;# 
   260  0A1C                     	;# 
   261  0A1D                     	;# 
   262  0A1D                     	;# 
   263  0A1E                     	;# 
   264  0A1E                     	;# 
   265  0A1F                     	;# 
   266  0A1F                     	;# 
   267  0A1F                     	;# 
   268  1E0F                     	;# 
   269  1E10                     	;# 
   270  1E11                     	;# 
   271  1E12                     	;# 
   272  1E13                     	;# 
   273  1E14                     	;# 
   274  1E15                     	;# 
   275  1E16                     	;# 
   276  1E17                     	;# 
   277  1E18                     	;# 
   278  1E19                     	;# 
   279  1E1A                     	;# 
   280  1E1B                     	;# 
   281  1E1C                     	;# 
   282  1E1D                     	;# 
   283  1E1E                     	;# 
   284  1E1F                     	;# 
   285  1E20                     	;# 
   286  1E21                     	;# 
   287  1E22                     	;# 
   288  1E23                     	;# 
   289  1E24                     	;# 
   290  1E25                     	;# 
   291  1E26                     	;# 
   292  1E27                     	;# 
   293  1E28                     	;# 
   294  1E29                     	;# 
   295  1E2A                     	;# 
   296  1E2B                     	;# 
   297  1E2C                     	;# 
   298  1E2D                     	;# 
   299  1E2E                     	;# 
   300  1E2F                     	;# 
   301  1E30                     	;# 
   302  1E31                     	;# 
   303  1E32                     	;# 
   304  1E33                     	;# 
   305  1E34                     	;# 
   306  1E35                     	;# 
   307  1E36                     	;# 
   308  1E37                     	;# 
   309  1E8F                     	;# 
   310  1E90                     	;# 
   311  1E91                     	;# 
   312  1E92                     	;# 
   313  1E93                     	;# 
   314  1E9C                     	;# 
   315  1EA1                     	;# 
   316  1EA2                     	;# 
   317  1EB1                     	;# 
   318  1EBB                     	;# 
   319  1EBC                     	;# 
   320  1EBD                     	;# 
   321  1EBE                     	;# 
   322  1EC3                     	;# 
   323  1EC5                     	;# 
   324  1EC6                     	;# 
   325  1EC7                     	;# 
   326  1ECB                     	;# 
   327  1ECC                     	;# 
   328  1ECD                     	;# 
   329  1ECE                     	;# 
   330  1F10                     	;# 
   331  1F11                     	;# 
   332  1F12                     	;# 
   333  1F13                     	;# 
   334  1F14                     	;# 
   335  1F15                     	;# 
   336  1F20                     	;# 
   337  1F21                     	;# 
   338  1F22                     	;# 
   339  1F23                     	;# 
   340  1F24                     	;# 
   341  1F25                     	;# 
   342  1F38                     	;# 
   343  1F39                     	;# 
   344  1F3A                     	;# 
   345  1F3B                     	;# 
   346  1F3C                     	;# 
   347  1F3D                     	;# 
   348  1F3E                     	;# 
   349  1F3F                     	;# 
   350  1F4E                     	;# 
   351  1F4F                     	;# 
   352  1F50                     	;# 
   353  1F51                     	;# 
   354  1F52                     	;# 
   355  1F53                     	;# 
   356  1F54                     	;# 
   357  1F55                     	;# 
   358  1FE4                     	;# 
   359  1FE5                     	;# 
   360  1FE6                     	;# 
   361  1FE7                     	;# 
   362  1FE8                     	;# 
   363  1FE8                     	;# 
   364  1FE9                     	;# 
   365  1FEA                     	;# 
   366  1FEA                     	;# 
   367  1FEB                     	;# 
   368  1FED                     	;# 
   369  1FEE                     	;# 
   370  1FEF                     	;# 
   371  0000                     	;# 
   372  0001                     	;# 
   373  0002                     	;# 
   374  0003                     	;# 
   375  0004                     	;# 
   376  0005                     	;# 
   377  0006                     	;# 
   378  0007                     	;# 
   379  0008                     	;# 
   380  0009                     	;# 
   381  000A                     	;# 
   382  000B                     	;# 
   383  000C                     	;# 
   384  000E                     	;# 
   385  0012                     	;# 
   386  0014                     	;# 
   387  0018                     	;# 
   388  001A                     	;# 
   389  009B                     	;# 
   390  009B                     	;# 
   391  009C                     	;# 
   392  009D                     	;# 
   393  009E                     	;# 
   394  009F                     	;# 
   395  0119                     	;# 
   396  0119                     	;# 
   397  0119                     	;# 
   398  011A                     	;# 
   399  011A                     	;# 
   400  011A                     	;# 
   401  011B                     	;# 
   402  011B                     	;# 
   403  011B                     	;# 
   404  011B                     	;# 
   405  011B                     	;# 
   406  011C                     	;# 
   407  011C                     	;# 
   408  011C                     	;# 
   409  011D                     	;# 
   410  011D                     	;# 
   411  011D                     	;# 
   412  011E                     	;# 
   413  011E                     	;# 
   414  011E                     	;# 
   415  011F                     	;# 
   416  011F                     	;# 
   417  011F                     	;# 
   418  011F                     	;# 
   419  011F                     	;# 
   420  018C                     	;# 
   421  018D                     	;# 
   422  018E                     	;# 
   423  018F                     	;# 
   424  0190                     	;# 
   425  0191                     	;# 
   426  0192                     	;# 
   427  020C                     	;# 
   428  020C                     	;# 
   429  020D                     	;# 
   430  020E                     	;# 
   431  020F                     	;# 
   432  020F                     	;# 
   433  0210                     	;# 
   434  0210                     	;# 
   435  0211                     	;# 
   436  0211                     	;# 
   437  028C                     	;# 
   438  028C                     	;# 
   439  028D                     	;# 
   440  028D                     	;# 
   441  028E                     	;# 
   442  028F                     	;# 
   443  0290                     	;# 
   444  0291                     	;# 
   445  030C                     	;# 
   446  030C                     	;# 
   447  030D                     	;# 
   448  030E                     	;# 
   449  030F                     	;# 
   450  0310                     	;# 
   451  0310                     	;# 
   452  0311                     	;# 
   453  0312                     	;# 
   454  0313                     	;# 
   455  0314                     	;# 
   456  0314                     	;# 
   457  0315                     	;# 
   458  0316                     	;# 
   459  0318                     	;# 
   460  0318                     	;# 
   461  0319                     	;# 
   462  031A                     	;# 
   463  031C                     	;# 
   464  031C                     	;# 
   465  031D                     	;# 
   466  031E                     	;# 
   467  038C                     	;# 
   468  038C                     	;# 
   469  038D                     	;# 
   470  038E                     	;# 
   471  058C                     	;# 
   472  058C                     	;# 
   473  058D                     	;# 
   474  058E                     	;# 
   475  058F                     	;# 
   476  058F                     	;# 
   477  0590                     	;# 
   478  0591                     	;# 
   479  0592                     	;# 
   480  0593                     	;# 
   481  059C                     	;# 
   482  059C                     	;# 
   483  059D                     	;# 
   484  059D                     	;# 
   485  059E                     	;# 
   486  059F                     	;# 
   487  060C                     	;# 
   488  060D                     	;# 
   489  060E                     	;# 
   490  060F                     	;# 
   491  0610                     	;# 
   492  0611                     	;# 
   493  0612                     	;# 
   494  0613                     	;# 
   495  0614                     	;# 
   496  070C                     	;# 
   497  070D                     	;# 
   498  070E                     	;# 
   499  070F                     	;# 
   500  0710                     	;# 
   501  0711                     	;# 
   502  0712                     	;# 
   503  0713                     	;# 
   504  0716                     	;# 
   505  0717                     	;# 
   506  0718                     	;# 
   507  0719                     	;# 
   508  071A                     	;# 
   509  071B                     	;# 
   510  071C                     	;# 
   511  071D                     	;# 
   512  0796                     	;# 
   513  0797                     	;# 
   514  0798                     	;# 
   515  0799                     	;# 
   516  079A                     	;# 
   517  079B                     	;# 
   518  080C                     	;# 
   519  080D                     	;# 
   520  080E                     	;# 
   521  080F                     	;# 
   522  0810                     	;# 
   523  0811                     	;# 
   524  0813                     	;# 
   525  0814                     	;# 
   526  081A                     	;# 
   527  081A                     	;# 
   528  081B                     	;# 
   529  081C                     	;# 
   530  081C                     	;# 
   531  081D                     	;# 
   532  081E                     	;# 
   533  081F                     	;# 
   534  088C                     	;# 
   535  088D                     	;# 
   536  088E                     	;# 
   537  088F                     	;# 
   538  0890                     	;# 
   539  0891                     	;# 
   540  0892                     	;# 
   541  0893                     	;# 
   542  0895                     	;# 
   543  0896                     	;# 
   544  090C                     	;# 
   545  090E                     	;# 
   546  090F                     	;# 
   547  091F                     	;# 
   548  098F                     	;# 
   549  098F                     	;# 
   550  0990                     	;# 
   551  0991                     	;# 
   552  0992                     	;# 
   553  0993                     	;# 
   554  0994                     	;# 
   555  0995                     	;# 
   556  0996                     	;# 
   557  0997                     	;# 
   558  0A19                     	;# 
   559  0A19                     	;# 
   560  0A1A                     	;# 
   561  0A1A                     	;# 
   562  0A1B                     	;# 
   563  0A1B                     	;# 
   564  0A1B                     	;# 
   565  0A1C                     	;# 
   566  0A1C                     	;# 
   567  0A1D                     	;# 
   568  0A1D                     	;# 
   569  0A1E                     	;# 
   570  0A1E                     	;# 
   571  0A1F                     	;# 
   572  0A1F                     	;# 
   573  0A1F                     	;# 
   574  1E0F                     	;# 
   575  1E10                     	;# 
   576  1E11                     	;# 
   577  1E12                     	;# 
   578  1E13                     	;# 
   579  1E14                     	;# 
   580  1E15                     	;# 
   581  1E16                     	;# 
   582  1E17                     	;# 
   583  1E18                     	;# 
   584  1E19                     	;# 
   585  1E1A                     	;# 
   586  1E1B                     	;# 
   587  1E1C                     	;# 
   588  1E1D                     	;# 
   589  1E1E                     	;# 
   590  1E1F                     	;# 
   591  1E20                     	;# 
   592  1E21                     	;# 
   593  1E22                     	;# 
   594  1E23                     	;# 
   595  1E24                     	;# 
   596  1E25                     	;# 
   597  1E26                     	;# 
   598  1E27                     	;# 
   599  1E28                     	;# 
   600  1E29                     	;# 
   601  1E2A                     	;# 
   602  1E2B                     	;# 
   603  1E2C                     	;# 
   604  1E2D                     	;# 
   605  1E2E                     	;# 
   606  1E2F                     	;# 
   607  1E30                     	;# 
   608  1E31                     	;# 
   609  1E32                     	;# 
   610  1E33                     	;# 
   611  1E34                     	;# 
   612  1E35                     	;# 
   613  1E36                     	;# 
   614  1E37                     	;# 
   615  1E8F                     	;# 
   616  1E90                     	;# 
   617  1E91                     	;# 
   618  1E92                     	;# 
   619  1E93                     	;# 
   620  1E9C                     	;# 
   621  1EA1                     	;# 
   622  1EA2                     	;# 
   623  1EB1                     	;# 
   624  1EBB                     	;# 
   625  1EBC                     	;# 
   626  1EBD                     	;# 
   627  1EBE                     	;# 
   628  1EC3                     	;# 
   629  1EC5                     	;# 
   630  1EC6                     	;# 
   631  1EC7                     	;# 
   632  1ECB                     	;# 
   633  1ECC                     	;# 
   634  1ECD                     	;# 
   635  1ECE                     	;# 
   636  1F10                     	;# 
   637  1F11                     	;# 
   638  1F12                     	;# 
   639  1F13                     	;# 
   640  1F14                     	;# 
   641  1F15                     	;# 
   642  1F20                     	;# 
   643  1F21                     	;# 
   644  1F22                     	;# 
   645  1F23                     	;# 
   646  1F24                     	;# 
   647  1F25                     	;# 
   648  1F38                     	;# 
   649  1F39                     	;# 
   650  1F3A                     	;# 
   651  1F3B                     	;# 
   652  1F3C                     	;# 
   653  1F3D                     	;# 
   654  1F3E                     	;# 
   655  1F3F                     	;# 
   656  1F4E                     	;# 
   657  1F4F                     	;# 
   658  1F50                     	;# 
   659  1F51                     	;# 
   660  1F52                     	;# 
   661  1F53                     	;# 
   662  1F54                     	;# 
   663  1F55                     	;# 
   664  1FE4                     	;# 
   665  1FE5                     	;# 
   666  1FE6                     	;# 
   667  1FE7                     	;# 
   668  1FE8                     	;# 
   669  1FE8                     	;# 
   670  1FE9                     	;# 
   671  1FEA                     	;# 
   672  1FEA                     	;# 
   673  1FEB                     	;# 
   674  1FED                     	;# 
   675  1FEE                     	;# 
   676  1FEF                     	;# 
   677  0000                     	;# 
   678  0001                     	;# 
   679  0002                     	;# 
   680  0003                     	;# 
   681  0004                     	;# 
   682  0005                     	;# 
   683  0006                     	;# 
   684  0007                     	;# 
   685  0008                     	;# 
   686  0009                     	;# 
   687  000A                     	;# 
   688  000B                     	;# 
   689  000C                     	;# 
   690  000E                     	;# 
   691  0012                     	;# 
   692  0014                     	;# 
   693  0018                     	;# 
   694  001A                     	;# 
   695  009B                     	;# 
   696  009B                     	;# 
   697  009C                     	;# 
   698  009D                     	;# 
   699  009E                     	;# 
   700  009F                     	;# 
   701  0119                     	;# 
   702  0119                     	;# 
   703  0119                     	;# 
   704  011A                     	;# 
   705  011A                     	;# 
   706  011A                     	;# 
   707  011B                     	;# 
   708  011B                     	;# 
   709  011B                     	;# 
   710  011B                     	;# 
   711  011B                     	;# 
   712  011C                     	;# 
   713  011C                     	;# 
   714  011C                     	;# 
   715  011D                     	;# 
   716  011D                     	;# 
   717  011D                     	;# 
   718  011E                     	;# 
   719  011E                     	;# 
   720  011E                     	;# 
   721  011F                     	;# 
   722  011F                     	;# 
   723  011F                     	;# 
   724  011F                     	;# 
   725  011F                     	;# 
   726  018C                     	;# 
   727  018D                     	;# 
   728  018E                     	;# 
   729  018F                     	;# 
   730  0190                     	;# 
   731  0191                     	;# 
   732  0192                     	;# 
   733  020C                     	;# 
   734  020C                     	;# 
   735  020D                     	;# 
   736  020E                     	;# 
   737  020F                     	;# 
   738  020F                     	;# 
   739  0210                     	;# 
   740  0210                     	;# 
   741  0211                     	;# 
   742  0211                     	;# 
   743  028C                     	;# 
   744  028C                     	;# 
   745  028D                     	;# 
   746  028D                     	;# 
   747  028E                     	;# 
   748  028F                     	;# 
   749  0290                     	;# 
   750  0291                     	;# 
   751  030C                     	;# 
   752  030C                     	;# 
   753  030D                     	;# 
   754  030E                     	;# 
   755  030F                     	;# 
   756  0310                     	;# 
   757  0310                     	;# 
   758  0311                     	;# 
   759  0312                     	;# 
   760  0313                     	;# 
   761  0314                     	;# 
   762  0314                     	;# 
   763  0315                     	;# 
   764  0316                     	;# 
   765  0318                     	;# 
   766  0318                     	;# 
   767  0319                     	;# 
   768  031A                     	;# 
   769  031C                     	;# 
   770  031C                     	;# 
   771  031D                     	;# 
   772  031E                     	;# 
   773  038C                     	;# 
   774  038C                     	;# 
   775  038D                     	;# 
   776  038E                     	;# 
   777  058C                     	;# 
   778  058C                     	;# 
   779  058D                     	;# 
   780  058E                     	;# 
   781  058F                     	;# 
   782  058F                     	;# 
   783  0590                     	;# 
   784  0591                     	;# 
   785  0592                     	;# 
   786  0593                     	;# 
   787  059C                     	;# 
   788  059C                     	;# 
   789  059D                     	;# 
   790  059D                     	;# 
   791  059E                     	;# 
   792  059F                     	;# 
   793  060C                     	;# 
   794  060D                     	;# 
   795  060E                     	;# 
   796  060F                     	;# 
   797  0610                     	;# 
   798  0611                     	;# 
   799  0612                     	;# 
   800  0613                     	;# 
   801  0614                     	;# 
   802  070C                     	;# 
   803  070D                     	;# 
   804  070E                     	;# 
   805  070F                     	;# 
   806  0710                     	;# 
   807  0711                     	;# 
   808  0712                     	;# 
   809  0713                     	;# 
   810  0716                     	;# 
   811  0717                     	;# 
   812  0718                     	;# 
   813  0719                     	;# 
   814  071A                     	;# 
   815  071B                     	;# 
   816  071C                     	;# 
   817  071D                     	;# 
   818  0796                     	;# 
   819  0797                     	;# 
   820  0798                     	;# 
   821  0799                     	;# 
   822  079A                     	;# 
   823  079B                     	;# 
   824  080C                     	;# 
   825  080D                     	;# 
   826  080E                     	;# 
   827  080F                     	;# 
   828  0810                     	;# 
   829  0811                     	;# 
   830  0813                     	;# 
   831  0814                     	;# 
   832  081A                     	;# 
   833  081A                     	;# 
   834  081B                     	;# 
   835  081C                     	;# 
   836  081C                     	;# 
   837  081D                     	;# 
   838  081E                     	;# 
   839  081F                     	;# 
   840  088C                     	;# 
   841  088D                     	;# 
   842  088E                     	;# 
   843  088F                     	;# 
   844  0890                     	;# 
   845  0891                     	;# 
   846  0892                     	;# 
   847  0893                     	;# 
   848  0895                     	;# 
   849  0896                     	;# 
   850  090C                     	;# 
   851  090E                     	;# 
   852  090F                     	;# 
   853  091F                     	;# 
   854  098F                     	;# 
   855  098F                     	;# 
   856  0990                     	;# 
   857  0991                     	;# 
   858  0992                     	;# 
   859  0993                     	;# 
   860  0994                     	;# 
   861  0995                     	;# 
   862  0996                     	;# 
   863  0997                     	;# 
   864  0A19                     	;# 
   865  0A19                     	;# 
   866  0A1A                     	;# 
   867  0A1A                     	;# 
   868  0A1B                     	;# 
   869  0A1B                     	;# 
   870  0A1B                     	;# 
   871  0A1C                     	;# 
   872  0A1C                     	;# 
   873  0A1D                     	;# 
   874  0A1D                     	;# 
   875  0A1E                     	;# 
   876  0A1E                     	;# 
   877  0A1F                     	;# 
   878  0A1F                     	;# 
   879  0A1F                     	;# 
   880  1E0F                     	;# 
   881  1E10                     	;# 
   882  1E11                     	;# 
   883  1E12                     	;# 
   884  1E13                     	;# 
   885  1E14                     	;# 
   886  1E15                     	;# 
   887  1E16                     	;# 
   888  1E17                     	;# 
   889  1E18                     	;# 
   890  1E19                     	;# 
   891  1E1A                     	;# 
   892  1E1B                     	;# 
   893  1E1C                     	;# 
   894  1E1D                     	;# 
   895  1E1E                     	;# 
   896  1E1F                     	;# 
   897  1E20                     	;# 
   898  1E21                     	;# 
   899  1E22                     	;# 
   900  1E23                     	;# 
   901  1E24                     	;# 
   902  1E25                     	;# 
   903  1E26                     	;# 
   904  1E27                     	;# 
   905  1E28                     	;# 
   906  1E29                     	;# 
   907  1E2A                     	;# 
   908  1E2B                     	;# 
   909  1E2C                     	;# 
   910  1E2D                     	;# 
   911  1E2E                     	;# 
   912  1E2F                     	;# 
   913  1E30                     	;# 
   914  1E31                     	;# 
   915  1E32                     	;# 
   916  1E33                     	;# 
   917  1E34                     	;# 
   918  1E35                     	;# 
   919  1E36                     	;# 
   920  1E37                     	;# 
   921  1E8F                     	;# 
   922  1E90                     	;# 
   923  1E91                     	;# 
   924  1E92                     	;# 
   925  1E93                     	;# 
   926  1E9C                     	;# 
   927  1EA1                     	;# 
   928  1EA2                     	;# 
   929  1EB1                     	;# 
   930  1EBB                     	;# 
   931  1EBC                     	;# 
   932  1EBD                     	;# 
   933  1EBE                     	;# 
   934  1EC3                     	;# 
   935  1EC5                     	;# 
   936  1EC6                     	;# 
   937  1EC7                     	;# 
   938  1ECB                     	;# 
   939  1ECC                     	;# 
   940  1ECD                     	;# 
   941  1ECE                     	;# 
   942  1F10                     	;# 
   943  1F11                     	;# 
   944  1F12                     	;# 
   945  1F13                     	;# 
   946  1F14                     	;# 
   947  1F15                     	;# 
   948  1F20                     	;# 
   949  1F21                     	;# 
   950  1F22                     	;# 
   951  1F23                     	;# 
   952  1F24                     	;# 
   953  1F25                     	;# 
   954  1F38                     	;# 
   955  1F39                     	;# 
   956  1F3A                     	;# 
   957  1F3B                     	;# 
   958  1F3C                     	;# 
   959  1F3D                     	;# 
   960  1F3E                     	;# 
   961  1F3F                     	;# 
   962  1F4E                     	;# 
   963  1F4F                     	;# 
   964  1F50                     	;# 
   965  1F51                     	;# 
   966  1F52                     	;# 
   967  1F53                     	;# 
   968  1F54                     	;# 
   969  1F55                     	;# 
   970  1FE4                     	;# 
   971  1FE5                     	;# 
   972  1FE6                     	;# 
   973  1FE7                     	;# 
   974  1FE8                     	;# 
   975  1FE8                     	;# 
   976  1FE9                     	;# 
   977  1FEA                     	;# 
   978  1FEA                     	;# 
   979  1FEB                     	;# 
   980  1FED                     	;# 
   981  1FEE                     	;# 
   982  1FEF                     	;# 
   983  0000                     	;# 
   984  0001                     	;# 
   985  0002                     	;# 
   986  0003                     	;# 
   987  0004                     	;# 
   988  0005                     	;# 
   989  0006                     	;# 
   990  0007                     	;# 
   991  0008                     	;# 
   992  0009                     	;# 
   993  000A                     	;# 
   994  000B                     	;# 
   995  000C                     	;# 
   996  000E                     	;# 
   997  0012                     	;# 
   998  0014                     	;# 
   999  0018                     	;# 
  1000  001A                     	;# 
  1001  009B                     	;# 
  1002  009B                     	;# 
  1003  009C                     	;# 
  1004  009D                     	;# 
  1005  009E                     	;# 
  1006  009F                     	;# 
  1007  0119                     	;# 
  1008  0119                     	;# 
  1009  0119                     	;# 
  1010  011A                     	;# 
  1011  011A                     	;# 
  1012  011A                     	;# 
  1013  011B                     	;# 
  1014  011B                     	;# 
  1015  011B                     	;# 
  1016  011B                     	;# 
  1017  011B                     	;# 
  1018  011C                     	;# 
  1019  011C                     	;# 
  1020  011C                     	;# 
  1021  011D                     	;# 
  1022  011D                     	;# 
  1023  011D                     	;# 
  1024  011E                     	;# 
  1025  011E                     	;# 
  1026  011E                     	;# 
  1027  011F                     	;# 
  1028  011F                     	;# 
  1029  011F                     	;# 
  1030  011F                     	;# 
  1031  011F                     	;# 
  1032  018C                     	;# 
  1033  018D                     	;# 
  1034  018E                     	;# 
  1035  018F                     	;# 
  1036  0190                     	;# 
  1037  0191                     	;# 
  1038  0192                     	;# 
  1039  020C                     	;# 
  1040  020C                     	;# 
  1041  020D                     	;# 
  1042  020E                     	;# 
  1043  020F                     	;# 
  1044  020F                     	;# 
  1045  0210                     	;# 
  1046  0210                     	;# 
  1047  0211                     	;# 
  1048  0211                     	;# 
  1049  028C                     	;# 
  1050  028C                     	;# 
  1051  028D                     	;# 
  1052  028D                     	;# 
  1053  028E                     	;# 
  1054  028F                     	;# 
  1055  0290                     	;# 
  1056  0291                     	;# 
  1057  030C                     	;# 
  1058  030C                     	;# 
  1059  030D                     	;# 
  1060  030E                     	;# 
  1061  030F                     	;# 
  1062  0310                     	;# 
  1063  0310                     	;# 
  1064  0311                     	;# 
  1065  0312                     	;# 
  1066  0313                     	;# 
  1067  0314                     	;# 
  1068  0314                     	;# 
  1069  0315                     	;# 
  1070  0316                     	;# 
  1071  0318                     	;# 
  1072  0318                     	;# 
  1073  0319                     	;# 
  1074  031A                     	;# 
  1075  031C                     	;# 
  1076  031C                     	;# 
  1077  031D                     	;# 
  1078  031E                     	;# 
  1079  038C                     	;# 
  1080  038C                     	;# 
  1081  038D                     	;# 
  1082  038E                     	;# 
  1083  058C                     	;# 
  1084  058C                     	;# 
  1085  058D                     	;# 
  1086  058E                     	;# 
  1087  058F                     	;# 
  1088  058F                     	;# 
  1089  0590                     	;# 
  1090  0591                     	;# 
  1091  0592                     	;# 
  1092  0593                     	;# 
  1093  059C                     	;# 
  1094  059C                     	;# 
  1095  059D                     	;# 
  1096  059D                     	;# 
  1097  059E                     	;# 
  1098  059F                     	;# 
  1099  060C                     	;# 
  1100  060D                     	;# 
  1101  060E                     	;# 
  1102  060F                     	;# 
  1103  0610                     	;# 
  1104  0611                     	;# 
  1105  0612                     	;# 
  1106  0613                     	;# 
  1107  0614                     	;# 
  1108  070C                     	;# 
  1109  070D                     	;# 
  1110  070E                     	;# 
  1111  070F                     	;# 
  1112  0710                     	;# 
  1113  0711                     	;# 
  1114  0712                     	;# 
  1115  0713                     	;# 
  1116  0716                     	;# 
  1117  0717                     	;# 
  1118  0718                     	;# 
  1119  0719                     	;# 
  1120  071A                     	;# 
  1121  071B                     	;# 
  1122  071C                     	;# 
  1123  071D                     	;# 
  1124  0796                     	;# 
  1125  0797                     	;# 
  1126  0798                     	;# 
  1127  0799                     	;# 
  1128  079A                     	;# 
  1129  079B                     	;# 
  1130  080C                     	;# 
  1131  080D                     	;# 
  1132  080E                     	;# 
  1133  080F                     	;# 
  1134  0810                     	;# 
  1135  0811                     	;# 
  1136  0813                     	;# 
  1137  0814                     	;# 
  1138  081A                     	;# 
  1139  081A                     	;# 
  1140  081B                     	;# 
  1141  081C                     	;# 
  1142  081C                     	;# 
  1143  081D                     	;# 
  1144  081E                     	;# 
  1145  081F                     	;# 
  1146  088C                     	;# 
  1147  088D                     	;# 
  1148  088E                     	;# 
  1149  088F                     	;# 
  1150  0890                     	;# 
  1151  0891                     	;# 
  1152  0892                     	;# 
  1153  0893                     	;# 
  1154  0895                     	;# 
  1155  0896                     	;# 
  1156  090C                     	;# 
  1157  090E                     	;# 
  1158  090F                     	;# 
  1159  091F                     	;# 
  1160  098F                     	;# 
  1161  098F                     	;# 
  1162  0990                     	;# 
  1163  0991                     	;# 
  1164  0992                     	;# 
  1165  0993                     	;# 
  1166  0994                     	;# 
  1167  0995                     	;# 
  1168  0996                     	;# 
  1169  0997                     	;# 
  1170  0A19                     	;# 
  1171  0A19                     	;# 
  1172  0A1A                     	;# 
  1173  0A1A                     	;# 
  1174  0A1B                     	;# 
  1175  0A1B                     	;# 
  1176  0A1B                     	;# 
  1177  0A1C                     	;# 
  1178  0A1C                     	;# 
  1179  0A1D                     	;# 
  1180  0A1D                     	;# 
  1181  0A1E                     	;# 
  1182  0A1E                     	;# 
  1183  0A1F                     	;# 
  1184  0A1F                     	;# 
  1185  0A1F                     	;# 
  1186  1E0F                     	;# 
  1187  1E10                     	;# 
  1188  1E11                     	;# 
  1189  1E12                     	;# 
  1190  1E13                     	;# 
  1191  1E14                     	;# 
  1192  1E15                     	;# 
  1193  1E16                     	;# 
  1194  1E17                     	;# 
  1195  1E18                     	;# 
  1196  1E19                     	;# 
  1197  1E1A                     	;# 
  1198  1E1B                     	;# 
  1199  1E1C                     	;# 
  1200  1E1D                     	;# 
  1201  1E1E                     	;# 
  1202  1E1F                     	;# 
  1203  1E20                     	;# 
  1204  1E21                     	;# 
  1205  1E22                     	;# 
  1206  1E23                     	;# 
  1207  1E24                     	;# 
  1208  1E25                     	;# 
  1209  1E26                     	;# 
  1210  1E27                     	;# 
  1211  1E28                     	;# 
  1212  1E29                     	;# 
  1213  1E2A                     	;# 
  1214  1E2B                     	;# 
  1215  1E2C                     	;# 
  1216  1E2D                     	;# 
  1217  1E2E                     	;# 
  1218  1E2F                     	;# 
  1219  1E30                     	;# 
  1220  1E31                     	;# 
  1221  1E32                     	;# 
  1222  1E33                     	;# 
  1223  1E34                     	;# 
  1224  1E35                     	;# 
  1225  1E36                     	;# 
  1226  1E37                     	;# 
  1227  1E8F                     	;# 
  1228  1E90                     	;# 
  1229  1E91                     	;# 
  1230  1E92                     	;# 
  1231  1E93                     	;# 
  1232  1E9C                     	;# 
  1233  1EA1                     	;# 
  1234  1EA2                     	;# 
  1235  1EB1                     	;# 
  1236  1EBB                     	;# 
  1237  1EBC                     	;# 
  1238  1EBD                     	;# 
  1239  1EBE                     	;# 
  1240  1EC3                     	;# 
  1241  1EC5                     	;# 
  1242  1EC6                     	;# 
  1243  1EC7                     	;# 
  1244  1ECB                     	;# 
  1245  1ECC                     	;# 
  1246  1ECD                     	;# 
  1247  1ECE                     	;# 
  1248  1F10                     	;# 
  1249  1F11                     	;# 
  1250  1F12                     	;# 
  1251  1F13                     	;# 
  1252  1F14                     	;# 
  1253  1F15                     	;# 
  1254  1F20                     	;# 
  1255  1F21                     	;# 
  1256  1F22                     	;# 
  1257  1F23                     	;# 
  1258  1F24                     	;# 
  1259  1F25                     	;# 
  1260  1F38                     	;# 
  1261  1F39                     	;# 
  1262  1F3A                     	;# 
  1263  1F3B                     	;# 
  1264  1F3C                     	;# 
  1265  1F3D                     	;# 
  1266  1F3E                     	;# 
  1267  1F3F                     	;# 
  1268  1F4E                     	;# 
  1269  1F4F                     	;# 
  1270  1F50                     	;# 
  1271  1F51                     	;# 
  1272  1F52                     	;# 
  1273  1F53                     	;# 
  1274  1F54                     	;# 
  1275  1F55                     	;# 
  1276  1FE4                     	;# 
  1277  1FE5                     	;# 
  1278  1FE6                     	;# 
  1279  1FE7                     	;# 
  1280  1FE8                     	;# 
  1281  1FE8                     	;# 
  1282  1FE9                     	;# 
  1283  1FEA                     	;# 
  1284  1FEA                     	;# 
  1285  1FEB                     	;# 
  1286  1FED                     	;# 
  1287  1FEE                     	;# 
  1288  1FEF                     	;# 
  1289  0000                     	;# 
  1290  0001                     	;# 
  1291  0002                     	;# 
  1292  0003                     	;# 
  1293  0004                     	;# 
  1294  0005                     	;# 
  1295  0006                     	;# 
  1296  0007                     	;# 
  1297  0008                     	;# 
  1298  0009                     	;# 
  1299  000A                     	;# 
  1300  000B                     	;# 
  1301  000C                     	;# 
  1302  000E                     	;# 
  1303  0012                     	;# 
  1304  0014                     	;# 
  1305  0018                     	;# 
  1306  001A                     	;# 
  1307  009B                     	;# 
  1308  009B                     	;# 
  1309  009C                     	;# 
  1310  009D                     	;# 
  1311  009E                     	;# 
  1312  009F                     	;# 
  1313  0119                     	;# 
  1314  0119                     	;# 
  1315  0119                     	;# 
  1316  011A                     	;# 
  1317  011A                     	;# 
  1318  011A                     	;# 
  1319  011B                     	;# 
  1320  011B                     	;# 
  1321  011B                     	;# 
  1322  011B                     	;# 
  1323  011B                     	;# 
  1324  011C                     	;# 
  1325  011C                     	;# 
  1326  011C                     	;# 
  1327  011D                     	;# 
  1328  011D                     	;# 
  1329  011D                     	;# 
  1330  011E                     	;# 
  1331  011E                     	;# 
  1332  011E                     	;# 
  1333  011F                     	;# 
  1334  011F                     	;# 
  1335  011F                     	;# 
  1336  011F                     	;# 
  1337  011F                     	;# 
  1338  018C                     	;# 
  1339  018D                     	;# 
  1340  018E                     	;# 
  1341  018F                     	;# 
  1342  0190                     	;# 
  1343  0191                     	;# 
  1344  0192                     	;# 
  1345  020C                     	;# 
  1346  020C                     	;# 
  1347  020D                     	;# 
  1348  020E                     	;# 
  1349  020F                     	;# 
  1350  020F                     	;# 
  1351  0210                     	;# 
  1352  0210                     	;# 
  1353  0211                     	;# 
  1354  0211                     	;# 
  1355  028C                     	;# 
  1356  028C                     	;# 
  1357  028D                     	;# 
  1358  028D                     	;# 
  1359  028E                     	;# 
  1360  028F                     	;# 
  1361  0290                     	;# 
  1362  0291                     	;# 
  1363  030C                     	;# 
  1364  030C                     	;# 
  1365  030D                     	;# 
  1366  030E                     	;# 
  1367  030F                     	;# 
  1368  0310                     	;# 
  1369  0310                     	;# 
  1370  0311                     	;# 
  1371  0312                     	;# 
  1372  0313                     	;# 
  1373  0314                     	;# 
  1374  0314                     	;# 
  1375  0315                     	;# 
  1376  0316                     	;# 
  1377  0318                     	;# 
  1378  0318                     	;# 
  1379  0319                     	;# 
  1380  031A                     	;# 
  1381  031C                     	;# 
  1382  031C                     	;# 
  1383  031D                     	;# 
  1384  031E                     	;# 
  1385  038C                     	;# 
  1386  038C                     	;# 
  1387  038D                     	;# 
  1388  038E                     	;# 
  1389  058C                     	;# 
  1390  058C                     	;# 
  1391  058D                     	;# 
  1392  058E                     	;# 
  1393  058F                     	;# 
  1394  058F                     	;# 
  1395  0590                     	;# 
  1396  0591                     	;# 
  1397  0592                     	;# 
  1398  0593                     	;# 
  1399  059C                     	;# 
  1400  059C                     	;# 
  1401  059D                     	;# 
  1402  059D                     	;# 
  1403  059E                     	;# 
  1404  059F                     	;# 
  1405  060C                     	;# 
  1406  060D                     	;# 
  1407  060E                     	;# 
  1408  060F                     	;# 
  1409  0610                     	;# 
  1410  0611                     	;# 
  1411  0612                     	;# 
  1412  0613                     	;# 
  1413  0614                     	;# 
  1414  070C                     	;# 
  1415  070D                     	;# 
  1416  070E                     	;# 
  1417  070F                     	;# 
  1418  0710                     	;# 
  1419  0711                     	;# 
  1420  0712                     	;# 
  1421  0713                     	;# 
  1422  0716                     	;# 
  1423  0717                     	;# 
  1424  0718                     	;# 
  1425  0719                     	;# 
  1426  071A                     	;# 
  1427  071B                     	;# 
  1428  071C                     	;# 
  1429  071D                     	;# 
  1430  0796                     	;# 
  1431  0797                     	;# 
  1432  0798                     	;# 
  1433  0799                     	;# 
  1434  079A                     	;# 
  1435  079B                     	;# 
  1436  080C                     	;# 
  1437  080D                     	;# 
  1438  080E                     	;# 
  1439  080F                     	;# 
  1440  0810                     	;# 
  1441  0811                     	;# 
  1442  0813                     	;# 
  1443  0814                     	;# 
  1444  081A                     	;# 
  1445  081A                     	;# 
  1446  081B                     	;# 
  1447  081C                     	;# 
  1448  081C                     	;# 
  1449  081D                     	;# 
  1450  081E                     	;# 
  1451  081F                     	;# 
  1452  088C                     	;# 
  1453  088D                     	;# 
  1454  088E                     	;# 
  1455  088F                     	;# 
  1456  0890                     	;# 
  1457  0891                     	;# 
  1458  0892                     	;# 
  1459  0893                     	;# 
  1460  0895                     	;# 
  1461  0896                     	;# 
  1462  090C                     	;# 
  1463  090E                     	;# 
  1464  090F                     	;# 
  1465  091F                     	;# 
  1466  098F                     	;# 
  1467  098F                     	;# 
  1468  0990                     	;# 
  1469  0991                     	;# 
  1470  0992                     	;# 
  1471  0993                     	;# 
  1472  0994                     	;# 
  1473  0995                     	;# 
  1474  0996                     	;# 
  1475  0997                     	;# 
  1476  0A19                     	;# 
  1477  0A19                     	;# 
  1478  0A1A                     	;# 
  1479  0A1A                     	;# 
  1480  0A1B                     	;# 
  1481  0A1B                     	;# 
  1482  0A1B                     	;# 
  1483  0A1C                     	;# 
  1484  0A1C                     	;# 
  1485  0A1D                     	;# 
  1486  0A1D                     	;# 
  1487  0A1E                     	;# 
  1488  0A1E                     	;# 
  1489  0A1F                     	;# 
  1490  0A1F                     	;# 
  1491  0A1F                     	;# 
  1492  1E0F                     	;# 
  1493  1E10                     	;# 
  1494  1E11                     	;# 
  1495  1E12                     	;# 
  1496  1E13                     	;# 
  1497  1E14                     	;# 
  1498  1E15                     	;# 
  1499  1E16                     	;# 
  1500  1E17                     	;# 
  1501  1E18                     	;# 
  1502  1E19                     	;# 
  1503  1E1A                     	;# 
  1504  1E1B                     	;# 
  1505  1E1C                     	;# 
  1506  1E1D                     	;# 
  1507  1E1E                     	;# 
  1508  1E1F                     	;# 
  1509  1E20                     	;# 
  1510  1E21                     	;# 
  1511  1E22                     	;# 
  1512  1E23                     	;# 
  1513  1E24                     	;# 
  1514  1E25                     	;# 
  1515  1E26                     	;# 
  1516  1E27                     	;# 
  1517  1E28                     	;# 
  1518  1E29                     	;# 
  1519  1E2A                     	;# 
  1520  1E2B                     	;# 
  1521  1E2C                     	;# 
  1522  1E2D                     	;# 
  1523  1E2E                     	;# 
  1524  1E2F                     	;# 
  1525  1E30                     	;# 
  1526  1E31                     	;# 
  1527  1E32                     	;# 
  1528  1E33                     	;# 
  1529  1E34                     	;# 
  1530  1E35                     	;# 
  1531  1E36                     	;# 
  1532  1E37                     	;# 
  1533  1E8F                     	;# 
  1534  1E90                     	;# 
  1535  1E91                     	;# 
  1536  1E92                     	;# 
  1537  1E93                     	;# 
  1538  1E9C                     	;# 
  1539  1EA1                     	;# 
  1540  1EA2                     	;# 
  1541  1EB1                     	;# 
  1542  1EBB                     	;# 
  1543  1EBC                     	;# 
  1544  1EBD                     	;# 
  1545  1EBE                     	;# 
  1546  1EC3                     	;# 
  1547  1EC5                     	;# 
  1548  1EC6                     	;# 
  1549  1EC7                     	;# 
  1550  1ECB                     	;# 
  1551  1ECC                     	;# 
  1552  1ECD                     	;# 
  1553  1ECE                     	;# 
  1554  1F10                     	;# 
  1555  1F11                     	;# 
  1556  1F12                     	;# 
  1557  1F13                     	;# 
  1558  1F14                     	;# 
  1559  1F15                     	;# 
  1560  1F20                     	;# 
  1561  1F21                     	;# 
  1562  1F22                     	;# 
  1563  1F23                     	;# 
  1564  1F24                     	;# 
  1565  1F25                     	;# 
  1566  1F38                     	;# 
  1567  1F39                     	;# 
  1568  1F3A                     	;# 
  1569  1F3B                     	;# 
  1570  1F3C                     	;# 
  1571  1F3D                     	;# 
  1572  1F3E                     	;# 
  1573  1F3F                     	;# 
  1574  1F4E                     	;# 
  1575  1F4F                     	;# 
  1576  1F50                     	;# 
  1577  1F51                     	;# 
  1578  1F52                     	;# 
  1579  1F53                     	;# 
  1580  1F54                     	;# 
  1581  1F55                     	;# 
  1582  1FE4                     	;# 
  1583  1FE5                     	;# 
  1584  1FE6                     	;# 
  1585  1FE7                     	;# 
  1586  1FE8                     	;# 
  1587  1FE8                     	;# 
  1588  1FE9                     	;# 
  1589  1FEA                     	;# 
  1590  1FEA                     	;# 
  1591  1FEB                     	;# 
  1592  1FED                     	;# 
  1593  1FEE                     	;# 
  1594  1FEF                     	;# 
  1595                           
  1596                           	psect	idataBANK0
  1597  04BE                     __pidataBANK0:	
  1598                           
  1599                           ;initializer for _volume_hp_prev
  1600  04BE  340A               	retlw	10
  1601                           
  1602                           ;initializer for _volume_hp
  1603  04BF  340A               	retlw	10
  1604                           
  1605                           ;initializer for _volume_sp_prev
  1606  04C0  340A               	retlw	10
  1607                           
  1608                           ;initializer for _volume_sp
  1609  04C1  340A               	retlw	10
  1610  0014                     _TRISCbits	set	20
  1611  000B                     _INTCONbits	set	11
  1612  0014                     _TRISC	set	20
  1613  0012                     _TRISA	set	18
  1614  0070                     _RC0	set	112
  1615  0071                     _RC1	set	113
  1616  0064                     _RA4	set	100
  1617  0065                     _RA5	set	101
  1618  0072                     _RC2	set	114
  1619  0073                     _RC3	set	115
  1620  0074                     _RC4	set	116
  1621  018C                     _SSP1BUF	set	396
  1622  0191                     _SSP1CON2bits	set	401
  1623  018F                     _SSP1STAT	set	399
  1624  018D                     _SSP1ADD	set	397
  1625  0191                     _SSP1CON2	set	401
  1626  0190                     _SSP1CON1	set	400
  1627  020C                     _TMR1	set	524
  1628  0211                     _T1CLK	set	529
  1629  020F                     _T1GCONbits	set	527
  1630  020E                     _T1CONbits	set	526
  1631  071A                     _PIE4bits	set	1818
  1632  3880                     _TMR1IF	set	14464
  1633  1E8F                     _PPSLOCK	set	7823
  1634  1EC5                     _SSP1CLKPPS	set	7877
  1635  1EC6                     _SSP1DATPPS	set	7878
  1636  1F20                     _RC0PPS	set	7968
  1637  1F21                     _RC1PPS	set	7969
  1638  1F4F                     _WPUC	set	8015
  1639  1F39                     _WPUA	set	7993
  1640  1F4E                     _ANSELC	set	8014
  1641  1F38                     _ANSELA	set	7992
  1642                           
  1643                           ; #config settings
  1644  0000                     
  1645                           	psect	cinit
  1646  001E                     start_initialization:	
  1647  001E                     __initialization:	
  1648                           
  1649                           ; Initialize objects allocated to BANK0
  1650  001E  3184  24BE  3180   	fcall	__pidataBANK0	;fetch initializer
  1651  0021  00C7               	movwf	__pdataBANK0& (0+127)
  1652  0022  3184  24BF  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1653  0025  00C8               	movwf	(__pdataBANK0+1)& (0+127)
  1654  0026  3184  24C0  3180   	fcall	__pidataBANK0+2	;fetch initializer
  1655  0029  00C9               	movwf	(__pdataBANK0+2)& (0+127)
  1656  002A  3184  24C1  3180   	fcall	__pidataBANK0+3	;fetch initializer
  1657  002D  00CA               	movwf	(__pdataBANK0+3)& (0+127)
  1658                           
  1659                           ; Clear objects allocated to BANK0
  1660  002E  3020               	movlw	low __pbssBANK0
  1661  002F  0084               	movwf	4
  1662  0030  3000               	movlw	high __pbssBANK0
  1663  0031  0085               	movwf	5
  1664  0032  301D               	movlw	29
  1665  0033  3184  24AC  3180   	fcall	clear_ram0
  1666  0036                     end_of_initialization:	
  1667                           ;End of C runtime variable initialization code
  1668                           
  1669  0036                     __end_of__initialization:	
  1670  0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1671  0037  0140               	movlb	0
  1672  0038  3180  283A         	ljmp	_main	;jump to C main() function
  1673                           
  1674                           	psect	bssBANK0
  1675  0020                     __pbssBANK0:	
  1676  0020                     _vol_minus_time_hold:	
  1677  0020                     	ds	4
  1678  0024                     _vol_minus_time_start:	
  1679  0024                     	ds	4
  1680  0028                     _vol_plus_time_hold:	
  1681  0028                     	ds	4
  1682  002C                     _vol_plus_time_start:	
  1683  002C                     	ds	4
  1684  0030                     _HPS_time_start:	
  1685  0030                     	ds	4
  1686  0034                     _timer_counter:	
  1687  0034                     	ds	4
  1688  0038                     _vol_minus_state:	
  1689  0038                     	ds	1
  1690  0039                     _vol_plus_state:	
  1691  0039                     	ds	1
  1692  003A                     _HPS_state:	
  1693  003A                     	ds	1
  1694  003B                     _mute_state:	
  1695  003B                     	ds	1
  1696  003C                     _mute_config:	
  1697  003C                     	ds	1
  1698                           
  1699                           	psect	dataBANK0
  1700  0047                     __pdataBANK0:	
  1701  0047                     _volume_hp_prev:	
  1702  0047                     	ds	1
  1703  0048                     _volume_hp:	
  1704  0048                     	ds	1
  1705  0049                     _volume_sp_prev:	
  1706  0049                     	ds	1
  1707  004A                     _volume_sp:	
  1708  004A                     	ds	1
  1709                           
  1710                           	psect	clrtext
  1711  04AC                     clear_ram0:	
  1712                           ;	Called with FSR0 containing the base address, and
  1713                           ;	WREG with the size to clear
  1714                           
  1715  04AC  0064               	clrwdt	;clear the watchdog before getting into this loop
  1716  04AD                     clrloop0:	
  1717  04AD  0180               	clrf	0	;clear RAM location pointed to by FSR
  1718  04AE  3101               	addfsr 0,1
  1719  04AF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1720  04B0  2CAD               	goto	clrloop0	;have we reached the end yet?
  1721  04B1  3400               	retlw	0	;all done for this memory range, return
  1722                           
  1723                           	psect	cstackCOMMON
  1724  0070                     __pcstackCOMMON:	
  1725  0070                     ?_PPS_unlock:	
  1726  0070                     ??_PPS_unlock:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729  0070                     ?_PPS_lock:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732  0070                     ??_PPS_lock:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735  0070                     ?_LM49450_Wii_init:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738  0070                     ?_LM49450_PS2_init:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741  0070                     ?_LM49450_analog_init:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744  0070                     ?_LM49450_DC_init:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747  0070                     ?_PIC_SETUP:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750  0070                     ??_PIC_SETUP:	
  1751                           ; 1 bytes @ 0x0
  1752                           
  1753  0070                     ?_ISR:	
  1754                           ; 1 bytes @ 0x0
  1755                           
  1756  0070                     ??_ISR:	
  1757                           ; 1 bytes @ 0x0
  1758                           
  1759  0070                     ?_main:	
  1760                           ; 1 bytes @ 0x0
  1761                           
  1762  0070                     ?_I2C_Master_Wait:	
  1763                           ; 1 bytes @ 0x0
  1764                           
  1765  0070                     ??_I2C_Master_Wait:	
  1766                           ; 1 bytes @ 0x0
  1767                           
  1768  0070                     ?_I2C_Master_Start:	
  1769                           ; 1 bytes @ 0x0
  1770                           
  1771  0070                     ??_I2C_Master_Start:	
  1772                           ; 1 bytes @ 0x0
  1773                           
  1774  0070                     ?_I2C_Master_Stop:	
  1775                           ; 1 bytes @ 0x0
  1776                           
  1777  0070                     ??_I2C_Master_Stop:	
  1778                           ; 1 bytes @ 0x0
  1779                           
  1780  0070                     ?_I2C_Master_Write:	
  1781                           ; 1 bytes @ 0x0
  1782                           
  1783  0070                     ??_I2C_Master_Write:	
  1784                           ; 1 bytes @ 0x0
  1785                           
  1786  0070                     ?_get_time:	
  1787                           ; 1 bytes @ 0x0
  1788                           
  1789  0070                     ?_timer_diff:	
  1790                           ; 4 bytes @ 0x0
  1791                           
  1792  0070                     ?___lldiv:	
  1793                           ; 4 bytes @ 0x0
  1794                           
  1795  0070                     I2C_Master_Write@data:	
  1796                           ; 4 bytes @ 0x0
  1797                           
  1798  0070                     timer_diff@t:	
  1799                           ; 1 bytes @ 0x0
  1800                           
  1801  0070                     ___lldiv@divisor:	
  1802                           ; 4 bytes @ 0x0
  1803                           
  1804                           
  1805                           ; 4 bytes @ 0x0
  1806  0070                     	ds	1
  1807  0071                     ?_LM49450_write:	
  1808  0071                     LM49450_write@data:	
  1809                           ; 1 bytes @ 0x1
  1810                           
  1811                           
  1812                           ; 1 bytes @ 0x1
  1813  0071                     	ds	1
  1814  0072                     ??_LM49450_write:	
  1815  0072                     LM49450_write@reg:	
  1816                           ; 1 bytes @ 0x2
  1817                           
  1818                           
  1819                           ; 1 bytes @ 0x2
  1820  0072                     	ds	1
  1821  0073                     ??_LM49450_Wii_init:	
  1822  0073                     ??_LM49450_PS2_init:	
  1823                           ; 1 bytes @ 0x3
  1824                           
  1825  0073                     ??_LM49450_analog_init:	
  1826                           ; 1 bytes @ 0x3
  1827                           
  1828  0073                     ??_LM49450_DC_init:	
  1829                           ; 1 bytes @ 0x3
  1830                           
  1831                           
  1832                           ; 1 bytes @ 0x3
  1833  0073                     	ds	1
  1834  0074                     ??_get_time:	
  1835  0074                     ??_timer_diff:	
  1836                           ; 1 bytes @ 0x4
  1837                           
  1838  0074                     ___lldiv@dividend:	
  1839                           ; 1 bytes @ 0x4
  1840                           
  1841                           
  1842                           ; 4 bytes @ 0x4
  1843  0074                     	ds	4
  1844  0078                     ??___lldiv:	
  1845                           
  1846                           ; 1 bytes @ 0x8
  1847  0078                     	ds	1
  1848  0079                     ___lldiv@quotient:	
  1849                           
  1850                           ; 4 bytes @ 0x9
  1851  0079                     	ds	4
  1852  007D                     ___lldiv@counter:	
  1853                           
  1854                           ; 1 bytes @ 0xD
  1855  007D                     	ds	1
  1856                           
  1857                           	psect	cstackBANK0
  1858  003D                     __pcstackBANK0:	
  1859  003D                     ?_I2C_Master_Init:	
  1860  003D                     I2C_Master_Init@clk:	
  1861                           ; 1 bytes @ 0x0
  1862                           
  1863                           
  1864                           ; 4 bytes @ 0x0
  1865  003D                     	ds	4
  1866  0041                     ??_I2C_Master_Init:	
  1867                           
  1868                           ; 1 bytes @ 0x4
  1869  0041                     	ds	4
  1870  0045                     ??_main:	
  1871                           
  1872                           ; 1 bytes @ 0x8
  1873  0045                     	ds	2
  1874                           
  1875                           	psect	maintext
  1876  003A                     __pmaintext:	
  1877 ;;
  1878 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1879 ;;
  1880 ;; *************** function _main *****************
  1881 ;; Defined at:
  1882 ;;		line 75 in file "main.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : B3F/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1896 ;;      Params:         0       0       0       0       0       0       0       0
  1897 ;;      Locals:         0       0       0       0       0       0       0       0
  1898 ;;      Temps:          0       2       0       0       0       0       0       0
  1899 ;;      Totals:         0       2       0       0       0       0       0       0
  1900 ;;Total ram usage:        2 bytes
  1901 ;; Hardware stack levels required when called:    5
  1902 ;; This function calls:
  1903 ;;		_I2C_Master_Init
  1904 ;;		_LM49450_DC_init
  1905 ;;		_LM49450_PS2_init
  1906 ;;		_LM49450_Wii_init
  1907 ;;		_LM49450_analog_init
  1908 ;;		_LM49450_write
  1909 ;;		_PIC_SETUP
  1910 ;;		_PPS_lock
  1911 ;;		_PPS_unlock
  1912 ;;		_get_time
  1913 ;;		_timer_diff
  1914 ;; This function is called by:
  1915 ;;		Startup code after reset
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function _main
  1921  003A                     _main:	
  1922  003A                     l1425:	
  1923                           ;incstack = 0
  1924                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1925                           
  1926                           
  1927                           ;main.c: 77: PIC_SETUP();
  1928  003A  3184  242C  3180   	fcall	_PIC_SETUP
  1929                           
  1930                           ;main.c: 80: PPS_unlock();
  1931  003D  3184  24A5  3180   	fcall	_PPS_unlock
  1932  0040                     l1427:	
  1933                           
  1934                           ;main.c: 81: SSP1DATPPS = 0x11;
  1935  0040  3011               	movlw	17
  1936  0041  017D               	movlb	61	; select bank61
  1937  0042  00C6               	movwf	70	;volatile
  1938  0043                     l1429:	
  1939                           
  1940                           ;main.c: 82: RC1PPS = 0x16;
  1941  0043  3016               	movlw	22
  1942  0044  017E               	movlb	62	; select bank62
  1943  0045  00A1               	movwf	33	;volatile
  1944  0046                     l1431:	
  1945                           
  1946                           ;main.c: 83: SSP1CLKPPS = 0x10;
  1947  0046  3010               	movlw	16
  1948  0047  017D               	movlb	61	; select bank61
  1949  0048  00C5               	movwf	69	;volatile
  1950  0049                     l1433:	
  1951                           
  1952                           ;main.c: 84: RC0PPS = 0x15;
  1953  0049  3015               	movlw	21
  1954  004A  017E               	movlb	62	; select bank62
  1955  004B  00A0               	movwf	32	;volatile
  1956                           
  1957                           ;main.c: 85: PPS_lock();
  1958  004C  3184  2495  3180   	fcall	_PPS_lock
  1959                           
  1960                           ;main.c: 86: I2C_Master_Init(100000);
  1961  004F  3000               	movlw	0
  1962  0050  0140               	movlb	0	; select bank0
  1963  0051  00C0               	movwf	I2C_Master_Init@clk+3
  1964  0052  3001               	movlw	1
  1965  0053  00BF               	movwf	I2C_Master_Init@clk+2
  1966  0054  3086               	movlw	134
  1967  0055  00BE               	movwf	I2C_Master_Init@clk+1
  1968  0056  30A0               	movlw	160
  1969  0057  00BD               	movwf	I2C_Master_Init@clk
  1970  0058  3183  238D  3180   	fcall	_I2C_Master_Init
  1971  005B                     l1435:	
  1972                           
  1973                           ;main.c: 89: _delay((unsigned long)((50)*(32000000/4000.0)));
  1974  005B  3003               	movlw	3
  1975  005C  0140               	movlb	0	; select bank0
  1976  005D  00C6               	movwf	??_main+1
  1977  005E  3008               	movlw	8
  1978  005F  00C5               	movwf	??_main
  1979  0060  3077               	movlw	119
  1980  0061                     u1357:	
  1981  0061  0B89               	decfsz	9,f
  1982  0062  2861               	goto	u1357
  1983  0063  0BC5               	decfsz	??_main,f
  1984  0064  2861               	goto	u1357
  1985  0065  0BC6               	decfsz	??_main+1,f
  1986  0066  2861               	goto	u1357
  1987  0067                     l1437:	
  1988                           
  1989                           ;main.c: 92: if(RC4 && RC3) {
  1990  0067  0140               	movlb	0	; select bank0
  1991  0068  1E0E               	btfss	14,4	;volatile
  1992  0069  286B               	goto	u811
  1993  006A  286C               	goto	u810
  1994  006B                     u811:	
  1995  006B  2878               	goto	l110
  1996  006C                     u810:	
  1997  006C                     l1439:	
  1998  006C  1D8E               	btfss	14,3	;volatile
  1999  006D  286F               	goto	u821
  2000  006E  2870               	goto	u820
  2001  006F                     u821:	
  2002  006F  2878               	goto	l110
  2003  0070                     u820:	
  2004  0070                     l1441:	
  2005                           
  2006                           ;main.c: 93: mute_config = LM49450_Wii_init();
  2007  0070  3183  23E2  3180   	fcall	_LM49450_Wii_init
  2008  0073  0140               	movlb	0	; select bank0
  2009  0074  00C5               	movwf	??_main
  2010  0075  0845               	movf	??_main,w
  2011  0076  00BC               	movwf	_mute_config
  2012                           
  2013                           ;main.c: 94: }
  2014  0077  28A7               	goto	l111
  2015  0078                     l110:	
  2016                           
  2017                           ;main.c: 95: else if(RC4 && !RC3) {
  2018  0078  1E0E               	btfss	14,4	;volatile
  2019  0079  287B               	goto	u831
  2020  007A  287C               	goto	u830
  2021  007B                     u831:	
  2022  007B  2888               	goto	l112
  2023  007C                     u830:	
  2024  007C                     l1443:	
  2025  007C  198E               	btfsc	14,3	;volatile
  2026  007D  287F               	goto	u841
  2027  007E  2880               	goto	u840
  2028  007F                     u841:	
  2029  007F  2888               	goto	l112
  2030  0080                     u840:	
  2031  0080                     l1445:	
  2032                           
  2033                           ;main.c: 96: mute_config = LM49450_PS2_init();
  2034  0080  3183  23BB  3180   	fcall	_LM49450_PS2_init
  2035  0083  0140               	movlb	0	; select bank0
  2036  0084  00C5               	movwf	??_main
  2037  0085  0845               	movf	??_main,w
  2038  0086  00BC               	movwf	_mute_config
  2039                           
  2040                           ;main.c: 97: }
  2041  0087  28A7               	goto	l111
  2042  0088                     l112:	
  2043                           
  2044                           ;main.c: 98: else if(!RC4 && !RC3) {
  2045  0088  1A0E               	btfsc	14,4	;volatile
  2046  0089  288B               	goto	u851
  2047  008A  288C               	goto	u850
  2048  008B                     u851:	
  2049  008B  2898               	goto	l114
  2050  008C                     u850:	
  2051  008C                     l1447:	
  2052  008C  198E               	btfsc	14,3	;volatile
  2053  008D  288F               	goto	u861
  2054  008E  2890               	goto	u860
  2055  008F                     u861:	
  2056  008F  2898               	goto	l114
  2057  0090                     u860:	
  2058  0090                     l1449:	
  2059                           
  2060                           ;main.c: 99: mute_config = LM49450_analog_init();
  2061  0090  3184  248B  3180   	fcall	_LM49450_analog_init
  2062  0093  0140               	movlb	0	; select bank0
  2063  0094  00C5               	movwf	??_main
  2064  0095  0845               	movf	??_main,w
  2065  0096  00BC               	movwf	_mute_config
  2066                           
  2067                           ;main.c: 100: }
  2068  0097  28A7               	goto	l111
  2069  0098                     l114:	
  2070                           
  2071                           ;main.c: 101: else if(!RC4 && RC3) {
  2072  0098  1A0E               	btfsc	14,4	;volatile
  2073  0099  289B               	goto	u871
  2074  009A  289C               	goto	u870
  2075  009B                     u871:	
  2076  009B  28A7               	goto	l111
  2077  009C                     u870:	
  2078  009C                     l1451:	
  2079  009C  1D8E               	btfss	14,3	;volatile
  2080  009D  289F               	goto	u881
  2081  009E  28A0               	goto	u880
  2082  009F                     u881:	
  2083  009F  28A7               	goto	l111
  2084  00A0                     u880:	
  2085  00A0                     l1453:	
  2086                           
  2087                           ;main.c: 102: mute_config = LM49450_DC_init();
  2088  00A0  3184  2407  3180   	fcall	_LM49450_DC_init
  2089  00A3  0140               	movlb	0	; select bank0
  2090  00A4  00C5               	movwf	??_main
  2091  00A5  0845               	movf	??_main,w
  2092  00A6  00BC               	movwf	_mute_config
  2093  00A7                     l111:	
  2094                           
  2095                           ;main.c: 103: };main.c: 106: LM49450_write(0x08, volume_sp);
  2096  00A7  084A               	movf	_volume_sp,w
  2097  00A8  00C5               	movwf	??_main
  2098  00A9  0845               	movf	??_main,w
  2099  00AA  00F1               	movwf	LM49450_write@data
  2100  00AB  3008               	movlw	8
  2101  00AC  3184  2461  3180   	fcall	_LM49450_write
  2102                           
  2103                           ;main.c: 107: LM49450_write(0x07, volume_hp);
  2104  00AF  0140               	movlb	0	; select bank0
  2105  00B0  0848               	movf	_volume_hp,w
  2106  00B1  00C5               	movwf	??_main
  2107  00B2  0845               	movf	??_main,w
  2108  00B3  00F1               	movwf	LM49450_write@data
  2109  00B4  3007               	movlw	7
  2110  00B5  3184  2461  3180   	fcall	_LM49450_write
  2111  00B8                     l1455:	
  2112                           
  2113                           ;main.c: 112: if(RC2) {
  2114  00B8  0140               	movlb	0	; select bank0
  2115  00B9  1D0E               	btfss	14,2	;volatile
  2116  00BA  28BC               	goto	u891
  2117  00BB  28BD               	goto	u890
  2118  00BC                     u891:	
  2119  00BC  2909               	goto	l1475
  2120  00BD                     u890:	
  2121  00BD                     l1457:	
  2122                           
  2123                           ;main.c: 113: if(HPS_state == 0) {
  2124  00BD  083A               	movf	_HPS_state,w
  2125  00BE  1D03               	btfss	3,2
  2126  00BF  28C1               	goto	u901
  2127  00C0  28C2               	goto	u900
  2128  00C1                     u901:	
  2129  00C1  28D1               	goto	l1463
  2130  00C2                     u900:	
  2131  00C2                     l1459:	
  2132                           
  2133                           ;main.c: 114: HPS_time_start = get_time();
  2134  00C2  3184  2481  3180   	fcall	_get_time
  2135  00C5  0873               	movf	?_get_time+3,w
  2136  00C6  0140               	movlb	0	; select bank0
  2137  00C7  00B3               	movwf	_HPS_time_start+3
  2138  00C8  0872               	movf	?_get_time+2,w
  2139  00C9  00B2               	movwf	_HPS_time_start+2
  2140  00CA  0871               	movf	?_get_time+1,w
  2141  00CB  00B1               	movwf	_HPS_time_start+1
  2142  00CC  0870               	movf	?_get_time,w
  2143  00CD  00B0               	movwf	_HPS_time_start
  2144  00CE                     l1461:	
  2145                           
  2146                           ;main.c: 115: HPS_state = 1;
  2147  00CE  01BA               	clrf	_HPS_state
  2148  00CF  0ABA               	incf	_HPS_state,f
  2149                           
  2150                           ;main.c: 116: }
  2151  00D0  2923               	goto	l1485
  2152  00D1                     l1463:	
  2153                           
  2154                           ;main.c: 117: else if(HPS_state == 1) {
  2155  00D1  033A               	decf	_HPS_state,w
  2156  00D2  1D03               	btfss	3,2
  2157  00D3  28D5               	goto	u911
  2158  00D4  28D6               	goto	u910
  2159  00D5                     u911:	
  2160  00D5  2923               	goto	l1485
  2161  00D6                     u910:	
  2162  00D6                     l1465:	
  2163                           
  2164                           ;main.c: 118: if(timer_diff(HPS_time_start) >= 4) {
  2165  00D6  0833               	movf	_HPS_time_start+3,w
  2166  00D7  00F3               	movwf	timer_diff@t+3
  2167  00D8  0832               	movf	_HPS_time_start+2,w
  2168  00D9  00F2               	movwf	timer_diff@t+2
  2169  00DA  0831               	movf	_HPS_time_start+1,w
  2170  00DB  00F1               	movwf	timer_diff@t+1
  2171  00DC  0830               	movf	_HPS_time_start,w
  2172  00DD  00F0               	movwf	timer_diff@t
  2173  00DE  3184  244B  3180   	fcall	_timer_diff
  2174  00E1  0873               	movf	?_timer_diff+3,w
  2175  00E2  1D03               	btfss	3,2
  2176  00E3  28F0               	goto	u920
  2177  00E4  0872               	movf	?_timer_diff+2,w
  2178  00E5  1D03               	btfss	3,2
  2179  00E6  28F0               	goto	u920
  2180  00E7  0871               	movf	?_timer_diff+1,w
  2181  00E8  1D03               	btfss	3,2
  2182  00E9  28F0               	goto	u920
  2183  00EA  3004               	movlw	4
  2184  00EB  0270               	subwf	?_timer_diff,w
  2185  00EC  1C03               	btfss	3,0
  2186  00ED  28EF               	goto	u921
  2187  00EE  28F0               	goto	u920
  2188  00EF                     u921:	
  2189  00EF  2923               	goto	l1485
  2190  00F0                     u920:	
  2191  00F0                     l1467:	
  2192                           
  2193                           ;main.c: 119: HPS_state = 2;
  2194  00F0  3002               	movlw	2
  2195  00F1  0140               	movlb	0	; select bank0
  2196  00F2  00C5               	movwf	??_main
  2197  00F3  0845               	movf	??_main,w
  2198  00F4  00BA               	movwf	_HPS_state
  2199  00F5                     l1469:	
  2200                           
  2201                           ;main.c: 120: if(volume_sp == 0 && mute_state == 0) {
  2202  00F5  084A               	movf	_volume_sp,w
  2203  00F6  1D03               	btfss	3,2
  2204  00F7  28F9               	goto	u931
  2205  00F8  28FA               	goto	u930
  2206  00F9                     u931:	
  2207  00F9  2908               	goto	l120
  2208  00FA                     u930:	
  2209  00FA                     l1471:	
  2210  00FA  083B               	movf	_mute_state,w
  2211  00FB  1D03               	btfss	3,2
  2212  00FC  28FE               	goto	u941
  2213  00FD  28FF               	goto	u940
  2214  00FE                     u941:	
  2215  00FE  2908               	goto	l120
  2216  00FF                     u940:	
  2217  00FF                     l1473:	
  2218                           
  2219                           ;main.c: 122: LM49450_write(0x00, mute_config);
  2220  00FF  083C               	movf	_mute_config,w
  2221  0100  00C5               	movwf	??_main
  2222  0101  0845               	movf	??_main,w
  2223  0102  00F1               	movwf	LM49450_write@data
  2224  0103  3000               	movlw	0
  2225  0104  3184  2461  3180   	fcall	_LM49450_write
  2226  0107  2923               	goto	l1485
  2227  0108                     l120:	
  2228                           
  2229                           ;main.c: 123: };main.c: 124: };main.c: 125: };main.c: 126: }
  2230  0108  2923               	goto	l1485
  2231  0109                     l1475:	
  2232                           
  2233                           ;main.c: 127: else {;main.c: 128: if(HPS_state == 2) {
  2234  0109  3002               	movlw	2
  2235  010A  063A               	xorwf	_HPS_state,w
  2236  010B  1D03               	btfss	3,2
  2237  010C  290E               	goto	u951
  2238  010D  290F               	goto	u950
  2239  010E                     u951:	
  2240  010E  2921               	goto	l1483
  2241  010F                     u950:	
  2242  010F                     l1477:	
  2243                           
  2244                           ;main.c: 129: if(volume_hp == 0 && mute_state == 0) {
  2245  010F  0848               	movf	_volume_hp,w
  2246  0110  1D03               	btfss	3,2
  2247  0111  2913               	goto	u961
  2248  0112  2914               	goto	u960
  2249  0113                     u961:	
  2250  0113  2921               	goto	l1483
  2251  0114                     u960:	
  2252  0114                     l1479:	
  2253  0114  083B               	movf	_mute_state,w
  2254  0115  1D03               	btfss	3,2
  2255  0116  2918               	goto	u971
  2256  0117  2919               	goto	u970
  2257  0118                     u971:	
  2258  0118  2921               	goto	l1483
  2259  0119                     u970:	
  2260  0119                     l1481:	
  2261                           
  2262                           ;main.c: 131: LM49450_write(0x00, mute_config);
  2263  0119  083C               	movf	_mute_config,w
  2264  011A  00C5               	movwf	??_main
  2265  011B  0845               	movf	??_main,w
  2266  011C  00F1               	movwf	LM49450_write@data
  2267  011D  3000               	movlw	0
  2268  011E  3184  2461  3180   	fcall	_LM49450_write
  2269  0121                     l1483:	
  2270                           
  2271                           ;main.c: 132: };main.c: 133: };main.c: 134: HPS_state = 0;
  2272  0121  0140               	movlb	0	; select bank0
  2273  0122  01BA               	clrf	_HPS_state
  2274  0123                     l1485:	
  2275                           
  2276                           ;main.c: 135: };main.c: 137: if(!RA5) {
  2277  0123  0140               	movlb	0	; select bank0
  2278  0124  1A8C               	btfsc	12,5	;volatile
  2279  0125  2927               	goto	u981
  2280  0126  2928               	goto	u980
  2281  0127                     u981:	
  2282  0127  29CC               	goto	l1531
  2283  0128                     u980:	
  2284  0128  29CE               	goto	l1533
  2285  0129                     l1489:	
  2286                           
  2287                           ;main.c: 141: vol_plus_time_start = get_time();
  2288  0129  3184  2481  3180   	fcall	_get_time
  2289  012C  0873               	movf	?_get_time+3,w
  2290  012D  0140               	movlb	0	; select bank0
  2291  012E  00AF               	movwf	_vol_plus_time_start+3
  2292  012F  0872               	movf	?_get_time+2,w
  2293  0130  00AE               	movwf	_vol_plus_time_start+2
  2294  0131  0871               	movf	?_get_time+1,w
  2295  0132  00AD               	movwf	_vol_plus_time_start+1
  2296  0133  0870               	movf	?_get_time,w
  2297  0134  00AC               	movwf	_vol_plus_time_start
  2298  0135                     l1491:	
  2299                           
  2300                           ;main.c: 142: vol_plus_state = 1;
  2301  0135  01B9               	clrf	_vol_plus_state
  2302  0136  0AB9               	incf	_vol_plus_state,f
  2303                           
  2304                           ;main.c: 143: break;
  2305  0137  29D9               	goto	l1537
  2306  0138                     l1493:	
  2307                           
  2308                           ;main.c: 146: if(timer_diff(vol_plus_time_start) >= 4) {
  2309  0138  082F               	movf	_vol_plus_time_start+3,w
  2310  0139  00F3               	movwf	timer_diff@t+3
  2311  013A  082E               	movf	_vol_plus_time_start+2,w
  2312  013B  00F2               	movwf	timer_diff@t+2
  2313  013C  082D               	movf	_vol_plus_time_start+1,w
  2314  013D  00F1               	movwf	timer_diff@t+1
  2315  013E  082C               	movf	_vol_plus_time_start,w
  2316  013F  00F0               	movwf	timer_diff@t
  2317  0140  3184  244B  3180   	fcall	_timer_diff
  2318  0143  0873               	movf	?_timer_diff+3,w
  2319  0144  1D03               	btfss	3,2
  2320  0145  2952               	goto	u990
  2321  0146  0872               	movf	?_timer_diff+2,w
  2322  0147  1D03               	btfss	3,2
  2323  0148  2952               	goto	u990
  2324  0149  0871               	movf	?_timer_diff+1,w
  2325  014A  1D03               	btfss	3,2
  2326  014B  2952               	goto	u990
  2327  014C  3004               	movlw	4
  2328  014D  0270               	subwf	?_timer_diff,w
  2329  014E  1C03               	btfss	3,0
  2330  014F  2951               	goto	u991
  2331  0150  2952               	goto	u990
  2332  0151                     u991:	
  2333  0151  29D9               	goto	l1537
  2334  0152                     u990:	
  2335  0152                     l1495:	
  2336                           
  2337                           ;main.c: 147: vol_plus_time_hold = get_time();
  2338  0152  3184  2481  3180   	fcall	_get_time
  2339  0155  0873               	movf	?_get_time+3,w
  2340  0156  0140               	movlb	0	; select bank0
  2341  0157  00AB               	movwf	_vol_plus_time_hold+3
  2342  0158  0872               	movf	?_get_time+2,w
  2343  0159  00AA               	movwf	_vol_plus_time_hold+2
  2344  015A  0871               	movf	?_get_time+1,w
  2345  015B  00A9               	movwf	_vol_plus_time_hold+1
  2346  015C  0870               	movf	?_get_time,w
  2347  015D  00A8               	movwf	_vol_plus_time_hold
  2348  015E                     l1497:	
  2349                           
  2350                           ;main.c: 148: vol_plus_state = 2;
  2351  015E  3002               	movlw	2
  2352  015F  00C5               	movwf	??_main
  2353  0160  0845               	movf	??_main,w
  2354  0161  00B9               	movwf	_vol_plus_state
  2355  0162                     l1499:	
  2356                           
  2357                           ;main.c: 149: if(HPS_state == 2) {
  2358  0162  3002               	movlw	2
  2359  0163  063A               	xorwf	_HPS_state,w
  2360  0164  1D03               	btfss	3,2
  2361  0165  2967               	goto	u1001
  2362  0166  2968               	goto	u1000
  2363  0167                     u1001:	
  2364  0167  2978               	goto	l1507
  2365  0168                     u1000:	
  2366  0168                     l1501:	
  2367                           
  2368                           ;main.c: 150: if((volume_hp < 31) && mute_state == 0) volume_hp++;
  2369  0168  301F               	movlw	31
  2370  0169  0248               	subwf	_volume_hp,w
  2371  016A  1803               	skipnc
  2372  016B  296D               	goto	u1011
  2373  016C  296E               	goto	u1010
  2374  016D                     u1011:	
  2375  016D  29D9               	goto	l130
  2376  016E                     u1010:	
  2377  016E                     l1503:	
  2378  016E  083B               	movf	_mute_state,w
  2379  016F  1D03               	btfss	3,2
  2380  0170  2972               	goto	u1021
  2381  0171  2973               	goto	u1020
  2382  0172                     u1021:	
  2383  0172  29D9               	goto	l130
  2384  0173                     u1020:	
  2385  0173                     l1505:	
  2386  0173  3001               	movlw	1
  2387  0174  00C5               	movwf	??_main
  2388  0175  0845               	movf	??_main,w
  2389  0176  07C8               	addwf	_volume_hp,f
  2390  0177  29D9               	goto	l1537
  2391  0178                     l1507:	
  2392                           
  2393                           ;main.c: 152: else if((volume_sp < 31) && mute_state == 0) volume_sp++;
  2394  0178  301F               	movlw	31
  2395  0179  024A               	subwf	_volume_sp,w
  2396  017A  1803               	skipnc
  2397  017B  297D               	goto	u1031
  2398  017C  297E               	goto	u1030
  2399  017D                     u1031:	
  2400  017D  29D9               	goto	l130
  2401  017E                     u1030:	
  2402  017E                     l1509:	
  2403  017E  083B               	movf	_mute_state,w
  2404  017F  1D03               	btfss	3,2
  2405  0180  2982               	goto	u1041
  2406  0181  2983               	goto	u1040
  2407  0182                     u1041:	
  2408  0182  29D9               	goto	l130
  2409  0183                     u1040:	
  2410  0183                     l1511:	
  2411  0183  3001               	movlw	1
  2412  0184  00C5               	movwf	??_main
  2413  0185  0845               	movf	??_main,w
  2414  0186  07CA               	addwf	_volume_sp,f
  2415  0187  29D9               	goto	l1537
  2416  0188                     l1513:	
  2417                           
  2418                           ;main.c: 157: if(timer_diff(vol_plus_time_hold) >= 20) {
  2419  0188  082B               	movf	_vol_plus_time_hold+3,w
  2420  0189  00F3               	movwf	timer_diff@t+3
  2421  018A  082A               	movf	_vol_plus_time_hold+2,w
  2422  018B  00F2               	movwf	timer_diff@t+2
  2423  018C  0829               	movf	_vol_plus_time_hold+1,w
  2424  018D  00F1               	movwf	timer_diff@t+1
  2425  018E  0828               	movf	_vol_plus_time_hold,w
  2426  018F  00F0               	movwf	timer_diff@t
  2427  0190  3184  244B  3180   	fcall	_timer_diff
  2428  0193  0873               	movf	?_timer_diff+3,w
  2429  0194  1D03               	btfss	3,2
  2430  0195  29A2               	goto	u1050
  2431  0196  0872               	movf	?_timer_diff+2,w
  2432  0197  1D03               	btfss	3,2
  2433  0198  29A2               	goto	u1050
  2434  0199  0871               	movf	?_timer_diff+1,w
  2435  019A  1D03               	btfss	3,2
  2436  019B  29A2               	goto	u1050
  2437  019C  3014               	movlw	20
  2438  019D  0270               	subwf	?_timer_diff,w
  2439  019E  1C03               	btfss	3,0
  2440  019F  29A1               	goto	u1051
  2441  01A0  29A2               	goto	u1050
  2442  01A1                     u1051:	
  2443  01A1  29D9               	goto	l1537
  2444  01A2                     u1050:	
  2445  01A2                     l1515:	
  2446                           
  2447                           ;main.c: 158: vol_plus_time_hold = get_time();
  2448  01A2  3184  2481  3180   	fcall	_get_time
  2449  01A5  0873               	movf	?_get_time+3,w
  2450  01A6  0140               	movlb	0	; select bank0
  2451  01A7  00AB               	movwf	_vol_plus_time_hold+3
  2452  01A8  0872               	movf	?_get_time+2,w
  2453  01A9  00AA               	movwf	_vol_plus_time_hold+2
  2454  01AA  0871               	movf	?_get_time+1,w
  2455  01AB  00A9               	movwf	_vol_plus_time_hold+1
  2456  01AC  0870               	movf	?_get_time,w
  2457  01AD  00A8               	movwf	_vol_plus_time_hold
  2458  01AE                     l1517:	
  2459                           
  2460                           ;main.c: 159: if(HPS_state == 2) {
  2461  01AE  3002               	movlw	2
  2462  01AF  063A               	xorwf	_HPS_state,w
  2463  01B0  1D03               	btfss	3,2
  2464  01B1  29B3               	goto	u1061
  2465  01B2  29B4               	goto	u1060
  2466  01B3                     u1061:	
  2467  01B3  29C0               	goto	l1525
  2468  01B4                     u1060:	
  2469  01B4                     l1519:	
  2470                           
  2471                           ;main.c: 160: if((volume_hp < 31) && mute_state == 0) volume_hp++;
  2472  01B4  301F               	movlw	31
  2473  01B5  0248               	subwf	_volume_hp,w
  2474  01B6  1803               	skipnc
  2475  01B7  29B9               	goto	u1071
  2476  01B8  29BA               	goto	u1070
  2477  01B9                     u1071:	
  2478  01B9  29D9               	goto	l1537
  2479  01BA                     u1070:	
  2480  01BA                     l1521:	
  2481  01BA  083B               	movf	_mute_state,w
  2482  01BB  1D03               	btfss	3,2
  2483  01BC  29BE               	goto	u1081
  2484  01BD  29BF               	goto	u1080
  2485  01BE                     u1081:	
  2486  01BE  29D9               	goto	l1537
  2487  01BF                     u1080:	
  2488  01BF  2973               	goto	l1505
  2489  01C0                     l1525:	
  2490                           
  2491                           ;main.c: 162: else if((volume_sp < 31) && mute_state == 0) volume_sp++;
  2492  01C0  301F               	movlw	31
  2493  01C1  024A               	subwf	_volume_sp,w
  2494  01C2  1803               	skipnc
  2495  01C3  29C5               	goto	u1091
  2496  01C4  29C6               	goto	u1090
  2497  01C5                     u1091:	
  2498  01C5  29D9               	goto	l1537
  2499  01C6                     u1090:	
  2500  01C6                     l1527:	
  2501  01C6  083B               	movf	_mute_state,w
  2502  01C7  1D03               	btfss	3,2
  2503  01C8  29CA               	goto	u1101
  2504  01C9  29CB               	goto	u1100
  2505  01CA                     u1101:	
  2506  01CA  29D9               	goto	l1537
  2507  01CB                     u1100:	
  2508  01CB  2983               	goto	l1511
  2509  01CC                     l1531:	
  2510                           
  2511                           ;main.c: 166: vol_plus_state = 0;
  2512  01CC  01B9               	clrf	_vol_plus_state
  2513                           
  2514                           ;main.c: 167: }
  2515  01CD  29D9               	goto	l1537
  2516  01CE                     l1533:	
  2517  01CE  0839               	movf	_vol_plus_state,w
  2518                           
  2519                           ; Switch size 1, requested type "simple"
  2520                           ; Number of cases is 3, Range of values is 0 to 2
  2521                           ; switch strategies available:
  2522                           ; Name         Instructions Cycles
  2523                           ; simple_byte           10     6 (average)
  2524                           ; direct_byte           12     6 (fixed)
  2525                           ; jumptable            260     6 (fixed)
  2526                           ;	Chosen strategy is simple_byte
  2527  01CF  3A00               	xorlw	0	; case 0
  2528  01D0  1903               	skipnz
  2529  01D1  2929               	goto	l1489
  2530  01D2  3A01               	xorlw	1	; case 1
  2531  01D3  1903               	skipnz
  2532  01D4  2938               	goto	l1493
  2533  01D5  3A03               	xorlw	3	; case 2
  2534  01D6  1903               	skipnz
  2535  01D7  2988               	goto	l1513
  2536  01D8  29CC               	goto	l1531
  2537  01D9                     l130:	
  2538  01D9                     l1537:	
  2539                           ;main.c: 168: }
  2540                           
  2541                           
  2542                           ;main.c: 171: };main.c: 173: if(!RA4) {
  2543  01D9  0140               	movlb	0	; select bank0
  2544  01DA  1A0C               	btfsc	12,4	;volatile
  2545  01DB  29DD               	goto	u1111
  2546  01DC  29DE               	goto	u1110
  2547  01DD                     u1111:	
  2548  01DD  2A7A               	goto	l1583
  2549  01DE                     u1110:	
  2550  01DE  2A7C               	goto	l1585
  2551  01DF                     l1541:	
  2552                           
  2553                           ;main.c: 176: vol_minus_time_start = get_time();
  2554  01DF  3184  2481  3180   	fcall	_get_time
  2555  01E2  0873               	movf	?_get_time+3,w
  2556  01E3  0140               	movlb	0	; select bank0
  2557  01E4  00A7               	movwf	_vol_minus_time_start+3
  2558  01E5  0872               	movf	?_get_time+2,w
  2559  01E6  00A6               	movwf	_vol_minus_time_start+2
  2560  01E7  0871               	movf	?_get_time+1,w
  2561  01E8  00A5               	movwf	_vol_minus_time_start+1
  2562  01E9  0870               	movf	?_get_time,w
  2563  01EA  00A4               	movwf	_vol_minus_time_start
  2564  01EB                     l1543:	
  2565                           
  2566                           ;main.c: 177: vol_minus_state = 1;
  2567  01EB  01B8               	clrf	_vol_minus_state
  2568  01EC  0AB8               	incf	_vol_minus_state,f
  2569                           
  2570                           ;main.c: 178: break;
  2571  01ED  2A87               	goto	l1589
  2572  01EE                     l1545:	
  2573                           
  2574                           ;main.c: 180: if(timer_diff(vol_minus_time_start) >= 4) {
  2575  01EE  0827               	movf	_vol_minus_time_start+3,w
  2576  01EF  00F3               	movwf	timer_diff@t+3
  2577  01F0  0826               	movf	_vol_minus_time_start+2,w
  2578  01F1  00F2               	movwf	timer_diff@t+2
  2579  01F2  0825               	movf	_vol_minus_time_start+1,w
  2580  01F3  00F1               	movwf	timer_diff@t+1
  2581  01F4  0824               	movf	_vol_minus_time_start,w
  2582  01F5  00F0               	movwf	timer_diff@t
  2583  01F6  3184  244B  3180   	fcall	_timer_diff
  2584  01F9  0873               	movf	?_timer_diff+3,w
  2585  01FA  1D03               	btfss	3,2
  2586  01FB  2A08               	goto	u1120
  2587  01FC  0872               	movf	?_timer_diff+2,w
  2588  01FD  1D03               	btfss	3,2
  2589  01FE  2A08               	goto	u1120
  2590  01FF  0871               	movf	?_timer_diff+1,w
  2591  0200  1D03               	btfss	3,2
  2592  0201  2A08               	goto	u1120
  2593  0202  3004               	movlw	4
  2594  0203  0270               	subwf	?_timer_diff,w
  2595  0204  1C03               	btfss	3,0
  2596  0205  2A07               	goto	u1121
  2597  0206  2A08               	goto	u1120
  2598  0207                     u1121:	
  2599  0207  2A87               	goto	l1589
  2600  0208                     u1120:	
  2601  0208                     l1547:	
  2602                           
  2603                           ;main.c: 181: vol_minus_time_hold = get_time();
  2604  0208  3184  2481  3180   	fcall	_get_time
  2605  020B  0873               	movf	?_get_time+3,w
  2606  020C  0140               	movlb	0	; select bank0
  2607  020D  00A3               	movwf	_vol_minus_time_hold+3
  2608  020E  0872               	movf	?_get_time+2,w
  2609  020F  00A2               	movwf	_vol_minus_time_hold+2
  2610  0210  0871               	movf	?_get_time+1,w
  2611  0211  00A1               	movwf	_vol_minus_time_hold+1
  2612  0212  0870               	movf	?_get_time,w
  2613  0213  00A0               	movwf	_vol_minus_time_hold
  2614  0214                     l1549:	
  2615                           
  2616                           ;main.c: 182: vol_minus_state = 2;
  2617  0214  3002               	movlw	2
  2618  0215  00C5               	movwf	??_main
  2619  0216  0845               	movf	??_main,w
  2620  0217  00B8               	movwf	_vol_minus_state
  2621  0218                     l1551:	
  2622                           
  2623                           ;main.c: 183: if(HPS_state == 2) {
  2624  0218  3002               	movlw	2
  2625  0219  063A               	xorwf	_HPS_state,w
  2626  021A  1D03               	btfss	3,2
  2627  021B  2A1D               	goto	u1131
  2628  021C  2A1E               	goto	u1130
  2629  021D                     u1131:	
  2630  021D  2A2B               	goto	l1559
  2631  021E                     u1130:	
  2632  021E                     l1553:	
  2633                           
  2634                           ;main.c: 184: if((volume_hp > 0) && mute_state == 0) volume_hp--;
  2635  021E  0848               	movf	_volume_hp,w
  2636  021F  1903               	btfsc	3,2
  2637  0220  2A22               	goto	u1141
  2638  0221  2A23               	goto	u1140
  2639  0222                     u1141:	
  2640  0222  2A87               	goto	l148
  2641  0223                     u1140:	
  2642  0223                     l1555:	
  2643  0223  083B               	movf	_mute_state,w
  2644  0224  1D03               	btfss	3,2
  2645  0225  2A27               	goto	u1151
  2646  0226  2A28               	goto	u1150
  2647  0227                     u1151:	
  2648  0227  2A87               	goto	l148
  2649  0228                     u1150:	
  2650  0228                     l1557:	
  2651  0228  3001               	movlw	1
  2652  0229  02C8               	subwf	_volume_hp,f
  2653  022A  2A87               	goto	l1589
  2654  022B                     l1559:	
  2655                           
  2656                           ;main.c: 186: else if((volume_sp > 0) && mute_state == 0) volume_sp--;
  2657  022B  084A               	movf	_volume_sp,w
  2658  022C  1903               	btfsc	3,2
  2659  022D  2A2F               	goto	u1161
  2660  022E  2A30               	goto	u1160
  2661  022F                     u1161:	
  2662  022F  2A87               	goto	l148
  2663  0230                     u1160:	
  2664  0230                     l1561:	
  2665  0230  083B               	movf	_mute_state,w
  2666  0231  1D03               	btfss	3,2
  2667  0232  2A34               	goto	u1171
  2668  0233  2A35               	goto	u1170
  2669  0234                     u1171:	
  2670  0234  2A87               	goto	l148
  2671  0235                     u1170:	
  2672  0235                     l1563:	
  2673  0235  3001               	movlw	1
  2674  0236  02CA               	subwf	_volume_sp,f
  2675  0237  2A87               	goto	l1589
  2676  0238                     l1565:	
  2677                           
  2678                           ;main.c: 190: if(timer_diff(vol_minus_time_hold) >= 20) {
  2679  0238  0823               	movf	_vol_minus_time_hold+3,w
  2680  0239  00F3               	movwf	timer_diff@t+3
  2681  023A  0822               	movf	_vol_minus_time_hold+2,w
  2682  023B  00F2               	movwf	timer_diff@t+2
  2683  023C  0821               	movf	_vol_minus_time_hold+1,w
  2684  023D  00F1               	movwf	timer_diff@t+1
  2685  023E  0820               	movf	_vol_minus_time_hold,w
  2686  023F  00F0               	movwf	timer_diff@t
  2687  0240  3184  244B  3180   	fcall	_timer_diff
  2688  0243  0873               	movf	?_timer_diff+3,w
  2689  0244  1D03               	btfss	3,2
  2690  0245  2A52               	goto	u1180
  2691  0246  0872               	movf	?_timer_diff+2,w
  2692  0247  1D03               	btfss	3,2
  2693  0248  2A52               	goto	u1180
  2694  0249  0871               	movf	?_timer_diff+1,w
  2695  024A  1D03               	btfss	3,2
  2696  024B  2A52               	goto	u1180
  2697  024C  3014               	movlw	20
  2698  024D  0270               	subwf	?_timer_diff,w
  2699  024E  1C03               	btfss	3,0
  2700  024F  2A51               	goto	u1181
  2701  0250  2A52               	goto	u1180
  2702  0251                     u1181:	
  2703  0251  2A87               	goto	l1589
  2704  0252                     u1180:	
  2705  0252                     l1567:	
  2706                           
  2707                           ;main.c: 191: vol_minus_time_hold = get_time();
  2708  0252  3184  2481  3180   	fcall	_get_time
  2709  0255  0873               	movf	?_get_time+3,w
  2710  0256  0140               	movlb	0	; select bank0
  2711  0257  00A3               	movwf	_vol_minus_time_hold+3
  2712  0258  0872               	movf	?_get_time+2,w
  2713  0259  00A2               	movwf	_vol_minus_time_hold+2
  2714  025A  0871               	movf	?_get_time+1,w
  2715  025B  00A1               	movwf	_vol_minus_time_hold+1
  2716  025C  0870               	movf	?_get_time,w
  2717  025D  00A0               	movwf	_vol_minus_time_hold
  2718  025E                     l1569:	
  2719                           
  2720                           ;main.c: 192: if(HPS_state == 2) {
  2721  025E  3002               	movlw	2
  2722  025F  063A               	xorwf	_HPS_state,w
  2723  0260  1D03               	btfss	3,2
  2724  0261  2A63               	goto	u1191
  2725  0262  2A64               	goto	u1190
  2726  0263                     u1191:	
  2727  0263  2A6F               	goto	l1577
  2728  0264                     u1190:	
  2729  0264                     l1571:	
  2730                           
  2731                           ;main.c: 193: if((volume_hp > 0) && mute_state == 0) volume_hp--;
  2732  0264  0848               	movf	_volume_hp,w
  2733  0265  1903               	btfsc	3,2
  2734  0266  2A68               	goto	u1201
  2735  0267  2A69               	goto	u1200
  2736  0268                     u1201:	
  2737  0268  2A87               	goto	l1589
  2738  0269                     u1200:	
  2739  0269                     l1573:	
  2740  0269  083B               	movf	_mute_state,w
  2741  026A  1D03               	btfss	3,2
  2742  026B  2A6D               	goto	u1211
  2743  026C  2A6E               	goto	u1210
  2744  026D                     u1211:	
  2745  026D  2A87               	goto	l1589
  2746  026E                     u1210:	
  2747  026E  2A28               	goto	l1557
  2748  026F                     l1577:	
  2749                           
  2750                           ;main.c: 195: else if((volume_sp > 0) && mute_state == 0) volume_sp--;
  2751  026F  084A               	movf	_volume_sp,w
  2752  0270  1903               	btfsc	3,2
  2753  0271  2A73               	goto	u1221
  2754  0272  2A74               	goto	u1220
  2755  0273                     u1221:	
  2756  0273  2A87               	goto	l1589
  2757  0274                     u1220:	
  2758  0274                     l1579:	
  2759  0274  083B               	movf	_mute_state,w
  2760  0275  1D03               	btfss	3,2
  2761  0276  2A78               	goto	u1231
  2762  0277  2A79               	goto	u1230
  2763  0278                     u1231:	
  2764  0278  2A87               	goto	l1589
  2765  0279                     u1230:	
  2766  0279  2A35               	goto	l1563
  2767  027A                     l1583:	
  2768                           
  2769                           ;main.c: 199: vol_minus_state = 0;
  2770  027A  01B8               	clrf	_vol_minus_state
  2771                           
  2772                           ;main.c: 200: }
  2773  027B  2A87               	goto	l1589
  2774  027C                     l1585:	
  2775  027C  0838               	movf	_vol_minus_state,w
  2776                           
  2777                           ; Switch size 1, requested type "simple"
  2778                           ; Number of cases is 3, Range of values is 0 to 2
  2779                           ; switch strategies available:
  2780                           ; Name         Instructions Cycles
  2781                           ; simple_byte           10     6 (average)
  2782                           ; direct_byte           12     6 (fixed)
  2783                           ; jumptable            260     6 (fixed)
  2784                           ;	Chosen strategy is simple_byte
  2785  027D  3A00               	xorlw	0	; case 0
  2786  027E  1903               	skipnz
  2787  027F  29DF               	goto	l1541
  2788  0280  3A01               	xorlw	1	; case 1
  2789  0281  1903               	skipnz
  2790  0282  29EE               	goto	l1545
  2791  0283  3A03               	xorlw	3	; case 2
  2792  0284  1903               	skipnz
  2793  0285  2A38               	goto	l1565
  2794  0286  2A7A               	goto	l1583
  2795  0287                     l148:	
  2796  0287                     l1589:	
  2797                           ;main.c: 201: }
  2798                           
  2799                           
  2800                           ;main.c: 204: };main.c: 207: if((vol_plus_state == 2) && (vol_minus_state == 2)) {
  2801  0287  3002               	movlw	2
  2802  0288  0140               	movlb	0	; select bank0
  2803  0289  0639               	xorwf	_vol_plus_state,w
  2804  028A  1D03               	btfss	3,2
  2805  028B  2A8D               	goto	u1241
  2806  028C  2A8E               	goto	u1240
  2807  028D                     u1241:	
  2808  028D  2AC0               	goto	l1607
  2809  028E                     u1240:	
  2810  028E                     l1591:	
  2811  028E  3002               	movlw	2
  2812  028F  0638               	xorwf	_vol_minus_state,w
  2813  0290  1D03               	btfss	3,2
  2814  0291  2A93               	goto	u1251
  2815  0292  2A94               	goto	u1250
  2816  0293                     u1251:	
  2817  0293  2AC0               	goto	l1607
  2818  0294                     u1250:	
  2819  0294  2AB2               	goto	l1605
  2820  0295                     l1595:	
  2821                           
  2822                           ;main.c: 211: LM49450_write(0x00, (mute_config | 0b100));
  2823  0295  083C               	movf	_mute_config,w
  2824  0296  3804               	iorlw	4
  2825  0297  00C5               	movwf	??_main
  2826  0298  0845               	movf	??_main,w
  2827  0299  00F1               	movwf	LM49450_write@data
  2828  029A  3000               	movlw	0
  2829  029B  3184  2461  3180   	fcall	_LM49450_write
  2830  029E                     l1597:	
  2831                           
  2832                           ;main.c: 212: mute_state = 1;
  2833  029E  0140               	movlb	0	; select bank0
  2834  029F  01BB               	clrf	_mute_state
  2835  02A0  0ABB               	incf	_mute_state,f
  2836                           
  2837                           ;main.c: 213: break;
  2838  02A1  2AD0               	goto	l1615
  2839  02A2                     l1599:	
  2840                           
  2841                           ;main.c: 218: LM49450_write(0x00, mute_config);
  2842  02A2  083C               	movf	_mute_config,w
  2843  02A3  00C5               	movwf	??_main
  2844  02A4  0845               	movf	??_main,w
  2845  02A5  00F1               	movwf	LM49450_write@data
  2846  02A6  3000               	movlw	0
  2847  02A7  3184  2461  3180   	fcall	_LM49450_write
  2848  02AA                     l1601:	
  2849                           
  2850                           ;main.c: 219: mute_state = 3;
  2851  02AA  3003               	movlw	3
  2852  02AB  0140               	movlb	0	; select bank0
  2853  02AC  00C5               	movwf	??_main
  2854  02AD  0845               	movf	??_main,w
  2855  02AE  00BB               	movwf	_mute_state
  2856                           
  2857                           ;main.c: 220: break;
  2858  02AF  2AD0               	goto	l1615
  2859  02B0                     l1603:	
  2860                           
  2861                           ;main.c: 225: mute_state = 0;
  2862  02B0  01BB               	clrf	_mute_state
  2863                           
  2864                           ;main.c: 226: }
  2865  02B1  2AD0               	goto	l1615
  2866  02B2                     l1605:	
  2867  02B2  083B               	movf	_mute_state,w
  2868                           
  2869                           ; Switch size 1, requested type "simple"
  2870                           ; Number of cases is 4, Range of values is 0 to 3
  2871                           ; switch strategies available:
  2872                           ; Name         Instructions Cycles
  2873                           ; simple_byte           13     7 (average)
  2874                           ; direct_byte           14     6 (fixed)
  2875                           ; jumptable            260     6 (fixed)
  2876                           ;	Chosen strategy is simple_byte
  2877  02B3  3A00               	xorlw	0	; case 0
  2878  02B4  1903               	skipnz
  2879  02B5  2A95               	goto	l1595
  2880  02B6  3A01               	xorlw	1	; case 1
  2881  02B7  1903               	skipnz
  2882  02B8  2AD0               	goto	l1615
  2883  02B9  3A03               	xorlw	3	; case 2
  2884  02BA  1903               	skipnz
  2885  02BB  2AA2               	goto	l1599
  2886  02BC  3A01               	xorlw	1	; case 3
  2887  02BD  1903               	skipnz
  2888  02BE  2AD0               	goto	l1615
  2889  02BF  2AB0               	goto	l1603
  2890  02C0                     l1607:	
  2891                           
  2892                           ;main.c: 228: else {;main.c: 229: if(mute_state == 1) {
  2893  02C0  033B               	decf	_mute_state,w
  2894  02C1  1D03               	btfss	3,2
  2895  02C2  2AC4               	goto	u1261
  2896  02C3  2AC5               	goto	u1260
  2897  02C4                     u1261:	
  2898  02C4  2AC9               	goto	l1611
  2899  02C5                     u1260:	
  2900  02C5                     l1609:	
  2901                           
  2902                           ;main.c: 230: mute_state = 2;
  2903  02C5  3002               	movlw	2
  2904  02C6  00C5               	movwf	??_main
  2905  02C7  0845               	movf	??_main,w
  2906  02C8  00BB               	movwf	_mute_state
  2907  02C9                     l1611:	
  2908                           
  2909                           ;main.c: 231: };main.c: 232: if(mute_state == 3) {
  2910  02C9  3003               	movlw	3
  2911  02CA  063B               	xorwf	_mute_state,w
  2912  02CB  1D03               	btfss	3,2
  2913  02CC  2ACE               	goto	u1271
  2914  02CD  2ACF               	goto	u1270
  2915  02CE                     u1271:	
  2916  02CE  2AD0               	goto	l1615
  2917  02CF                     u1270:	
  2918  02CF  2AB0               	goto	l1603
  2919  02D0                     l1615:	
  2920                           
  2921                           ;main.c: 234: };main.c: 235: };main.c: 238: if((volume_sp != volume_sp_prev) && mute_sta
      +                          te == 0) {
  2922  02D0  084A               	movf	_volume_sp,w
  2923  02D1  0649               	xorwf	_volume_sp_prev,w
  2924  02D2  1903               	skipnz
  2925  02D3  2AD5               	goto	u1281
  2926  02D4  2AD6               	goto	u1280
  2927  02D5                     u1281:	
  2928  02D5  2AFB               	goto	l1627
  2929  02D6                     u1280:	
  2930  02D6                     l1617:	
  2931  02D6  083B               	movf	_mute_state,w
  2932  02D7  1D03               	btfss	3,2
  2933  02D8  2ADA               	goto	u1291
  2934  02D9  2ADB               	goto	u1290
  2935  02DA                     u1291:	
  2936  02DA  2AFB               	goto	l1627
  2937  02DB                     u1290:	
  2938  02DB                     l1619:	
  2939                           
  2940                           ;main.c: 239: LM49450_write(0x08, volume_sp);
  2941  02DB  084A               	movf	_volume_sp,w
  2942  02DC  00C5               	movwf	??_main
  2943  02DD  0845               	movf	??_main,w
  2944  02DE  00F1               	movwf	LM49450_write@data
  2945  02DF  3008               	movlw	8
  2946  02E0  3184  2461  3180   	fcall	_LM49450_write
  2947  02E3                     l1621:	
  2948                           
  2949                           ;main.c: 240: if(volume_sp == 0) {
  2950  02E3  0140               	movlb	0	; select bank0
  2951  02E4  084A               	movf	_volume_sp,w
  2952  02E5  1D03               	btfss	3,2
  2953  02E6  2AE8               	goto	u1301
  2954  02E7  2AE9               	goto	u1300
  2955  02E8                     u1301:	
  2956  02E8  2AF3               	goto	l1625
  2957  02E9                     u1300:	
  2958  02E9                     l1623:	
  2959                           
  2960                           ;main.c: 241: LM49450_write(0x00, (mute_config | 0b00000100));
  2961  02E9  083C               	movf	_mute_config,w
  2962  02EA  3804               	iorlw	4
  2963  02EB  00C5               	movwf	??_main
  2964  02EC  0845               	movf	??_main,w
  2965  02ED  00F1               	movwf	LM49450_write@data
  2966  02EE  3000               	movlw	0
  2967  02EF  3184  2461  3180   	fcall	_LM49450_write
  2968                           
  2969                           ;main.c: 242: }
  2970  02F2  2AFB               	goto	l1627
  2971  02F3                     l1625:	
  2972                           
  2973                           ;main.c: 243: else {;main.c: 244: LM49450_write(0x00, mute_config);
  2974  02F3  083C               	movf	_mute_config,w
  2975  02F4  00C5               	movwf	??_main
  2976  02F5  0845               	movf	??_main,w
  2977  02F6  00F1               	movwf	LM49450_write@data
  2978  02F7  3000               	movlw	0
  2979  02F8  3184  2461  3180   	fcall	_LM49450_write
  2980  02FB                     l1627:	
  2981                           
  2982                           ;main.c: 245: };main.c: 246: };main.c: 248: if((volume_hp != volume_hp_prev) && mute_sta
      +                          te == 0) {
  2983  02FB  0140               	movlb	0	; select bank0
  2984  02FC  0848               	movf	_volume_hp,w
  2985  02FD  0647               	xorwf	_volume_hp_prev,w
  2986  02FE  1903               	skipnz
  2987  02FF  2B01               	goto	u1311
  2988  0300  2B02               	goto	u1310
  2989  0301                     u1311:	
  2990  0301  2B27               	goto	l1639
  2991  0302                     u1310:	
  2992  0302                     l1629:	
  2993  0302  083B               	movf	_mute_state,w
  2994  0303  1D03               	btfss	3,2
  2995  0304  2B06               	goto	u1321
  2996  0305  2B07               	goto	u1320
  2997  0306                     u1321:	
  2998  0306  2B27               	goto	l1639
  2999  0307                     u1320:	
  3000  0307                     l1631:	
  3001                           
  3002                           ;main.c: 249: LM49450_write(0x07, volume_hp);
  3003  0307  0848               	movf	_volume_hp,w
  3004  0308  00C5               	movwf	??_main
  3005  0309  0845               	movf	??_main,w
  3006  030A  00F1               	movwf	LM49450_write@data
  3007  030B  3007               	movlw	7
  3008  030C  3184  2461  3180   	fcall	_LM49450_write
  3009  030F                     l1633:	
  3010                           
  3011                           ;main.c: 250: if(volume_hp == 0) {
  3012  030F  0140               	movlb	0	; select bank0
  3013  0310  0848               	movf	_volume_hp,w
  3014  0311  1D03               	btfss	3,2
  3015  0312  2B14               	goto	u1331
  3016  0313  2B15               	goto	u1330
  3017  0314                     u1331:	
  3018  0314  2B1F               	goto	l1637
  3019  0315                     u1330:	
  3020  0315                     l1635:	
  3021                           
  3022                           ;main.c: 251: LM49450_write(0x00, (mute_config | 0b00000100));
  3023  0315  083C               	movf	_mute_config,w
  3024  0316  3804               	iorlw	4
  3025  0317  00C5               	movwf	??_main
  3026  0318  0845               	movf	??_main,w
  3027  0319  00F1               	movwf	LM49450_write@data
  3028  031A  3000               	movlw	0
  3029  031B  3184  2461  3180   	fcall	_LM49450_write
  3030                           
  3031                           ;main.c: 252: }
  3032  031E  2B27               	goto	l1639
  3033  031F                     l1637:	
  3034                           
  3035                           ;main.c: 253: else {;main.c: 254: LM49450_write(0x00, mute_config);
  3036  031F  083C               	movf	_mute_config,w
  3037  0320  00C5               	movwf	??_main
  3038  0321  0845               	movf	??_main,w
  3039  0322  00F1               	movwf	LM49450_write@data
  3040  0323  3000               	movlw	0
  3041  0324  3184  2461  3180   	fcall	_LM49450_write
  3042  0327                     l1639:	
  3043                           
  3044                           ;main.c: 255: };main.c: 256: };main.c: 258: volume_sp_prev = volume_sp;
  3045  0327  0140               	movlb	0	; select bank0
  3046  0328  084A               	movf	_volume_sp,w
  3047  0329  00C5               	movwf	??_main
  3048  032A  0845               	movf	??_main,w
  3049  032B  00C9               	movwf	_volume_sp_prev
  3050  032C                     l1641:	
  3051                           
  3052                           ;main.c: 259: volume_hp_prev = volume_hp;
  3053  032C  0848               	movf	_volume_hp,w
  3054  032D  00C5               	movwf	??_main
  3055  032E  0845               	movf	??_main,w
  3056  032F  00C7               	movwf	_volume_hp_prev
  3057  0330  28B8               	goto	l1455
  3058  0331  3180  281C         	ljmp	start
  3059  0333                     __end_of_main:	
  3060                           
  3061                           	psect	text1
  3062  044B                     __ptext1:	
  3063 ;; *************** function _timer_diff *****************
  3064 ;; Defined at:
  3065 ;;		line 17 in file "time.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  t               4    0[COMMON] unsigned long 
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;		None
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  4    0[COMMON] unsigned long 
  3072 ;; Registers used:
  3073 ;;		wreg
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3079 ;;      Params:         4       0       0       0       0       0       0       0
  3080 ;;      Locals:         0       0       0       0       0       0       0       0
  3081 ;;      Temps:          4       0       0       0       0       0       0       0
  3082 ;;      Totals:         8       0       0       0       0       0       0       0
  3083 ;;Total ram usage:        8 bytes
  3084 ;; Hardware stack levels used:    1
  3085 ;; Hardware stack levels required when called:    1
  3086 ;; This function calls:
  3087 ;;		Nothing
  3088 ;; This function is called by:
  3089 ;;		_main
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           
  3094                           ;psect for function _timer_diff
  3095  044B                     _timer_diff:	
  3096  044B                     l1415:	
  3097                           ;incstack = 0
  3098                           ; Regs used in _timer_diff: [wreg]
  3099                           
  3100                           
  3101                           ;time.c: 18: return timer_counter - t;
  3102  044B  0870               	movf	timer_diff@t,w
  3103  044C  0140               	movlb	0	; select bank0
  3104  044D  0234               	subwf	_timer_counter,w
  3105  044E  00F4               	movwf	??_timer_diff
  3106  044F  0871               	movf	timer_diff@t+1,w
  3107  0450  3B35               	subwfb	_timer_counter+1,w
  3108  0451  00F5               	movwf	??_timer_diff+1
  3109  0452  0872               	movf	timer_diff@t+2,w
  3110  0453  3B36               	subwfb	_timer_counter+2,w
  3111  0454  00F6               	movwf	??_timer_diff+2
  3112  0455  0873               	movf	timer_diff@t+3,w
  3113  0456  3B37               	subwfb	_timer_counter+3,w
  3114  0457  00F7               	movwf	??_timer_diff+3
  3115  0458  0877               	movf	??_timer_diff+3,w
  3116  0459  00F3               	movwf	?_timer_diff+3
  3117  045A  0876               	movf	??_timer_diff+2,w
  3118  045B  00F2               	movwf	?_timer_diff+2
  3119  045C  0875               	movf	??_timer_diff+1,w
  3120  045D  00F1               	movwf	?_timer_diff+1
  3121  045E  0874               	movf	??_timer_diff,w
  3122  045F  00F0               	movwf	?_timer_diff
  3123  0460                     l262:	
  3124  0460  0008               	return
  3125  0461                     __end_of_timer_diff:	
  3126                           
  3127                           	psect	text2
  3128  0481                     __ptext2:	
  3129 ;; *************** function _get_time *****************
  3130 ;; Defined at:
  3131 ;;		line 13 in file "time.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;		None
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  4    0[COMMON] unsigned long 
  3138 ;; Registers used:
  3139 ;;		wreg
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3145 ;;      Params:         4       0       0       0       0       0       0       0
  3146 ;;      Locals:         0       0       0       0       0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0       0       0       0
  3148 ;;      Totals:         4       0       0       0       0       0       0       0
  3149 ;;Total ram usage:        4 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    1
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_main
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           
  3160                           ;psect for function _get_time
  3161  0481                     _get_time:	
  3162  0481                     l1411:	
  3163                           ;incstack = 0
  3164                           ; Regs used in _get_time: [wreg]
  3165                           
  3166                           
  3167                           ;time.c: 14: return timer_counter;
  3168  0481  0140               	movlb	0	; select bank0
  3169  0482  0837               	movf	_timer_counter+3,w
  3170  0483  00F3               	movwf	?_get_time+3
  3171  0484  0836               	movf	_timer_counter+2,w
  3172  0485  00F2               	movwf	?_get_time+2
  3173  0486  0835               	movf	_timer_counter+1,w
  3174  0487  00F1               	movwf	?_get_time+1
  3175  0488  0834               	movf	_timer_counter,w
  3176  0489  00F0               	movwf	?_get_time
  3177  048A                     l259:	
  3178  048A  0008               	return
  3179  048B                     __end_of_get_time:	
  3180                           
  3181                           	psect	text3
  3182  04A5                     __ptext3:	
  3183 ;; *************** function _PPS_unlock *****************
  3184 ;; Defined at:
  3185 ;;		line 11 in file "PPS.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;		None
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, status,2
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3199 ;;      Params:         0       0       0       0       0       0       0       0
  3200 ;;      Locals:         0       0       0       0       0       0       0       0
  3201 ;;      Temps:          0       0       0       0       0       0       0       0
  3202 ;;      Totals:         0       0       0       0       0       0       0       0
  3203 ;;Total ram usage:        0 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    1
  3206 ;; This function calls:
  3207 ;;		Nothing
  3208 ;; This function is called by:
  3209 ;;		_main
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           
  3214                           ;psect for function _PPS_unlock
  3215  04A5                     _PPS_unlock:	
  3216  04A5                     l1341:	
  3217                           ;incstack = 0
  3218                           ; Regs used in _PPS_unlock: [wreg+status,2]
  3219                           
  3220                           
  3221                           ;PPS.c: 12: PPSLOCK = 0x55;
  3222  04A5  3055               	movlw	85
  3223  04A6  017D               	movlb	61	; select bank61
  3224  04A7  008F               	movwf	15	;volsfr
  3225                           
  3226                           ;PPS.c: 13: PPSLOCK = 0xAA;
  3227  04A8  30AA               	movlw	170
  3228  04A9  008F               	movwf	15	;volsfr
  3229  04AA                     l1343:	
  3230                           
  3231                           ;PPS.c: 14: PPSLOCK = 0;
  3232  04AA  018F               	clrf	15	;volsfr
  3233  04AB                     l187:	
  3234  04AB  0008               	return
  3235  04AC                     __end_of_PPS_unlock:	
  3236                           
  3237                           	psect	text4
  3238  0495                     __ptext4:	
  3239 ;; *************** function _PPS_lock *****************
  3240 ;; Defined at:
  3241 ;;		line 17 in file "PPS.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;		None
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;		None
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  1    wreg      void 
  3248 ;; Registers used:
  3249 ;;		wreg
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3255 ;;      Params:         0       0       0       0       0       0       0       0
  3256 ;;      Locals:         0       0       0       0       0       0       0       0
  3257 ;;      Temps:          0       0       0       0       0       0       0       0
  3258 ;;      Totals:         0       0       0       0       0       0       0       0
  3259 ;;Total ram usage:        0 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:    1
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_main
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           
  3270                           ;psect for function _PPS_lock
  3271  0495                     _PPS_lock:	
  3272  0495                     l1345:	
  3273                           ;incstack = 0
  3274                           ; Regs used in _PPS_lock: [wreg]
  3275                           
  3276                           
  3277                           ;PPS.c: 18: PPSLOCK = 0x55;
  3278  0495  3055               	movlw	85
  3279  0496  017D               	movlb	61	; select bank61
  3280  0497  008F               	movwf	15	;volsfr
  3281                           
  3282                           ;PPS.c: 19: PPSLOCK = 0xAA;
  3283  0498  30AA               	movlw	170
  3284  0499  008F               	movwf	15	;volsfr
  3285                           
  3286                           ;PPS.c: 20: PPSLOCK = 1;
  3287  049A  3001               	movlw	1
  3288  049B  008F               	movwf	15	;volsfr
  3289  049C                     l190:	
  3290  049C  0008               	return
  3291  049D                     __end_of_PPS_lock:	
  3292                           
  3293                           	psect	text5
  3294  042C                     __ptext5:	
  3295 ;; *************** function _PIC_SETUP *****************
  3296 ;; Defined at:
  3297 ;;		line 16 in file "main.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;		None
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      void 
  3304 ;; Registers used:
  3305 ;;		wreg, status,2, status,0
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3311 ;;      Params:         0       0       0       0       0       0       0       0
  3312 ;;      Locals:         0       0       0       0       0       0       0       0
  3313 ;;      Temps:          0       0       0       0       0       0       0       0
  3314 ;;      Totals:         0       0       0       0       0       0       0       0
  3315 ;;Total ram usage:        0 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    1
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_main
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           
  3326                           ;psect for function _PIC_SETUP
  3327  042C                     _PIC_SETUP:	
  3328  042C                     l1315:	
  3329                           ;incstack = 0
  3330                           ; Regs used in _PIC_SETUP: [wreg+status,2+status,0]
  3331                           
  3332                           
  3333                           ;main.c: 19: TRISA = 0xFF;
  3334  042C  30FF               	movlw	255
  3335  042D  0140               	movlb	0	; select bank0
  3336  042E  0092               	movwf	18	;volatile
  3337                           
  3338                           ;main.c: 20: TRISC = 0xFF;
  3339  042F  30FF               	movlw	255
  3340  0430  0094               	movwf	20	;volatile
  3341  0431                     l1317:	
  3342                           
  3343                           ;main.c: 21: ANSELA = 0;
  3344  0431  017E               	movlb	62	; select bank62
  3345  0432  01B8               	clrf	56	;volatile
  3346  0433                     l1319:	
  3347                           
  3348                           ;main.c: 22: ANSELC = 0;
  3349  0433  01CE               	clrf	78	;volatile
  3350                           
  3351                           ;main.c: 23: WPUA = 0b00110000;
  3352  0434  3030               	movlw	48
  3353  0435  00B9               	movwf	57	;volatile
  3354                           
  3355                           ;main.c: 24: WPUC = 0b00011000;
  3356  0436  3018               	movlw	24
  3357  0437  00CF               	movwf	79	;volatile
  3358  0438                     l1321:	
  3359                           
  3360                           ;main.c: 27: T1CONbits.CKPS = 0b00;
  3361  0438  30CF               	movlw	-49
  3362  0439  0144               	movlb	4	; select bank4
  3363  043A  058E               	andwf	14,f	;volatile
  3364  043B                     l1323:	
  3365                           
  3366                           ;main.c: 28: T1CONbits.nSYNC = 0;
  3367  043B  110E               	bcf	14,2	;volatile
  3368  043C                     l1325:	
  3369                           
  3370                           ;main.c: 29: T1CONbits.RD16 = 1;
  3371  043C  148E               	bsf	14,1	;volatile
  3372  043D                     l1327:	
  3373                           
  3374                           ;main.c: 30: T1GCONbits.GE = 0;
  3375  043D  138F               	bcf	15,7	;volatile
  3376  043E                     l1329:	
  3377                           
  3378                           ;main.c: 31: T1CLK = 0b00000100;
  3379  043E  3004               	movlw	4
  3380  043F  0091               	movwf	17	;volatile
  3381  0440                     l1331:	
  3382                           
  3383                           ;main.c: 32: TMR1 = 65228;
  3384  0440  30FE               	movlw	254
  3385  0441  008D               	movwf	13	;volatile
  3386  0442  30CC               	movlw	204
  3387  0443  008C               	movwf	12	;volatile
  3388  0444                     l1333:	
  3389                           
  3390                           ;main.c: 33: PIE4bits.TMR1IE = 1;
  3391  0444  014E               	movlb	14	; select bank14
  3392  0445  141A               	bsf	26,0	;volatile
  3393  0446                     l1335:	
  3394                           
  3395                           ;main.c: 34: T1CONbits.ON = 1;
  3396  0446  0144               	movlb	4	; select bank4
  3397  0447  140E               	bsf	14,0	;volatile
  3398  0448                     l1337:	
  3399                           
  3400                           ;main.c: 36: INTCONbits.GIE = 1;
  3401  0448  178B               	bsf	11,7	;volatile
  3402  0449                     l1339:	
  3403                           
  3404                           ;main.c: 37: INTCONbits.PEIE = 1;
  3405  0449  170B               	bsf	11,6	;volatile
  3406  044A                     l71:	
  3407  044A  0008               	return
  3408  044B                     __end_of_PIC_SETUP:	
  3409                           
  3410                           	psect	text6
  3411  048B                     __ptext6:	
  3412 ;; *************** function _LM49450_analog_init *****************
  3413 ;; Defined at:
  3414 ;;		line 55 in file "LM49450.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  reg0_analog     1    0        unsigned char 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      unsigned char 
  3421 ;; Registers used:
  3422 ;;		wreg, status,2, status,0, pclath, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3428 ;;      Params:         0       0       0       0       0       0       0       0
  3429 ;;      Locals:         1       0       0       0       0       0       0       0
  3430 ;;      Temps:          1       0       0       0       0       0       0       0
  3431 ;;      Totals:         2       0       0       0       0       0       0       0
  3432 ;;Total ram usage:        2 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    4
  3435 ;; This function calls:
  3436 ;;		_LM49450_write
  3437 ;; This function is called by:
  3438 ;;		_main
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           
  3443                           ;psect for function _LM49450_analog_init
  3444  048B                     _LM49450_analog_init:	
  3445  048B                     l1387:	
  3446                           ;incstack = 0
  3447                           ; Regs used in _LM49450_analog_init: [wreg+status,2+status,0+pclath+cstack]
  3448                           
  3449  048B                     l1389:	
  3450                           
  3451                           ;LM49450.c: 57: LM49450_write(0x00, reg0_analog);
  3452  048B  302B               	movlw	43
  3453  048C  00F3               	movwf	??_LM49450_analog_init
  3454  048D  0873               	movf	??_LM49450_analog_init,w
  3455  048E  00F1               	movwf	LM49450_write@data
  3456  048F  3000               	movlw	0
  3457  0490  3184  2461  3184   	fcall	_LM49450_write
  3458  0493                     l1391:	
  3459                           
  3460                           ;LM49450.c: 59: return reg0_analog;
  3461  0493  302B               	movlw	43
  3462  0494                     l283:	
  3463  0494  0008               	return
  3464  0495                     __end_of_LM49450_analog_init:	
  3465                           
  3466                           	psect	text7
  3467  03E2                     __ptext7:	
  3468 ;; *************** function _LM49450_Wii_init *****************
  3469 ;; Defined at:
  3470 ;;		line 33 in file "LM49450.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;		None
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;  reg0_Wii        1    0        unsigned char 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      unsigned char 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0, pclath, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3484 ;;      Params:         0       0       0       0       0       0       0       0
  3485 ;;      Locals:         1       0       0       0       0       0       0       0
  3486 ;;      Temps:          1       0       0       0       0       0       0       0
  3487 ;;      Totals:         2       0       0       0       0       0       0       0
  3488 ;;Total ram usage:        2 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    4
  3491 ;; This function calls:
  3492 ;;		_LM49450_write
  3493 ;; This function is called by:
  3494 ;;		_main
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           
  3499                           ;psect for function _LM49450_Wii_init
  3500  03E2                     _LM49450_Wii_init:	
  3501  03E2                     l1355:	
  3502                           ;incstack = 0
  3503                           ; Regs used in _LM49450_Wii_init: [wreg+status,2+status,0+pclath+cstack]
  3504                           
  3505  03E2                     l1357:	
  3506                           
  3507                           ;LM49450.c: 35: LM49450_write(0x00, reg0_Wii);
  3508  03E2  3029               	movlw	41
  3509  03E3  00F3               	movwf	??_LM49450_Wii_init
  3510  03E4  0873               	movf	??_LM49450_Wii_init,w
  3511  03E5  00F1               	movwf	LM49450_write@data
  3512  03E6  3000               	movlw	0
  3513  03E7  3184  2461  3183   	fcall	_LM49450_write
  3514  03EA                     l1359:	
  3515                           
  3516                           ;LM49450.c: 36: LM49450_write(0x01, 0b00000001);
  3517  03EA  01F1               	clrf	LM49450_write@data
  3518  03EB  0AF1               	incf	LM49450_write@data,f
  3519  03EC  3001               	movlw	1
  3520  03ED  3184  2461  3183   	fcall	_LM49450_write
  3521  03F0                     l1361:	
  3522                           
  3523                           ;LM49450.c: 37: LM49450_write(0x02, 0x4B);
  3524  03F0  304B               	movlw	75
  3525  03F1  00F3               	movwf	??_LM49450_Wii_init
  3526  03F2  0873               	movf	??_LM49450_Wii_init,w
  3527  03F3  00F1               	movwf	LM49450_write@data
  3528  03F4  3002               	movlw	2
  3529  03F5  3184  2461  3183   	fcall	_LM49450_write
  3530  03F8                     l1363:	
  3531                           
  3532                           ;LM49450.c: 38: LM49450_write(0x03, 0b01110001);
  3533  03F8  3071               	movlw	113
  3534  03F9  00F3               	movwf	??_LM49450_Wii_init
  3535  03FA  0873               	movf	??_LM49450_Wii_init,w
  3536  03FB  00F1               	movwf	LM49450_write@data
  3537  03FC  3003               	movlw	3
  3538  03FD  3184  2461  3183   	fcall	_LM49450_write
  3539  0400                     l1365:	
  3540                           
  3541                           ;LM49450.c: 39: LM49450_write(0x04, 0b00000000);
  3542  0400  01F1               	clrf	LM49450_write@data
  3543  0401  3004               	movlw	4
  3544  0402  3184  2461  3183   	fcall	_LM49450_write
  3545  0405                     l1367:	
  3546                           
  3547                           ;LM49450.c: 41: return reg0_Wii;
  3548  0405  3029               	movlw	41
  3549  0406                     l277:	
  3550  0406  0008               	return
  3551  0407                     __end_of_LM49450_Wii_init:	
  3552                           
  3553                           	psect	text8
  3554  03BB                     __ptext8:	
  3555 ;; *************** function _LM49450_PS2_init *****************
  3556 ;; Defined at:
  3557 ;;		line 44 in file "LM49450.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;		None
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;  reg0_PS2        1    0        unsigned char 
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  1    wreg      unsigned char 
  3564 ;; Registers used:
  3565 ;;		wreg, status,2, status,0, pclath, cstack
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3571 ;;      Params:         0       0       0       0       0       0       0       0
  3572 ;;      Locals:         1       0       0       0       0       0       0       0
  3573 ;;      Temps:          1       0       0       0       0       0       0       0
  3574 ;;      Totals:         2       0       0       0       0       0       0       0
  3575 ;;Total ram usage:        2 bytes
  3576 ;; Hardware stack levels used:    1
  3577 ;; Hardware stack levels required when called:    4
  3578 ;; This function calls:
  3579 ;;		_LM49450_write
  3580 ;; This function is called by:
  3581 ;;		_main
  3582 ;; This function uses a non-reentrant model
  3583 ;;
  3584                           
  3585                           
  3586                           ;psect for function _LM49450_PS2_init
  3587  03BB                     _LM49450_PS2_init:	
  3588  03BB                     l1371:	
  3589                           ;incstack = 0
  3590                           ; Regs used in _LM49450_PS2_init: [wreg+status,2+status,0+pclath+cstack]
  3591                           
  3592  03BB                     l1373:	
  3593                           
  3594                           ;LM49450.c: 46: LM49450_write(0x00, reg0_PS2);
  3595  03BB  3029               	movlw	41
  3596  03BC  00F3               	movwf	??_LM49450_PS2_init
  3597  03BD  0873               	movf	??_LM49450_PS2_init,w
  3598  03BE  00F1               	movwf	LM49450_write@data
  3599  03BF  3000               	movlw	0
  3600  03C0  3184  2461  3183   	fcall	_LM49450_write
  3601  03C3                     l1375:	
  3602                           
  3603                           ;LM49450.c: 47: LM49450_write(0x01, 0b00000010);
  3604  03C3  3002               	movlw	2
  3605  03C4  00F3               	movwf	??_LM49450_PS2_init
  3606  03C5  0873               	movf	??_LM49450_PS2_init,w
  3607  03C6  00F1               	movwf	LM49450_write@data
  3608  03C7  3001               	movlw	1
  3609  03C8  3184  2461  3183   	fcall	_LM49450_write
  3610  03CB                     l1377:	
  3611                           
  3612                           ;LM49450.c: 48: LM49450_write(0x02, 0x4B);
  3613  03CB  304B               	movlw	75
  3614  03CC  00F3               	movwf	??_LM49450_PS2_init
  3615  03CD  0873               	movf	??_LM49450_PS2_init,w
  3616  03CE  00F1               	movwf	LM49450_write@data
  3617  03CF  3002               	movlw	2
  3618  03D0  3184  2461  3183   	fcall	_LM49450_write
  3619  03D3                     l1379:	
  3620                           
  3621                           ;LM49450.c: 49: LM49450_write(0x03, 0b01110010);
  3622  03D3  3072               	movlw	114
  3623  03D4  00F3               	movwf	??_LM49450_PS2_init
  3624  03D5  0873               	movf	??_LM49450_PS2_init,w
  3625  03D6  00F1               	movwf	LM49450_write@data
  3626  03D7  3003               	movlw	3
  3627  03D8  3184  2461  3183   	fcall	_LM49450_write
  3628  03DB                     l1381:	
  3629                           
  3630                           ;LM49450.c: 50: LM49450_write(0x04, 0b00000000);
  3631  03DB  01F1               	clrf	LM49450_write@data
  3632  03DC  3004               	movlw	4
  3633  03DD  3184  2461  3183   	fcall	_LM49450_write
  3634  03E0                     l1383:	
  3635                           
  3636                           ;LM49450.c: 52: return reg0_PS2;
  3637  03E0  3029               	movlw	41
  3638  03E1                     l280:	
  3639  03E1  0008               	return
  3640  03E2                     __end_of_LM49450_PS2_init:	
  3641                           
  3642                           	psect	text9
  3643  0407                     __ptext9:	
  3644 ;; *************** function _LM49450_DC_init *****************
  3645 ;; Defined at:
  3646 ;;		line 22 in file "LM49450.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;		None
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;  reg0_DC         1    0        unsigned char 
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      unsigned char 
  3653 ;; Registers used:
  3654 ;;		wreg, status,2, status,0, pclath, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3660 ;;      Params:         0       0       0       0       0       0       0       0
  3661 ;;      Locals:         1       0       0       0       0       0       0       0
  3662 ;;      Temps:          1       0       0       0       0       0       0       0
  3663 ;;      Totals:         2       0       0       0       0       0       0       0
  3664 ;;Total ram usage:        2 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:    4
  3667 ;; This function calls:
  3668 ;;		_LM49450_write
  3669 ;; This function is called by:
  3670 ;;		_main
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           
  3675                           ;psect for function _LM49450_DC_init
  3676  0407                     _LM49450_DC_init:	
  3677  0407                     l1395:	
  3678                           ;incstack = 0
  3679                           ; Regs used in _LM49450_DC_init: [wreg+status,2+status,0+pclath+cstack]
  3680                           
  3681  0407                     l1397:	
  3682                           
  3683                           ;LM49450.c: 24: LM49450_write(0x00, reg0_DC);
  3684  0407  3029               	movlw	41
  3685  0408  00F3               	movwf	??_LM49450_DC_init
  3686  0409  0873               	movf	??_LM49450_DC_init,w
  3687  040A  00F1               	movwf	LM49450_write@data
  3688  040B  3000               	movlw	0
  3689  040C  3184  2461  3184   	fcall	_LM49450_write
  3690  040F                     l1399:	
  3691                           
  3692                           ;LM49450.c: 25: LM49450_write(0x01, 0b00000001);
  3693  040F  01F1               	clrf	LM49450_write@data
  3694  0410  0AF1               	incf	LM49450_write@data,f
  3695  0411  3001               	movlw	1
  3696  0412  3184  2461  3184   	fcall	_LM49450_write
  3697  0415                     l1401:	
  3698                           
  3699                           ;LM49450.c: 26: LM49450_write(0x02, 0x44);
  3700  0415  3044               	movlw	68
  3701  0416  00F3               	movwf	??_LM49450_DC_init
  3702  0417  0873               	movf	??_LM49450_DC_init,w
  3703  0418  00F1               	movwf	LM49450_write@data
  3704  0419  3002               	movlw	2
  3705  041A  3184  2461  3184   	fcall	_LM49450_write
  3706  041D                     l1403:	
  3707                           
  3708                           ;LM49450.c: 27: LM49450_write(0x03, 0b00000010);
  3709  041D  3002               	movlw	2
  3710  041E  00F3               	movwf	??_LM49450_DC_init
  3711  041F  0873               	movf	??_LM49450_DC_init,w
  3712  0420  00F1               	movwf	LM49450_write@data
  3713  0421  3003               	movlw	3
  3714  0422  3184  2461  3184   	fcall	_LM49450_write
  3715  0425                     l1405:	
  3716                           
  3717                           ;LM49450.c: 28: LM49450_write(0x04, 0b00000000);
  3718  0425  01F1               	clrf	LM49450_write@data
  3719  0426  3004               	movlw	4
  3720  0427  3184  2461  3184   	fcall	_LM49450_write
  3721  042A                     l1407:	
  3722                           
  3723                           ;LM49450.c: 30: return reg0_DC;
  3724  042A  3029               	movlw	41
  3725  042B                     l274:	
  3726  042B  0008               	return
  3727  042C                     __end_of_LM49450_DC_init:	
  3728                           
  3729                           	psect	text10
  3730  0461                     __ptext10:	
  3731 ;; *************** function _LM49450_write *****************
  3732 ;; Defined at:
  3733 ;;		line 14 in file "LM49450.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;  reg             1    wreg     unsigned char 
  3736 ;;  data            1    1[COMMON] unsigned char 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  reg             1    2[COMMON] unsigned char 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      void 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2, status,0, pclath, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3748 ;;      Params:         1       0       0       0       0       0       0       0
  3749 ;;      Locals:         1       0       0       0       0       0       0       0
  3750 ;;      Temps:          0       0       0       0       0       0       0       0
  3751 ;;      Totals:         2       0       0       0       0       0       0       0
  3752 ;;Total ram usage:        2 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    3
  3755 ;; This function calls:
  3756 ;;		_I2C_Master_Start
  3757 ;;		_I2C_Master_Stop
  3758 ;;		_I2C_Master_Write
  3759 ;; This function is called by:
  3760 ;;		_main
  3761 ;;		_LM49450_DC_init
  3762 ;;		_LM49450_Wii_init
  3763 ;;		_LM49450_PS2_init
  3764 ;;		_LM49450_analog_init
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           
  3769                           ;psect for function _LM49450_write
  3770  0461                     _LM49450_write:	
  3771                           
  3772                           ;incstack = 0
  3773                           ; Regs used in _LM49450_write: [wreg+status,2+status,0+pclath+cstack]
  3774                           ;LM49450_write@reg stored from wreg
  3775  0461  00F2               	movwf	LM49450_write@reg
  3776  0462                     l1289:	
  3777                           
  3778                           ;LM49450.c: 15: I2C_Master_Start();
  3779  0462  3184  24B8  3184   	fcall	_I2C_Master_Start
  3780                           
  3781                           ;LM49450.c: 16: I2C_Master_Write(0b1111101 << 1);
  3782  0465  30FA               	movlw	250
  3783  0466  3184  249D  3184   	fcall	_I2C_Master_Write
  3784                           
  3785                           ;LM49450.c: 17: I2C_Master_Write(reg);
  3786  0469  0872               	movf	LM49450_write@reg,w
  3787  046A  3184  249D  3184   	fcall	_I2C_Master_Write
  3788                           
  3789                           ;LM49450.c: 18: I2C_Master_Write(data);
  3790  046D  0871               	movf	LM49450_write@data,w
  3791  046E  3184  249D  3184   	fcall	_I2C_Master_Write
  3792                           
  3793                           ;LM49450.c: 19: I2C_Master_Stop();
  3794  0471  3184  24B2  3184   	fcall	_I2C_Master_Stop
  3795  0474                     l271:	
  3796  0474  0008               	return
  3797  0475                     __end_of_LM49450_write:	
  3798                           
  3799                           	psect	text11
  3800  049D                     __ptext11:	
  3801 ;; *************** function _I2C_Master_Write *****************
  3802 ;; Defined at:
  3803 ;;		line 76 in file "I2C.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  data            1    wreg     unsigned char 
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;  data            1    0[COMMON] unsigned char 
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		wreg, status,2, status,0, pclath, cstack
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3817 ;;      Params:         0       0       0       0       0       0       0       0
  3818 ;;      Locals:         1       0       0       0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0       0
  3820 ;;      Totals:         1       0       0       0       0       0       0       0
  3821 ;;Total ram usage:        1 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    2
  3824 ;; This function calls:
  3825 ;;		_I2C_Master_Wait
  3826 ;; This function is called by:
  3827 ;;		_LM49450_write
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           
  3832                           ;psect for function _I2C_Master_Write
  3833  049D                     _I2C_Master_Write:	
  3834                           
  3835                           ;incstack = 0
  3836                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3837                           ;I2C_Master_Write@data stored from wreg
  3838  049D  00F0               	movwf	I2C_Master_Write@data
  3839  049E                     l1285:	
  3840                           
  3841                           ;I2C.c: 78: I2C_Master_Wait();
  3842  049E  3184  2475  3184   	fcall	_I2C_Master_Wait
  3843  04A1                     l1287:	
  3844                           
  3845                           ;I2C.c: 79: SSP1BUF = data;
  3846  04A1  0870               	movf	I2C_Master_Write@data,w
  3847  04A2  0143               	movlb	3	; select bank3
  3848  04A3  008C               	movwf	12	;volatile
  3849  04A4                     l243:	
  3850  04A4  0008               	return
  3851  04A5                     __end_of_I2C_Master_Write:	
  3852                           
  3853                           	psect	text12
  3854  04B2                     __ptext12:	
  3855 ;; *************** function _I2C_Master_Stop *****************
  3856 ;; Defined at:
  3857 ;;		line 70 in file "I2C.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;		None
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;		None
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  1    wreg      void 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2, status,0, pclath, cstack
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3871 ;;      Params:         0       0       0       0       0       0       0       0
  3872 ;;      Locals:         0       0       0       0       0       0       0       0
  3873 ;;      Temps:          0       0       0       0       0       0       0       0
  3874 ;;      Totals:         0       0       0       0       0       0       0       0
  3875 ;;Total ram usage:        0 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; Hardware stack levels required when called:    2
  3878 ;; This function calls:
  3879 ;;		_I2C_Master_Wait
  3880 ;; This function is called by:
  3881 ;;		_LM49450_write
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           
  3886                           ;psect for function _I2C_Master_Stop
  3887  04B2                     _I2C_Master_Stop:	
  3888  04B2                     l1281:	
  3889                           ;incstack = 0
  3890                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3891                           
  3892                           
  3893                           ;I2C.c: 72: I2C_Master_Wait();
  3894  04B2  3184  2475  3184   	fcall	_I2C_Master_Wait
  3895  04B5                     l1283:	
  3896                           
  3897                           ;I2C.c: 73: SSP1CON2bits.PEN = 1;
  3898  04B5  0143               	movlb	3	; select bank3
  3899  04B6  1511               	bsf	17,2	;volatile
  3900  04B7                     l240:	
  3901  04B7  0008               	return
  3902  04B8                     __end_of_I2C_Master_Stop:	
  3903                           
  3904                           	psect	text13
  3905  04B8                     __ptext13:	
  3906 ;; *************** function _I2C_Master_Start *****************
  3907 ;; Defined at:
  3908 ;;		line 58 in file "I2C.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;		None
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;		None
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  1    wreg      void 
  3915 ;; Registers used:
  3916 ;;		wreg, status,2, status,0, pclath, cstack
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3922 ;;      Params:         0       0       0       0       0       0       0       0
  3923 ;;      Locals:         0       0       0       0       0       0       0       0
  3924 ;;      Temps:          0       0       0       0       0       0       0       0
  3925 ;;      Totals:         0       0       0       0       0       0       0       0
  3926 ;;Total ram usage:        0 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:    2
  3929 ;; This function calls:
  3930 ;;		_I2C_Master_Wait
  3931 ;; This function is called by:
  3932 ;;		_LM49450_write
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           
  3937                           ;psect for function _I2C_Master_Start
  3938  04B8                     _I2C_Master_Start:	
  3939  04B8                     l1277:	
  3940                           ;incstack = 0
  3941                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3942                           
  3943                           
  3944                           ;I2C.c: 60: I2C_Master_Wait();
  3945  04B8  3184  2475  3184   	fcall	_I2C_Master_Wait
  3946  04BB                     l1279:	
  3947                           
  3948                           ;I2C.c: 61: SSP1CON2bits.SEN = 1;
  3949  04BB  0143               	movlb	3	; select bank3
  3950  04BC  1411               	bsf	17,0	;volatile
  3951  04BD                     l234:	
  3952  04BD  0008               	return
  3953  04BE                     __end_of_I2C_Master_Start:	
  3954                           
  3955                           	psect	text14
  3956  0475                     __ptext14:	
  3957 ;; *************** function _I2C_Master_Wait *****************
  3958 ;; Defined at:
  3959 ;;		line 53 in file "I2C.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;		None
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;		None
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  1    wreg      void 
  3966 ;; Registers used:
  3967 ;;		wreg, status,2
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3973 ;;      Params:         0       0       0       0       0       0       0       0
  3974 ;;      Locals:         0       0       0       0       0       0       0       0
  3975 ;;      Temps:          0       0       0       0       0       0       0       0
  3976 ;;      Totals:         0       0       0       0       0       0       0       0
  3977 ;;Total ram usage:        0 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    1
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_I2C_Master_Start
  3984 ;;		_I2C_Master_Stop
  3985 ;;		_I2C_Master_Write
  3986 ;;		_I2C_Master_Repeated_Start
  3987 ;;		_I2C_Master_Read
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           
  3992                           ;psect for function _I2C_Master_Wait
  3993  0475                     _I2C_Master_Wait:	
  3994  0475                     l1273:	
  3995                           ;incstack = 0
  3996                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3997                           
  3998  0475                     l228:	
  3999                           ;I2C.c: 55: while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  4000                           
  4001  0475  0143               	movlb	3	; select bank3
  4002  0476  190F               	btfsc	15,2	;volatile
  4003  0477  2C79               	goto	u701
  4004  0478  2C7A               	goto	u700
  4005  0479                     u701:	
  4006  0479  2C75               	goto	l228
  4007  047A                     u700:	
  4008  047A                     l1275:	
  4009  047A  0811               	movf	17,w	;volatile
  4010  047B  391F               	andlw	31
  4011  047C  1D03               	btfss	3,2
  4012  047D  2C7F               	goto	u711
  4013  047E  2C80               	goto	u710
  4014  047F                     u711:	
  4015  047F  2C75               	goto	l228
  4016  0480                     u710:	
  4017  0480                     l231:	
  4018  0480  0008               	return
  4019  0481                     __end_of_I2C_Master_Wait:	
  4020                           
  4021                           	psect	text15
  4022  038D                     __ptext15:	
  4023 ;; *************** function _I2C_Master_Init *****************
  4024 ;; Defined at:
  4025 ;;		line 45 in file "I2C.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  clk             4    0[BANK0 ] const unsigned long 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;		None
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  1    wreg      void 
  4032 ;; Registers used:
  4033 ;;		wreg, status,2, status,0, pclath, cstack
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4039 ;;      Params:         0       4       0       0       0       0       0       0
  4040 ;;      Locals:         0       0       0       0       0       0       0       0
  4041 ;;      Temps:          0       4       0       0       0       0       0       0
  4042 ;;      Totals:         0       8       0       0       0       0       0       0
  4043 ;;Total ram usage:        8 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; Hardware stack levels required when called:    2
  4046 ;; This function calls:
  4047 ;;		___lldiv
  4048 ;; This function is called by:
  4049 ;;		_main
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           
  4054                           ;psect for function _I2C_Master_Init
  4055  038D                     _I2C_Master_Init:	
  4056  038D                     l1347:	
  4057                           ;incstack = 0
  4058                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  4059                           
  4060                           
  4061                           ;I2C.c: 47: SSP1CON1 = 0b00101000;
  4062  038D  3028               	movlw	40
  4063  038E  0143               	movlb	3	; select bank3
  4064  038F  0090               	movwf	16	;volatile
  4065  0390                     l1349:	
  4066                           
  4067                           ;I2C.c: 48: SSP1CON2 = 0x00;
  4068  0390  0191               	clrf	17	;volatile
  4069  0391                     l1351:	
  4070                           
  4071                           ;I2C.c: 49: SSP1ADD = (32000000 / (4*clk)) - 1;
  4072  0391  0140               	movlb	0	; select bank0
  4073  0392  083D               	movf	I2C_Master_Init@clk,w
  4074  0393  00C1               	movwf	??_I2C_Master_Init
  4075  0394  083E               	movf	I2C_Master_Init@clk+1,w
  4076  0395  00C2               	movwf	??_I2C_Master_Init+1
  4077  0396  083F               	movf	I2C_Master_Init@clk+2,w
  4078  0397  00C3               	movwf	??_I2C_Master_Init+2
  4079  0398  0840               	movf	I2C_Master_Init@clk+3,w
  4080  0399  00C4               	movwf	??_I2C_Master_Init+3
  4081  039A  3002               	movlw	2
  4082  039B                     u795:	
  4083  039B  35C1               	lslf	??_I2C_Master_Init,f
  4084  039C  0DC2               	rlf	??_I2C_Master_Init+1,f
  4085  039D  0DC3               	rlf	??_I2C_Master_Init+2,f
  4086  039E  0DC4               	rlf	??_I2C_Master_Init+3,f
  4087  039F                     u790:	
  4088  039F  0B89               	decfsz	9,f
  4089  03A0  2B9B               	goto	u795
  4090  03A1  0844               	movf	??_I2C_Master_Init+3,w
  4091  03A2  00F3               	movwf	___lldiv@divisor+3
  4092  03A3  0843               	movf	??_I2C_Master_Init+2,w
  4093  03A4  00F2               	movwf	___lldiv@divisor+2
  4094  03A5  0842               	movf	??_I2C_Master_Init+1,w
  4095  03A6  00F1               	movwf	___lldiv@divisor+1
  4096  03A7  0841               	movf	??_I2C_Master_Init,w
  4097  03A8  00F0               	movwf	___lldiv@divisor
  4098  03A9  3001               	movlw	1
  4099  03AA  00F7               	movwf	___lldiv@dividend+3
  4100  03AB  30E8               	movlw	232
  4101  03AC  00F6               	movwf	___lldiv@dividend+2
  4102  03AD  3048               	movlw	72
  4103  03AE  00F5               	movwf	___lldiv@dividend+1
  4104  03AF  3000               	movlw	0
  4105  03B0  00F4               	movwf	___lldiv@dividend
  4106  03B1  3183  2333  3183   	fcall	___lldiv
  4107  03B4  0870               	movf	?___lldiv,w
  4108  03B5  3EFF               	addlw	255
  4109  03B6  0143               	movlb	3	; select bank3
  4110  03B7  008D               	movwf	13	;volatile
  4111  03B8                     l1353:	
  4112                           
  4113                           ;I2C.c: 50: SSP1STAT = 0b10000000;
  4114  03B8  3080               	movlw	128
  4115  03B9  008F               	movwf	15	;volatile
  4116  03BA                     l225:	
  4117  03BA  0008               	return
  4118  03BB                     __end_of_I2C_Master_Init:	
  4119                           
  4120                           	psect	text16
  4121  0333                     __ptext16:	
  4122 ;; *************** function ___lldiv *****************
  4123 ;; Defined at:
  4124 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  divisor         4    0[COMMON] unsigned long 
  4127 ;;  dividend        4    4[COMMON] unsigned long 
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;  quotient        4    9[COMMON] unsigned long 
  4130 ;;  counter         1   13[COMMON] unsigned char 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  4    0[COMMON] unsigned long 
  4133 ;; Registers used:
  4134 ;;		wreg, status,2, status,0
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4140 ;;      Params:         8       0       0       0       0       0       0       0
  4141 ;;      Locals:         5       0       0       0       0       0       0       0
  4142 ;;      Temps:          1       0       0       0       0       0       0       0
  4143 ;;      Totals:        14       0       0       0       0       0       0       0
  4144 ;;Total ram usage:       14 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; Hardware stack levels required when called:    1
  4147 ;; This function calls:
  4148 ;;		Nothing
  4149 ;; This function is called by:
  4150 ;;		_I2C_Master_Init
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           
  4155                           ;psect for function ___lldiv
  4156  0333                     ___lldiv:	
  4157  0333                     l1291:	
  4158                           ;incstack = 0
  4159                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4160                           
  4161  0333  3000               	movlw	0
  4162  0334  00FC               	movwf	___lldiv@quotient+3
  4163  0335  3000               	movlw	0
  4164  0336  00FB               	movwf	___lldiv@quotient+2
  4165  0337  3000               	movlw	0
  4166  0338  00FA               	movwf	___lldiv@quotient+1
  4167  0339  3000               	movlw	0
  4168  033A  00F9               	movwf	___lldiv@quotient
  4169  033B  0873               	movf	___lldiv@divisor+3,w
  4170  033C  0472               	iorwf	___lldiv@divisor+2,w
  4171  033D  0471               	iorwf	___lldiv@divisor+1,w
  4172  033E  0470               	iorwf	___lldiv@divisor,w
  4173  033F  1903               	skipnz
  4174  0340  2B42               	goto	u721
  4175  0341  2B43               	goto	u720
  4176  0342                     u721:	
  4177  0342  2B84               	goto	l1311
  4178  0343                     u720:	
  4179  0343                     l1293:	
  4180  0343  01FD               	clrf	___lldiv@counter
  4181  0344  0AFD               	incf	___lldiv@counter,f
  4182  0345  2B51               	goto	l1297
  4183  0346                     l1295:	
  4184  0346  3001               	movlw	1
  4185  0347                     u735:	
  4186  0347  35F0               	lslf	___lldiv@divisor,f
  4187  0348  0DF1               	rlf	___lldiv@divisor+1,f
  4188  0349  0DF2               	rlf	___lldiv@divisor+2,f
  4189  034A  0DF3               	rlf	___lldiv@divisor+3,f
  4190  034B  0B89               	decfsz	9,f
  4191  034C  2B47               	goto	u735
  4192  034D  3001               	movlw	1
  4193  034E  00F8               	movwf	??___lldiv
  4194  034F  0878               	movf	??___lldiv,w
  4195  0350  07FD               	addwf	___lldiv@counter,f
  4196  0351                     l1297:	
  4197  0351  1FF3               	btfss	___lldiv@divisor+3,7
  4198  0352  2B54               	goto	u741
  4199  0353  2B55               	goto	u740
  4200  0354                     u741:	
  4201  0354  2B46               	goto	l1295
  4202  0355                     u740:	
  4203  0355                     l1299:	
  4204  0355  3001               	movlw	1
  4205  0356                     u755:	
  4206  0356  35F9               	lslf	___lldiv@quotient,f
  4207  0357  0DFA               	rlf	___lldiv@quotient+1,f
  4208  0358  0DFB               	rlf	___lldiv@quotient+2,f
  4209  0359  0DFC               	rlf	___lldiv@quotient+3,f
  4210  035A  0B89               	decfsz	9,f
  4211  035B  2B56               	goto	u755
  4212  035C                     l1301:	
  4213  035C  0873               	movf	___lldiv@divisor+3,w
  4214  035D  0277               	subwf	___lldiv@dividend+3,w
  4215  035E  1D03               	skipz
  4216  035F  2B6A               	goto	u765
  4217  0360  0872               	movf	___lldiv@divisor+2,w
  4218  0361  0276               	subwf	___lldiv@dividend+2,w
  4219  0362  1D03               	skipz
  4220  0363  2B6A               	goto	u765
  4221  0364  0871               	movf	___lldiv@divisor+1,w
  4222  0365  0275               	subwf	___lldiv@dividend+1,w
  4223  0366  1D03               	skipz
  4224  0367  2B6A               	goto	u765
  4225  0368  0870               	movf	___lldiv@divisor,w
  4226  0369  0274               	subwf	___lldiv@dividend,w
  4227  036A                     u765:	
  4228  036A  1C03               	skipc
  4229  036B  2B6D               	goto	u761
  4230  036C  2B6E               	goto	u760
  4231  036D                     u761:	
  4232  036D  2B77               	goto	l1307
  4233  036E                     u760:	
  4234  036E                     l1303:	
  4235  036E  0870               	movf	___lldiv@divisor,w
  4236  036F  02F4               	subwf	___lldiv@dividend,f
  4237  0370  0871               	movf	___lldiv@divisor+1,w
  4238  0371  3BF5               	subwfb	___lldiv@dividend+1,f
  4239  0372  0872               	movf	___lldiv@divisor+2,w
  4240  0373  3BF6               	subwfb	___lldiv@dividend+2,f
  4241  0374  0873               	movf	___lldiv@divisor+3,w
  4242  0375  3BF7               	subwfb	___lldiv@dividend+3,f
  4243  0376                     l1305:	
  4244  0376  1479               	bsf	___lldiv@quotient,0
  4245  0377                     l1307:	
  4246  0377  3001               	movlw	1
  4247  0378                     u775:	
  4248  0378  36F3               	lsrf	___lldiv@divisor+3,f
  4249  0379  0CF2               	rrf	___lldiv@divisor+2,f
  4250  037A  0CF1               	rrf	___lldiv@divisor+1,f
  4251  037B  0CF0               	rrf	___lldiv@divisor,f
  4252  037C  0B89               	decfsz	9,f
  4253  037D  2B78               	goto	u775
  4254  037E                     l1309:	
  4255  037E  3001               	movlw	1
  4256  037F  02FD               	subwf	___lldiv@counter,f
  4257  0380  1D03               	btfss	3,2
  4258  0381  2B83               	goto	u781
  4259  0382  2B84               	goto	u780
  4260  0383                     u781:	
  4261  0383  2B55               	goto	l1299
  4262  0384                     u780:	
  4263  0384                     l1311:	
  4264  0384  087C               	movf	___lldiv@quotient+3,w
  4265  0385  00F3               	movwf	?___lldiv+3
  4266  0386  087B               	movf	___lldiv@quotient+2,w
  4267  0387  00F2               	movwf	?___lldiv+2
  4268  0388  087A               	movf	___lldiv@quotient+1,w
  4269  0389  00F1               	movwf	?___lldiv+1
  4270  038A  0879               	movf	___lldiv@quotient,w
  4271  038B  00F0               	movwf	?___lldiv
  4272  038C                     l387:	
  4273  038C  0008               	return
  4274  038D                     __end_of___lldiv:	
  4275                           
  4276                           	psect	intentry
  4277  0004                     __pintentry:	
  4278 ;; *************** function _ISR *****************
  4279 ;; Defined at:
  4280 ;;		line 40 in file "main.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;		None
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;		None
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      void 
  4287 ;; Registers used:
  4288 ;;		wreg
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4294 ;;      Params:         0       0       0       0       0       0       0       0
  4295 ;;      Locals:         0       0       0       0       0       0       0       0
  4296 ;;      Temps:          0       0       0       0       0       0       0       0
  4297 ;;      Totals:         0       0       0       0       0       0       0       0
  4298 ;;Total ram usage:        0 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; This function calls:
  4301 ;;		Nothing
  4302 ;; This function is called by:
  4303 ;;		Interrupt level 1
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307  0004                     _ISR:	
  4308                           
  4309                           ;incstack = 0
  4310  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4311                           
  4312                           ; Regs used in _ISR: [wreg]
  4313  0005  3180               	pagesel	$
  4314  0006                     i1l1419:	
  4315                           
  4316                           ;main.c: 42: if(TMR1IF) {
  4317  0006  014E               	movlb	14	; select bank14
  4318  0007  1C10               	btfss	16,0	;volatile
  4319  0008  280A               	goto	u80_21
  4320  0009  280B               	goto	u80_20
  4321  000A                     u80_21:	
  4322  000A  281A               	goto	i1l77
  4323  000B                     u80_20:	
  4324  000B                     i1l1421:	
  4325                           
  4326                           ;main.c: 43: TMR1IF = 0;
  4327  000B  1010               	bcf	16,0	;volatile
  4328                           
  4329                           ;main.c: 44: TMR1 = 65228;
  4330  000C  30FE               	movlw	254
  4331  000D  0144               	movlb	4	; select bank4
  4332  000E  008D               	movwf	13	;volatile
  4333  000F  30CC               	movlw	204
  4334  0010  008C               	movwf	12	;volatile
  4335  0011                     i1l1423:	
  4336                           
  4337                           ;main.c: 45: timer_counter++;
  4338  0011  3001               	movlw	1
  4339  0012  0140               	movlb	0	; select bank0
  4340  0013  07B4               	addwf	_timer_counter,f
  4341  0014  3000               	movlw	0
  4342  0015  3DB5               	addwfc	_timer_counter+1,f
  4343  0016  3000               	movlw	0
  4344  0017  3DB6               	addwfc	_timer_counter+2,f
  4345  0018  3000               	movlw	0
  4346  0019  3DB7               	addwfc	_timer_counter+3,f
  4347  001A                     i1l77:	
  4348  001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4349  001B  0009               	retfie
  4350  001C                     __end_of_ISR:	
  4351  007E                     btemp	set	126	;btemp
  4352  007E                     int$flags	set	126
  4353  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         29
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      43
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LM49450_analog_init->_LM49450_write
    _LM49450_Wii_init->_LM49450_write
    _LM49450_PS2_init->_LM49450_write
    _LM49450_DC_init->_LM49450_write
    _LM49450_write->_I2C_Master_Write
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11964
                                              8 BANK0      2     2      0
                    _I2C_Master_Init
                    _LM49450_DC_init
                   _LM49450_PS2_init
                   _LM49450_Wii_init
                _LM49450_analog_init
                      _LM49450_write
                          _PIC_SETUP
                           _PPS_lock
                         _PPS_unlock
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _timer_diff                                           8     4      4     402
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _get_time                                             4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _PPS_unlock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PPS_lock                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIC_SETUP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LM49450_analog_init                                  2     2      0    2239
                                              3 COMMON     2     2      0
                      _LM49450_write
 ---------------------------------------------------------------------------------
 (1) _LM49450_Wii_init                                     2     2      0    2239
                                              3 COMMON     2     2      0
                      _LM49450_write
 ---------------------------------------------------------------------------------
 (1) _LM49450_PS2_init                                     2     2      0    2239
                                              3 COMMON     2     2      0
                      _LM49450_write
 ---------------------------------------------------------------------------------
 (1) _LM49450_DC_init                                      2     2      0    2239
                                              3 COMMON     2     2      0
                      _LM49450_write
 ---------------------------------------------------------------------------------
 (1) _LM49450_write                                        2     1      1    2194
                                              1 COMMON     2     1      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _LM49450_DC_init
     _LM49450_write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _LM49450_PS2_init
     _LM49450_write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _LM49450_Wii_init
     _LM49450_write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _LM49450_analog_init
     _LM49450_write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _LM49450_write
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _PIC_SETUP
   _PPS_lock
   _PPS_unlock
   _get_time
   _timer_diff

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      39       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      A      2B       6       53.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      39      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Apr 18 11:59:51 2020

       __end_of_LM49450_write 0475         ??_LM49450_analog_init 0073                   __CFG_CP$OFF 0000  
                          l71 044A                    _PPS_unlock 04A5                           l110 0078  
                         l111 00A7                           l120 0108                           l112 0088  
                         l130 01D9                           l114 0098                           l231 0480  
                         l240 04B7                           l225 03BA                           l234 04BD  
                         l243 04A4                           l228 0475                           l148 0287  
                         l190 049C                           l262 0460                           l271 0474  
                         l280 03E1                           l274 042B                           l283 0494  
                         l187 04AB                           l259 048A                           l277 0406  
                         l387 038C                           _RA4 0064                           _RC0 0070  
                         _RA5 0065                           _RC1 0071                           _RC2 0072  
                         _RC3 0073                           _RC4 0074                           u700 047A  
                         _ISR 0004                           u701 0479                           u710 0480  
                         u711 047F                           u720 0343                           u721 0342  
                         u810 006C                           u811 006B                           u740 0355  
                         u900 00C2                           u820 0070                           u741 0354  
                         u901 00C1                           u821 006F                           u910 00D6  
                         u830 007C                           u735 0347                           u911 00D5  
                         u831 007B                           u760 036E                           u920 00F0  
                         u840 0080                           u761 036D                           u921 00EF  
                         u841 007F                           u930 00FA                           u850 008C  
                         u755 0356                           u931 00F9                           u851 008B  
                         u780 0384                           u940 00FF                           u860 0090  
                         u781 0383                           u765 036A                           u941 00FE  
                         u861 008F                           u790 039F                           u950 010F  
                         u870 009C                           u775 0378                           u951 010E  
                         u871 009B                           u960 0114                           u880 00A0  
                         u961 0113                           u881 009F                           u970 0119  
                         u890 00BD                           u795 039B                           u971 0118  
                         u891 00BC                           u980 0128                           u981 0127  
                         u990 0152                           u991 0151          _vol_minus_time_start 0024  
                __CFG_BORV$LO 0000                           wreg 0009                 __CFG_BBEN$OFF 0000  
                __CFG_LVP$OFF 0000                          ?_ISR 0070                  __CFG_ZCD$OFF 0000  
                        l1301 035C                          l1303 036E                          l1311 0384  
                        l1305 0376                          l1401 0415                          l1321 0438  
                        l1307 0377                          l1403 041D                          l1331 0440  
                        l1323 043B                          l1315 042C                          l1411 0481  
                        l1309 037E                          l1405 0425                          l1333 0444  
                        l1325 043C                          l1317 0431                          l1341 04A5  
                        l1501 0168                          l1351 0391                          l1407 042A  
                        l1335 0446                          l1327 043D                          l1319 0433  
                        l1343 04AA                          l1415 044B                          l1511 0183  
                        l1503 016E                          l1431 0046                          l1353 03B8  
                        l1273 0475                          l1281 04B2                          l1361 03F0  
                        l1337 0448                          l1329 043E                          l1345 0495  
                        l1601 02AA                          l1521 01BA                          l1513 0188  
                        l1505 0173                          l1441 0070                          l1433 0049  
                        l1425 003A                          l1291 0333                          l1347 038D  
                        l1275 047A                          l1283 04B5                          l1371 03BB  
                        l1363 03F8                          l1355 03E2                          l1339 0449  
                        l1611 02C9                          l1603 02B0                          l1515 01A2  
                        l1507 0178                          l1531 01CC                          l1451 009C  
                        l1443 007C                          l1435 005B                          l1427 0040  
                        l1293 0343                          l1349 0390                          l1277 04B8  
                        l1285 049E                          l1381 03DB                          l1373 03BB  
                        l1365 0400                          l1357 03E2                          l1621 02E3  
                        l1605 02B2                          l1541 01DF                          l1525 01C0  
                        l1517 01AE                          l1509 017E                          l1533 01CE  
                        l1461 00CE                          l1453 00A0                          l1445 0080  
                        l1437 0067                          l1429 0043                          l1295 0346  
                        l1279 04BB                          l1287 04A1                          l1383 03E0  
                        l1375 03C3                          l1367 0405                          l1359 03EA  
                        l1391 0493                          l1631 0307                          l1623 02E9  
                        l1615 02D0                          l1607 02C0                          l1551 0218  
                        l1543 01EB                          l1527 01C6                          l1519 01B4  
                        l1471 00FA                          l1463 00D1                          l1455 00B8  
                        l1447 008C                          l1439 006C                          l1297 0351  
                        l1289 0462                          l1377 03CB                          l1641 032C  
                        l1633 030F                          l1625 02F3                          l1617 02D6  
                        l1609 02C5                          l1561 0230                          l1553 021E  
                        l1545 01EE                          l1537 01D9                          l1481 0119  
                        l1473 00FF                          l1465 00D6                          l1457 00BD  
                        l1449 0090                          l1299 0355                          l1395 0407  
                        l1379 03D3                          l1387 048B                          l1635 0315  
                        l1619 02DB                          l1627 02FB                          l1571 0264  
                        l1563 0235                          l1555 0223                          l1547 0208  
                        l1491 0135                          l1483 0121                          l1467 00F0  
                        l1459 00C2                          l1475 0109                          l1397 0407  
                        l1389 048B                          l1637 031F                          l1629 0302  
                        l1573 0269                          l1565 0238                          l1557 0228  
                        l1549 0214                          l1493 0138                          l1477 010F  
                        l1469 00F5                          l1485 0123                          l1399 040F  
                        l1639 0327                          l1591 028E                          l1567 0252  
                        l1559 022B                          l1583 027A                          l1495 0152  
                        l1479 0114                          l1577 026F                          l1569 025E  
                        l1585 027C                          l1497 015E                          l1489 0129  
                        l1595 0295                          l1579 0274                          l1499 0162  
                        l1597 029E                          l1589 0287                          l1599 02A2  
                        u1000 0168                          u1001 0167                          u1010 016E  
                        u1011 016D                          u1100 01CB                          u1020 0173  
                        u1101 01CA                          u1021 0172                          u1110 01DE  
                        u1030 017E                          u1111 01DD                          u1031 017D  
                        u1200 0269                          u1120 0208                          u1040 0183  
                        u1201 0268                          u1121 0207                          u1041 0182  
                        u1210 026E                          u1130 021E                          u1050 01A2  
                        u1211 026D                          u1131 021D                          u1051 01A1  
                        u1300 02E9                          u1220 0274                          u1140 0223  
                        u1060 01B4                          u1301 02E8                          u1221 0273  
                        u1141 0222                          u1061 01B3                          u1310 0302  
                        u1230 0279                          u1150 0228                          u1070 01BA  
                        u1311 0301                          u1231 0278                          u1151 0227  
                        u1071 01B9                          u1320 0307                          u1240 028E  
                        u1160 0230                          u1080 01BF                          u1321 0306  
                        u1241 028D                          u1161 022F                          u1081 01BE  
                        u1330 0315                          u1250 0294                          u1170 0235  
                        u1090 01C6                          u1331 0314                          u1251 0293  
                        u1171 0234                          u1091 01C5                          u1260 02C5  
                        u1180 0252                          u1261 02C4                          u1181 0251  
                        u1270 02CF                          u1190 0264                          u1271 02CE  
                        u1191 0263                          u1280 02D6                          u1281 02D5  
                        u1290 02DB                          u1291 02DA                          u1357 0061  
                        i1l77 001A                          _TMR1 020C                          _WPUA 1F39  
                        _WPUC 1F4F                 __CFG_FCMEN$ON 0000                          _main 003A  
                        fsr0h 0005                          indf0 0000                          fsr0l 0004  
                        btemp 007E                          start 001C                 __CFG_CSWEN$ON 0000  
            ?_LM49450_DC_init 0070                         ??_ISR 0070            __size_of_PIC_SETUP 001F  
            ?_I2C_Master_Init 003D              ?_I2C_Master_Wait 0070              ?_I2C_Master_Stop 0070  
                       ?_main 0070                 __CFG_WDTE$OFF 0000               __end_of___lldiv 038D  
                       _T1CLK 0211                         u80_20 000B                         u80_21 000A  
                       _TRISA 0012                         _TRISC 0014                 __CFG_WRTB$OFF 0000  
               __CFG_WRTC$OFF 0000                __CFG_BOREN$OFF 0000              __end_of_PPS_lock 049D  
                       status 0003                         wtemp0 007E                __CFG_MCLRE$OFF 0000  
             __initialization 001E                  __end_of_main 0333                __CFG_SAFEN$OFF 0000  
           ?_LM49450_PS2_init 0070                   ?_PPS_unlock 0070                        ??_main 0045  
          ??_LM49450_PS2_init 0073             ?_I2C_Master_Start 0070             ?_I2C_Master_Write 0070  
          ??_I2C_Master_Start 0070            ??_I2C_Master_Write 0070                        _ANSELA 1F38  
                      _ANSELC 1F4E                        _RC0PPS 1F20                        _RC1PPS 1F21  
                      i1l1421 000B                        i1l1423 0011                        i1l1419 0006  
           __end_of_PIC_SETUP 044B                        _TMR1IF 3880                _HPS_time_start 0030  
              __CFG_PWRTE$OFF 0000              __end_of_get_time 048B                __CFG_STVREN$ON 0000  
                   ??___lldiv 0078             ?_LM49450_Wii_init 0070            ??_LM49450_Wii_init 0073  
     __end_of__initialization 0036           __size_of_PPS_unlock 0007                __pcstackCOMMON 0070  
                __pidataBANK0 04BE                     ?_PPS_lock 0070                    __pbssBANK0 0020  
 __end_of_LM49450_analog_init 0495                    __pmaintext 003A                    __pintentry 0004  
         __CFG_RSTOSC$HFINT32 0000                    ??_PPS_lock 0070                       _SSP1ADD 018D  
                     _PPSLOCK 1E8F                       _SSP1BUF 018C                _vol_plus_state 0039  
      __size_of_LM49450_write 0014                     ?_get_time 0070                       ___lldiv 0333  
                ??_PPS_unlock 0070                       __ptext1 044B                       __ptext2 0481  
                     __ptext3 04A5                       __ptext4 0495                       __ptext5 042C  
                     __ptext6 048B                       __ptext7 03E2                       __ptext8 03BB  
                     __ptext9 0407      __size_of_LM49450_DC_init 0025               __CFG_WRTAPP$OFF 0000  
                __size_of_ISR 0018                     _T1CONbits 020E               __CFG_WRTSAF$OFF 0000  
    __size_of_I2C_Master_Init 002E      __size_of_I2C_Master_Wait 000C      __size_of_I2C_Master_Stop 0006  
                     clrloop0 04AD                    ??_get_time 0074          end_of_initialization 0036  
   __size_of_LM49450_PS2_init 0027     __size_of_I2C_Master_Start 0006            __end_of_PPS_unlock 04AC  
                   _PIC_SETUP 042C     __size_of_I2C_Master_Write 0008               ___lldiv@divisor 0070  
             ___lldiv@counter 007D                 _LM49450_write 0461                     _HPS_state 003A  
       __CFG_WDTCPS$WDTCPS_13 0000                    _timer_diff 044B                    _mute_state 003B  
           LM49450_write@data 0071          __CFG_WDTCCS$LFINTOSC 0000                     _TRISCbits 0014  
                 timer_diff@t 0070              __CFG_FEXTOSC$OFF 0000           _vol_minus_time_hold 0020  
   __size_of_LM49450_Wii_init 0025                    ?_PIC_SETUP 0070                ?_LM49450_write 0071  
           __size_of_PPS_lock 0008           start_initialization 001E                   __end_of_ISR 001C  
           ??_LM49450_DC_init 0073             ??_I2C_Master_Init 0041             ??_I2C_Master_Wait 0070  
           ??_I2C_Master_Stop 0070              __CFG_LPBOREN$OFF 0000                   __pdataBANK0 0047  
                 ?_timer_diff 0070                     ___latbits 0001                 __pcstackBANK0 003D  
              _volume_hp_prev 0047              _LM49450_PS2_init 03BB                _volume_sp_prev 0049  
           __size_of_get_time 000A               _vol_minus_state 0038              _I2C_Master_Start 04B8  
                 ??_PIC_SETUP 0070              _I2C_Master_Write 049D               ??_LM49450_write 0072  
                    ?___lldiv 0070              __CFG_PPS1WAY$OFF 0000  __size_of_LM49450_analog_init 000A  
        I2C_Master_Write@data 0070              _LM49450_Wii_init 03E2           __size_of_timer_diff 0016  
                   clear_ram0 04AC                      _PIE4bits 071A             __CFG_BBSIZE$BB512 0000  
                    _SSP1CON1 0190                      _SSP1CON2 0191                      _SSP1STAT 018F  
            LM49450_write@reg 0072                      _PPS_lock 0495                     _volume_hp 0048  
                   _volume_sp 004A              __size_of___lldiv 005A               _LM49450_DC_init 0407  
             _I2C_Master_Init 038D               _I2C_Master_Wait 0475               _I2C_Master_Stop 04B2  
                    __ptext10 0461                      __ptext11 049D                      __ptext12 04B2  
                    __ptext13 04B8                    _T1GCONbits 020F                      __ptext14 0475  
                    __ptext15 038D                      __ptext16 0333                  _SSP1CON2bits 0191  
                    _get_time 0481                 __size_of_main 02F9          __CFG_WDTCWS$WDTCWS_7 0000  
                    int$flags 007E      __end_of_LM49450_PS2_init 03E2                 _timer_counter 0034  
                ??_timer_diff 0074            I2C_Master_Init@clk 003D      __end_of_I2C_Master_Start 04BE  
    __end_of_I2C_Master_Write 04A5                    _INTCONbits 000B                      intlevel1 0000  
         _LM49450_analog_init 048B              ___lldiv@dividend 0074             __CFG_CLKOUTEN$OFF 0000  
          __end_of_timer_diff 0461       __end_of_LM49450_DC_init 042C           _vol_plus_time_start 002C  
     __end_of_I2C_Master_Init 03BB       __end_of_I2C_Master_Wait 0481          ?_LM49450_analog_init 0070  
     __end_of_I2C_Master_Stop 04B8      __end_of_LM49450_Wii_init 0407                    _SSP1DATPPS 1EC6  
                  _SSP1CLKPPS 1EC5              ___lldiv@quotient 0079            _vol_plus_time_hold 0028  
                 _mute_config 003C  
