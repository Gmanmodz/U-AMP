

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 09 10:24:29 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F15324
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.10
    32                           ; Generated 31/07/2019 GMT
    33                           ; 
    34                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F15324 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000E                     	;# 
    79  0012                     	;# 
    80  0014                     	;# 
    81  0018                     	;# 
    82  001A                     	;# 
    83  009B                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  009F                     	;# 
    89  0119                     	;# 
    90  0119                     	;# 
    91  0119                     	;# 
    92  011A                     	;# 
    93  011A                     	;# 
    94  011A                     	;# 
    95  011B                     	;# 
    96  011B                     	;# 
    97  011B                     	;# 
    98  011B                     	;# 
    99  011B                     	;# 
   100  011C                     	;# 
   101  011C                     	;# 
   102  011C                     	;# 
   103  011D                     	;# 
   104  011D                     	;# 
   105  011D                     	;# 
   106  011E                     	;# 
   107  011E                     	;# 
   108  011E                     	;# 
   109  011F                     	;# 
   110  011F                     	;# 
   111  011F                     	;# 
   112  011F                     	;# 
   113  011F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  018E                     	;# 
   117  018F                     	;# 
   118  0190                     	;# 
   119  0191                     	;# 
   120  0192                     	;# 
   121  020C                     	;# 
   122  020C                     	;# 
   123  020D                     	;# 
   124  020E                     	;# 
   125  020F                     	;# 
   126  020F                     	;# 
   127  0210                     	;# 
   128  0210                     	;# 
   129  0211                     	;# 
   130  0211                     	;# 
   131  028C                     	;# 
   132  028C                     	;# 
   133  028D                     	;# 
   134  028D                     	;# 
   135  028E                     	;# 
   136  028F                     	;# 
   137  0290                     	;# 
   138  0291                     	;# 
   139  030C                     	;# 
   140  030C                     	;# 
   141  030D                     	;# 
   142  030E                     	;# 
   143  030F                     	;# 
   144  0310                     	;# 
   145  0310                     	;# 
   146  0311                     	;# 
   147  0312                     	;# 
   148  0313                     	;# 
   149  0314                     	;# 
   150  0314                     	;# 
   151  0315                     	;# 
   152  0316                     	;# 
   153  0318                     	;# 
   154  0318                     	;# 
   155  0319                     	;# 
   156  031A                     	;# 
   157  031C                     	;# 
   158  031C                     	;# 
   159  031D                     	;# 
   160  031E                     	;# 
   161  038C                     	;# 
   162  038C                     	;# 
   163  038D                     	;# 
   164  038E                     	;# 
   165  058C                     	;# 
   166  058C                     	;# 
   167  058D                     	;# 
   168  058E                     	;# 
   169  058F                     	;# 
   170  058F                     	;# 
   171  0590                     	;# 
   172  0591                     	;# 
   173  0592                     	;# 
   174  0593                     	;# 
   175  059C                     	;# 
   176  059C                     	;# 
   177  059D                     	;# 
   178  059D                     	;# 
   179  059E                     	;# 
   180  059F                     	;# 
   181  060C                     	;# 
   182  060D                     	;# 
   183  060E                     	;# 
   184  060F                     	;# 
   185  0610                     	;# 
   186  0611                     	;# 
   187  0612                     	;# 
   188  0613                     	;# 
   189  0614                     	;# 
   190  070C                     	;# 
   191  070D                     	;# 
   192  070E                     	;# 
   193  070F                     	;# 
   194  0710                     	;# 
   195  0711                     	;# 
   196  0712                     	;# 
   197  0713                     	;# 
   198  0716                     	;# 
   199  0717                     	;# 
   200  0718                     	;# 
   201  0719                     	;# 
   202  071A                     	;# 
   203  071B                     	;# 
   204  071C                     	;# 
   205  071D                     	;# 
   206  0796                     	;# 
   207  0797                     	;# 
   208  0798                     	;# 
   209  0799                     	;# 
   210  079A                     	;# 
   211  079B                     	;# 
   212  080C                     	;# 
   213  080D                     	;# 
   214  080E                     	;# 
   215  080F                     	;# 
   216  0810                     	;# 
   217  0811                     	;# 
   218  0812                     	;# 
   219  0813                     	;# 
   220  0814                     	;# 
   221  081A                     	;# 
   222  081A                     	;# 
   223  081B                     	;# 
   224  081C                     	;# 
   225  081C                     	;# 
   226  081D                     	;# 
   227  081E                     	;# 
   228  081F                     	;# 
   229  088C                     	;# 
   230  088D                     	;# 
   231  088E                     	;# 
   232  088F                     	;# 
   233  0890                     	;# 
   234  0891                     	;# 
   235  0892                     	;# 
   236  0893                     	;# 
   237  0895                     	;# 
   238  0896                     	;# 
   239  090C                     	;# 
   240  090E                     	;# 
   241  090F                     	;# 
   242  091F                     	;# 
   243  098F                     	;# 
   244  098F                     	;# 
   245  0990                     	;# 
   246  0991                     	;# 
   247  0992                     	;# 
   248  0993                     	;# 
   249  0994                     	;# 
   250  0995                     	;# 
   251  0996                     	;# 
   252  0997                     	;# 
   253  0A19                     	;# 
   254  0A19                     	;# 
   255  0A1A                     	;# 
   256  0A1A                     	;# 
   257  0A1B                     	;# 
   258  0A1B                     	;# 
   259  0A1B                     	;# 
   260  0A1C                     	;# 
   261  0A1C                     	;# 
   262  0A1D                     	;# 
   263  0A1D                     	;# 
   264  0A1E                     	;# 
   265  0A1E                     	;# 
   266  0A1F                     	;# 
   267  0A1F                     	;# 
   268  0A1F                     	;# 
   269  1E0F                     	;# 
   270  1E10                     	;# 
   271  1E11                     	;# 
   272  1E12                     	;# 
   273  1E13                     	;# 
   274  1E14                     	;# 
   275  1E15                     	;# 
   276  1E16                     	;# 
   277  1E17                     	;# 
   278  1E18                     	;# 
   279  1E19                     	;# 
   280  1E1A                     	;# 
   281  1E1B                     	;# 
   282  1E1C                     	;# 
   283  1E1D                     	;# 
   284  1E1E                     	;# 
   285  1E1F                     	;# 
   286  1E20                     	;# 
   287  1E21                     	;# 
   288  1E22                     	;# 
   289  1E23                     	;# 
   290  1E24                     	;# 
   291  1E25                     	;# 
   292  1E26                     	;# 
   293  1E27                     	;# 
   294  1E28                     	;# 
   295  1E29                     	;# 
   296  1E2A                     	;# 
   297  1E2B                     	;# 
   298  1E2C                     	;# 
   299  1E2D                     	;# 
   300  1E2E                     	;# 
   301  1E2F                     	;# 
   302  1E30                     	;# 
   303  1E31                     	;# 
   304  1E32                     	;# 
   305  1E33                     	;# 
   306  1E34                     	;# 
   307  1E35                     	;# 
   308  1E36                     	;# 
   309  1E37                     	;# 
   310  1E8F                     	;# 
   311  1E90                     	;# 
   312  1E91                     	;# 
   313  1E92                     	;# 
   314  1E93                     	;# 
   315  1E9C                     	;# 
   316  1EA1                     	;# 
   317  1EA2                     	;# 
   318  1EB1                     	;# 
   319  1EBB                     	;# 
   320  1EBC                     	;# 
   321  1EBD                     	;# 
   322  1EBE                     	;# 
   323  1EC3                     	;# 
   324  1EC5                     	;# 
   325  1EC6                     	;# 
   326  1EC7                     	;# 
   327  1ECB                     	;# 
   328  1ECC                     	;# 
   329  1ECD                     	;# 
   330  1ECE                     	;# 
   331  1F10                     	;# 
   332  1F11                     	;# 
   333  1F12                     	;# 
   334  1F13                     	;# 
   335  1F14                     	;# 
   336  1F15                     	;# 
   337  1F20                     	;# 
   338  1F21                     	;# 
   339  1F22                     	;# 
   340  1F23                     	;# 
   341  1F24                     	;# 
   342  1F25                     	;# 
   343  1F38                     	;# 
   344  1F39                     	;# 
   345  1F3A                     	;# 
   346  1F3B                     	;# 
   347  1F3C                     	;# 
   348  1F3D                     	;# 
   349  1F3E                     	;# 
   350  1F3F                     	;# 
   351  1F4E                     	;# 
   352  1F4F                     	;# 
   353  1F50                     	;# 
   354  1F51                     	;# 
   355  1F52                     	;# 
   356  1F53                     	;# 
   357  1F54                     	;# 
   358  1F55                     	;# 
   359  1FE4                     	;# 
   360  1FE5                     	;# 
   361  1FE6                     	;# 
   362  1FE7                     	;# 
   363  1FE8                     	;# 
   364  1FE8                     	;# 
   365  1FE9                     	;# 
   366  1FEA                     	;# 
   367  1FEA                     	;# 
   368  1FEB                     	;# 
   369  1FED                     	;# 
   370  1FEE                     	;# 
   371  1FEF                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000E                     	;# 
   386  0012                     	;# 
   387  0014                     	;# 
   388  0018                     	;# 
   389  001A                     	;# 
   390  009B                     	;# 
   391  009B                     	;# 
   392  009C                     	;# 
   393  009D                     	;# 
   394  009E                     	;# 
   395  009F                     	;# 
   396  0119                     	;# 
   397  0119                     	;# 
   398  0119                     	;# 
   399  011A                     	;# 
   400  011A                     	;# 
   401  011A                     	;# 
   402  011B                     	;# 
   403  011B                     	;# 
   404  011B                     	;# 
   405  011B                     	;# 
   406  011B                     	;# 
   407  011C                     	;# 
   408  011C                     	;# 
   409  011C                     	;# 
   410  011D                     	;# 
   411  011D                     	;# 
   412  011D                     	;# 
   413  011E                     	;# 
   414  011E                     	;# 
   415  011E                     	;# 
   416  011F                     	;# 
   417  011F                     	;# 
   418  011F                     	;# 
   419  011F                     	;# 
   420  011F                     	;# 
   421  018C                     	;# 
   422  018D                     	;# 
   423  018E                     	;# 
   424  018F                     	;# 
   425  0190                     	;# 
   426  0191                     	;# 
   427  0192                     	;# 
   428  020C                     	;# 
   429  020C                     	;# 
   430  020D                     	;# 
   431  020E                     	;# 
   432  020F                     	;# 
   433  020F                     	;# 
   434  0210                     	;# 
   435  0210                     	;# 
   436  0211                     	;# 
   437  0211                     	;# 
   438  028C                     	;# 
   439  028C                     	;# 
   440  028D                     	;# 
   441  028D                     	;# 
   442  028E                     	;# 
   443  028F                     	;# 
   444  0290                     	;# 
   445  0291                     	;# 
   446  030C                     	;# 
   447  030C                     	;# 
   448  030D                     	;# 
   449  030E                     	;# 
   450  030F                     	;# 
   451  0310                     	;# 
   452  0310                     	;# 
   453  0311                     	;# 
   454  0312                     	;# 
   455  0313                     	;# 
   456  0314                     	;# 
   457  0314                     	;# 
   458  0315                     	;# 
   459  0316                     	;# 
   460  0318                     	;# 
   461  0318                     	;# 
   462  0319                     	;# 
   463  031A                     	;# 
   464  031C                     	;# 
   465  031C                     	;# 
   466  031D                     	;# 
   467  031E                     	;# 
   468  038C                     	;# 
   469  038C                     	;# 
   470  038D                     	;# 
   471  038E                     	;# 
   472  058C                     	;# 
   473  058C                     	;# 
   474  058D                     	;# 
   475  058E                     	;# 
   476  058F                     	;# 
   477  058F                     	;# 
   478  0590                     	;# 
   479  0591                     	;# 
   480  0592                     	;# 
   481  0593                     	;# 
   482  059C                     	;# 
   483  059C                     	;# 
   484  059D                     	;# 
   485  059D                     	;# 
   486  059E                     	;# 
   487  059F                     	;# 
   488  060C                     	;# 
   489  060D                     	;# 
   490  060E                     	;# 
   491  060F                     	;# 
   492  0610                     	;# 
   493  0611                     	;# 
   494  0612                     	;# 
   495  0613                     	;# 
   496  0614                     	;# 
   497  070C                     	;# 
   498  070D                     	;# 
   499  070E                     	;# 
   500  070F                     	;# 
   501  0710                     	;# 
   502  0711                     	;# 
   503  0712                     	;# 
   504  0713                     	;# 
   505  0716                     	;# 
   506  0717                     	;# 
   507  0718                     	;# 
   508  0719                     	;# 
   509  071A                     	;# 
   510  071B                     	;# 
   511  071C                     	;# 
   512  071D                     	;# 
   513  0796                     	;# 
   514  0797                     	;# 
   515  0798                     	;# 
   516  0799                     	;# 
   517  079A                     	;# 
   518  079B                     	;# 
   519  080C                     	;# 
   520  080D                     	;# 
   521  080E                     	;# 
   522  080F                     	;# 
   523  0810                     	;# 
   524  0811                     	;# 
   525  0812                     	;# 
   526  0813                     	;# 
   527  0814                     	;# 
   528  081A                     	;# 
   529  081A                     	;# 
   530  081B                     	;# 
   531  081C                     	;# 
   532  081C                     	;# 
   533  081D                     	;# 
   534  081E                     	;# 
   535  081F                     	;# 
   536  088C                     	;# 
   537  088D                     	;# 
   538  088E                     	;# 
   539  088F                     	;# 
   540  0890                     	;# 
   541  0891                     	;# 
   542  0892                     	;# 
   543  0893                     	;# 
   544  0895                     	;# 
   545  0896                     	;# 
   546  090C                     	;# 
   547  090E                     	;# 
   548  090F                     	;# 
   549  091F                     	;# 
   550  098F                     	;# 
   551  098F                     	;# 
   552  0990                     	;# 
   553  0991                     	;# 
   554  0992                     	;# 
   555  0993                     	;# 
   556  0994                     	;# 
   557  0995                     	;# 
   558  0996                     	;# 
   559  0997                     	;# 
   560  0A19                     	;# 
   561  0A19                     	;# 
   562  0A1A                     	;# 
   563  0A1A                     	;# 
   564  0A1B                     	;# 
   565  0A1B                     	;# 
   566  0A1B                     	;# 
   567  0A1C                     	;# 
   568  0A1C                     	;# 
   569  0A1D                     	;# 
   570  0A1D                     	;# 
   571  0A1E                     	;# 
   572  0A1E                     	;# 
   573  0A1F                     	;# 
   574  0A1F                     	;# 
   575  0A1F                     	;# 
   576  1E0F                     	;# 
   577  1E10                     	;# 
   578  1E11                     	;# 
   579  1E12                     	;# 
   580  1E13                     	;# 
   581  1E14                     	;# 
   582  1E15                     	;# 
   583  1E16                     	;# 
   584  1E17                     	;# 
   585  1E18                     	;# 
   586  1E19                     	;# 
   587  1E1A                     	;# 
   588  1E1B                     	;# 
   589  1E1C                     	;# 
   590  1E1D                     	;# 
   591  1E1E                     	;# 
   592  1E1F                     	;# 
   593  1E20                     	;# 
   594  1E21                     	;# 
   595  1E22                     	;# 
   596  1E23                     	;# 
   597  1E24                     	;# 
   598  1E25                     	;# 
   599  1E26                     	;# 
   600  1E27                     	;# 
   601  1E28                     	;# 
   602  1E29                     	;# 
   603  1E2A                     	;# 
   604  1E2B                     	;# 
   605  1E2C                     	;# 
   606  1E2D                     	;# 
   607  1E2E                     	;# 
   608  1E2F                     	;# 
   609  1E30                     	;# 
   610  1E31                     	;# 
   611  1E32                     	;# 
   612  1E33                     	;# 
   613  1E34                     	;# 
   614  1E35                     	;# 
   615  1E36                     	;# 
   616  1E37                     	;# 
   617  1E8F                     	;# 
   618  1E90                     	;# 
   619  1E91                     	;# 
   620  1E92                     	;# 
   621  1E93                     	;# 
   622  1E9C                     	;# 
   623  1EA1                     	;# 
   624  1EA2                     	;# 
   625  1EB1                     	;# 
   626  1EBB                     	;# 
   627  1EBC                     	;# 
   628  1EBD                     	;# 
   629  1EBE                     	;# 
   630  1EC3                     	;# 
   631  1EC5                     	;# 
   632  1EC6                     	;# 
   633  1EC7                     	;# 
   634  1ECB                     	;# 
   635  1ECC                     	;# 
   636  1ECD                     	;# 
   637  1ECE                     	;# 
   638  1F10                     	;# 
   639  1F11                     	;# 
   640  1F12                     	;# 
   641  1F13                     	;# 
   642  1F14                     	;# 
   643  1F15                     	;# 
   644  1F20                     	;# 
   645  1F21                     	;# 
   646  1F22                     	;# 
   647  1F23                     	;# 
   648  1F24                     	;# 
   649  1F25                     	;# 
   650  1F38                     	;# 
   651  1F39                     	;# 
   652  1F3A                     	;# 
   653  1F3B                     	;# 
   654  1F3C                     	;# 
   655  1F3D                     	;# 
   656  1F3E                     	;# 
   657  1F3F                     	;# 
   658  1F4E                     	;# 
   659  1F4F                     	;# 
   660  1F50                     	;# 
   661  1F51                     	;# 
   662  1F52                     	;# 
   663  1F53                     	;# 
   664  1F54                     	;# 
   665  1F55                     	;# 
   666  1FE4                     	;# 
   667  1FE5                     	;# 
   668  1FE6                     	;# 
   669  1FE7                     	;# 
   670  1FE8                     	;# 
   671  1FE8                     	;# 
   672  1FE9                     	;# 
   673  1FEA                     	;# 
   674  1FEA                     	;# 
   675  1FEB                     	;# 
   676  1FED                     	;# 
   677  1FEE                     	;# 
   678  1FEF                     	;# 
   679  0000                     	;# 
   680  0001                     	;# 
   681  0002                     	;# 
   682  0003                     	;# 
   683  0004                     	;# 
   684  0005                     	;# 
   685  0006                     	;# 
   686  0007                     	;# 
   687  0008                     	;# 
   688  0009                     	;# 
   689  000A                     	;# 
   690  000B                     	;# 
   691  000C                     	;# 
   692  000E                     	;# 
   693  0012                     	;# 
   694  0014                     	;# 
   695  0018                     	;# 
   696  001A                     	;# 
   697  009B                     	;# 
   698  009B                     	;# 
   699  009C                     	;# 
   700  009D                     	;# 
   701  009E                     	;# 
   702  009F                     	;# 
   703  0119                     	;# 
   704  0119                     	;# 
   705  0119                     	;# 
   706  011A                     	;# 
   707  011A                     	;# 
   708  011A                     	;# 
   709  011B                     	;# 
   710  011B                     	;# 
   711  011B                     	;# 
   712  011B                     	;# 
   713  011B                     	;# 
   714  011C                     	;# 
   715  011C                     	;# 
   716  011C                     	;# 
   717  011D                     	;# 
   718  011D                     	;# 
   719  011D                     	;# 
   720  011E                     	;# 
   721  011E                     	;# 
   722  011E                     	;# 
   723  011F                     	;# 
   724  011F                     	;# 
   725  011F                     	;# 
   726  011F                     	;# 
   727  011F                     	;# 
   728  018C                     	;# 
   729  018D                     	;# 
   730  018E                     	;# 
   731  018F                     	;# 
   732  0190                     	;# 
   733  0191                     	;# 
   734  0192                     	;# 
   735  020C                     	;# 
   736  020C                     	;# 
   737  020D                     	;# 
   738  020E                     	;# 
   739  020F                     	;# 
   740  020F                     	;# 
   741  0210                     	;# 
   742  0210                     	;# 
   743  0211                     	;# 
   744  0211                     	;# 
   745  028C                     	;# 
   746  028C                     	;# 
   747  028D                     	;# 
   748  028D                     	;# 
   749  028E                     	;# 
   750  028F                     	;# 
   751  0290                     	;# 
   752  0291                     	;# 
   753  030C                     	;# 
   754  030C                     	;# 
   755  030D                     	;# 
   756  030E                     	;# 
   757  030F                     	;# 
   758  0310                     	;# 
   759  0310                     	;# 
   760  0311                     	;# 
   761  0312                     	;# 
   762  0313                     	;# 
   763  0314                     	;# 
   764  0314                     	;# 
   765  0315                     	;# 
   766  0316                     	;# 
   767  0318                     	;# 
   768  0318                     	;# 
   769  0319                     	;# 
   770  031A                     	;# 
   771  031C                     	;# 
   772  031C                     	;# 
   773  031D                     	;# 
   774  031E                     	;# 
   775  038C                     	;# 
   776  038C                     	;# 
   777  038D                     	;# 
   778  038E                     	;# 
   779  058C                     	;# 
   780  058C                     	;# 
   781  058D                     	;# 
   782  058E                     	;# 
   783  058F                     	;# 
   784  058F                     	;# 
   785  0590                     	;# 
   786  0591                     	;# 
   787  0592                     	;# 
   788  0593                     	;# 
   789  059C                     	;# 
   790  059C                     	;# 
   791  059D                     	;# 
   792  059D                     	;# 
   793  059E                     	;# 
   794  059F                     	;# 
   795  060C                     	;# 
   796  060D                     	;# 
   797  060E                     	;# 
   798  060F                     	;# 
   799  0610                     	;# 
   800  0611                     	;# 
   801  0612                     	;# 
   802  0613                     	;# 
   803  0614                     	;# 
   804  070C                     	;# 
   805  070D                     	;# 
   806  070E                     	;# 
   807  070F                     	;# 
   808  0710                     	;# 
   809  0711                     	;# 
   810  0712                     	;# 
   811  0713                     	;# 
   812  0716                     	;# 
   813  0717                     	;# 
   814  0718                     	;# 
   815  0719                     	;# 
   816  071A                     	;# 
   817  071B                     	;# 
   818  071C                     	;# 
   819  071D                     	;# 
   820  0796                     	;# 
   821  0797                     	;# 
   822  0798                     	;# 
   823  0799                     	;# 
   824  079A                     	;# 
   825  079B                     	;# 
   826  080C                     	;# 
   827  080D                     	;# 
   828  080E                     	;# 
   829  080F                     	;# 
   830  0810                     	;# 
   831  0811                     	;# 
   832  0812                     	;# 
   833  0813                     	;# 
   834  0814                     	;# 
   835  081A                     	;# 
   836  081A                     	;# 
   837  081B                     	;# 
   838  081C                     	;# 
   839  081C                     	;# 
   840  081D                     	;# 
   841  081E                     	;# 
   842  081F                     	;# 
   843  088C                     	;# 
   844  088D                     	;# 
   845  088E                     	;# 
   846  088F                     	;# 
   847  0890                     	;# 
   848  0891                     	;# 
   849  0892                     	;# 
   850  0893                     	;# 
   851  0895                     	;# 
   852  0896                     	;# 
   853  090C                     	;# 
   854  090E                     	;# 
   855  090F                     	;# 
   856  091F                     	;# 
   857  098F                     	;# 
   858  098F                     	;# 
   859  0990                     	;# 
   860  0991                     	;# 
   861  0992                     	;# 
   862  0993                     	;# 
   863  0994                     	;# 
   864  0995                     	;# 
   865  0996                     	;# 
   866  0997                     	;# 
   867  0A19                     	;# 
   868  0A19                     	;# 
   869  0A1A                     	;# 
   870  0A1A                     	;# 
   871  0A1B                     	;# 
   872  0A1B                     	;# 
   873  0A1B                     	;# 
   874  0A1C                     	;# 
   875  0A1C                     	;# 
   876  0A1D                     	;# 
   877  0A1D                     	;# 
   878  0A1E                     	;# 
   879  0A1E                     	;# 
   880  0A1F                     	;# 
   881  0A1F                     	;# 
   882  0A1F                     	;# 
   883  1E0F                     	;# 
   884  1E10                     	;# 
   885  1E11                     	;# 
   886  1E12                     	;# 
   887  1E13                     	;# 
   888  1E14                     	;# 
   889  1E15                     	;# 
   890  1E16                     	;# 
   891  1E17                     	;# 
   892  1E18                     	;# 
   893  1E19                     	;# 
   894  1E1A                     	;# 
   895  1E1B                     	;# 
   896  1E1C                     	;# 
   897  1E1D                     	;# 
   898  1E1E                     	;# 
   899  1E1F                     	;# 
   900  1E20                     	;# 
   901  1E21                     	;# 
   902  1E22                     	;# 
   903  1E23                     	;# 
   904  1E24                     	;# 
   905  1E25                     	;# 
   906  1E26                     	;# 
   907  1E27                     	;# 
   908  1E28                     	;# 
   909  1E29                     	;# 
   910  1E2A                     	;# 
   911  1E2B                     	;# 
   912  1E2C                     	;# 
   913  1E2D                     	;# 
   914  1E2E                     	;# 
   915  1E2F                     	;# 
   916  1E30                     	;# 
   917  1E31                     	;# 
   918  1E32                     	;# 
   919  1E33                     	;# 
   920  1E34                     	;# 
   921  1E35                     	;# 
   922  1E36                     	;# 
   923  1E37                     	;# 
   924  1E8F                     	;# 
   925  1E90                     	;# 
   926  1E91                     	;# 
   927  1E92                     	;# 
   928  1E93                     	;# 
   929  1E9C                     	;# 
   930  1EA1                     	;# 
   931  1EA2                     	;# 
   932  1EB1                     	;# 
   933  1EBB                     	;# 
   934  1EBC                     	;# 
   935  1EBD                     	;# 
   936  1EBE                     	;# 
   937  1EC3                     	;# 
   938  1EC5                     	;# 
   939  1EC6                     	;# 
   940  1EC7                     	;# 
   941  1ECB                     	;# 
   942  1ECC                     	;# 
   943  1ECD                     	;# 
   944  1ECE                     	;# 
   945  1F10                     	;# 
   946  1F11                     	;# 
   947  1F12                     	;# 
   948  1F13                     	;# 
   949  1F14                     	;# 
   950  1F15                     	;# 
   951  1F20                     	;# 
   952  1F21                     	;# 
   953  1F22                     	;# 
   954  1F23                     	;# 
   955  1F24                     	;# 
   956  1F25                     	;# 
   957  1F38                     	;# 
   958  1F39                     	;# 
   959  1F3A                     	;# 
   960  1F3B                     	;# 
   961  1F3C                     	;# 
   962  1F3D                     	;# 
   963  1F3E                     	;# 
   964  1F3F                     	;# 
   965  1F4E                     	;# 
   966  1F4F                     	;# 
   967  1F50                     	;# 
   968  1F51                     	;# 
   969  1F52                     	;# 
   970  1F53                     	;# 
   971  1F54                     	;# 
   972  1F55                     	;# 
   973  1FE4                     	;# 
   974  1FE5                     	;# 
   975  1FE6                     	;# 
   976  1FE7                     	;# 
   977  1FE8                     	;# 
   978  1FE8                     	;# 
   979  1FE9                     	;# 
   980  1FEA                     	;# 
   981  1FEA                     	;# 
   982  1FEB                     	;# 
   983  1FED                     	;# 
   984  1FEE                     	;# 
   985  1FEF                     	;# 
   986  0000                     	;# 
   987  0001                     	;# 
   988  0002                     	;# 
   989  0003                     	;# 
   990  0004                     	;# 
   991  0005                     	;# 
   992  0006                     	;# 
   993  0007                     	;# 
   994  0008                     	;# 
   995  0009                     	;# 
   996  000A                     	;# 
   997  000B                     	;# 
   998  000C                     	;# 
   999  000E                     	;# 
  1000  0012                     	;# 
  1001  0014                     	;# 
  1002  0018                     	;# 
  1003  001A                     	;# 
  1004  009B                     	;# 
  1005  009B                     	;# 
  1006  009C                     	;# 
  1007  009D                     	;# 
  1008  009E                     	;# 
  1009  009F                     	;# 
  1010  0119                     	;# 
  1011  0119                     	;# 
  1012  0119                     	;# 
  1013  011A                     	;# 
  1014  011A                     	;# 
  1015  011A                     	;# 
  1016  011B                     	;# 
  1017  011B                     	;# 
  1018  011B                     	;# 
  1019  011B                     	;# 
  1020  011B                     	;# 
  1021  011C                     	;# 
  1022  011C                     	;# 
  1023  011C                     	;# 
  1024  011D                     	;# 
  1025  011D                     	;# 
  1026  011D                     	;# 
  1027  011E                     	;# 
  1028  011E                     	;# 
  1029  011E                     	;# 
  1030  011F                     	;# 
  1031  011F                     	;# 
  1032  011F                     	;# 
  1033  011F                     	;# 
  1034  011F                     	;# 
  1035  018C                     	;# 
  1036  018D                     	;# 
  1037  018E                     	;# 
  1038  018F                     	;# 
  1039  0190                     	;# 
  1040  0191                     	;# 
  1041  0192                     	;# 
  1042  020C                     	;# 
  1043  020C                     	;# 
  1044  020D                     	;# 
  1045  020E                     	;# 
  1046  020F                     	;# 
  1047  020F                     	;# 
  1048  0210                     	;# 
  1049  0210                     	;# 
  1050  0211                     	;# 
  1051  0211                     	;# 
  1052  028C                     	;# 
  1053  028C                     	;# 
  1054  028D                     	;# 
  1055  028D                     	;# 
  1056  028E                     	;# 
  1057  028F                     	;# 
  1058  0290                     	;# 
  1059  0291                     	;# 
  1060  030C                     	;# 
  1061  030C                     	;# 
  1062  030D                     	;# 
  1063  030E                     	;# 
  1064  030F                     	;# 
  1065  0310                     	;# 
  1066  0310                     	;# 
  1067  0311                     	;# 
  1068  0312                     	;# 
  1069  0313                     	;# 
  1070  0314                     	;# 
  1071  0314                     	;# 
  1072  0315                     	;# 
  1073  0316                     	;# 
  1074  0318                     	;# 
  1075  0318                     	;# 
  1076  0319                     	;# 
  1077  031A                     	;# 
  1078  031C                     	;# 
  1079  031C                     	;# 
  1080  031D                     	;# 
  1081  031E                     	;# 
  1082  038C                     	;# 
  1083  038C                     	;# 
  1084  038D                     	;# 
  1085  038E                     	;# 
  1086  058C                     	;# 
  1087  058C                     	;# 
  1088  058D                     	;# 
  1089  058E                     	;# 
  1090  058F                     	;# 
  1091  058F                     	;# 
  1092  0590                     	;# 
  1093  0591                     	;# 
  1094  0592                     	;# 
  1095  0593                     	;# 
  1096  059C                     	;# 
  1097  059C                     	;# 
  1098  059D                     	;# 
  1099  059D                     	;# 
  1100  059E                     	;# 
  1101  059F                     	;# 
  1102  060C                     	;# 
  1103  060D                     	;# 
  1104  060E                     	;# 
  1105  060F                     	;# 
  1106  0610                     	;# 
  1107  0611                     	;# 
  1108  0612                     	;# 
  1109  0613                     	;# 
  1110  0614                     	;# 
  1111  070C                     	;# 
  1112  070D                     	;# 
  1113  070E                     	;# 
  1114  070F                     	;# 
  1115  0710                     	;# 
  1116  0711                     	;# 
  1117  0712                     	;# 
  1118  0713                     	;# 
  1119  0716                     	;# 
  1120  0717                     	;# 
  1121  0718                     	;# 
  1122  0719                     	;# 
  1123  071A                     	;# 
  1124  071B                     	;# 
  1125  071C                     	;# 
  1126  071D                     	;# 
  1127  0796                     	;# 
  1128  0797                     	;# 
  1129  0798                     	;# 
  1130  0799                     	;# 
  1131  079A                     	;# 
  1132  079B                     	;# 
  1133  080C                     	;# 
  1134  080D                     	;# 
  1135  080E                     	;# 
  1136  080F                     	;# 
  1137  0810                     	;# 
  1138  0811                     	;# 
  1139  0812                     	;# 
  1140  0813                     	;# 
  1141  0814                     	;# 
  1142  081A                     	;# 
  1143  081A                     	;# 
  1144  081B                     	;# 
  1145  081C                     	;# 
  1146  081C                     	;# 
  1147  081D                     	;# 
  1148  081E                     	;# 
  1149  081F                     	;# 
  1150  088C                     	;# 
  1151  088D                     	;# 
  1152  088E                     	;# 
  1153  088F                     	;# 
  1154  0890                     	;# 
  1155  0891                     	;# 
  1156  0892                     	;# 
  1157  0893                     	;# 
  1158  0895                     	;# 
  1159  0896                     	;# 
  1160  090C                     	;# 
  1161  090E                     	;# 
  1162  090F                     	;# 
  1163  091F                     	;# 
  1164  098F                     	;# 
  1165  098F                     	;# 
  1166  0990                     	;# 
  1167  0991                     	;# 
  1168  0992                     	;# 
  1169  0993                     	;# 
  1170  0994                     	;# 
  1171  0995                     	;# 
  1172  0996                     	;# 
  1173  0997                     	;# 
  1174  0A19                     	;# 
  1175  0A19                     	;# 
  1176  0A1A                     	;# 
  1177  0A1A                     	;# 
  1178  0A1B                     	;# 
  1179  0A1B                     	;# 
  1180  0A1B                     	;# 
  1181  0A1C                     	;# 
  1182  0A1C                     	;# 
  1183  0A1D                     	;# 
  1184  0A1D                     	;# 
  1185  0A1E                     	;# 
  1186  0A1E                     	;# 
  1187  0A1F                     	;# 
  1188  0A1F                     	;# 
  1189  0A1F                     	;# 
  1190  1E0F                     	;# 
  1191  1E10                     	;# 
  1192  1E11                     	;# 
  1193  1E12                     	;# 
  1194  1E13                     	;# 
  1195  1E14                     	;# 
  1196  1E15                     	;# 
  1197  1E16                     	;# 
  1198  1E17                     	;# 
  1199  1E18                     	;# 
  1200  1E19                     	;# 
  1201  1E1A                     	;# 
  1202  1E1B                     	;# 
  1203  1E1C                     	;# 
  1204  1E1D                     	;# 
  1205  1E1E                     	;# 
  1206  1E1F                     	;# 
  1207  1E20                     	;# 
  1208  1E21                     	;# 
  1209  1E22                     	;# 
  1210  1E23                     	;# 
  1211  1E24                     	;# 
  1212  1E25                     	;# 
  1213  1E26                     	;# 
  1214  1E27                     	;# 
  1215  1E28                     	;# 
  1216  1E29                     	;# 
  1217  1E2A                     	;# 
  1218  1E2B                     	;# 
  1219  1E2C                     	;# 
  1220  1E2D                     	;# 
  1221  1E2E                     	;# 
  1222  1E2F                     	;# 
  1223  1E30                     	;# 
  1224  1E31                     	;# 
  1225  1E32                     	;# 
  1226  1E33                     	;# 
  1227  1E34                     	;# 
  1228  1E35                     	;# 
  1229  1E36                     	;# 
  1230  1E37                     	;# 
  1231  1E8F                     	;# 
  1232  1E90                     	;# 
  1233  1E91                     	;# 
  1234  1E92                     	;# 
  1235  1E93                     	;# 
  1236  1E9C                     	;# 
  1237  1EA1                     	;# 
  1238  1EA2                     	;# 
  1239  1EB1                     	;# 
  1240  1EBB                     	;# 
  1241  1EBC                     	;# 
  1242  1EBD                     	;# 
  1243  1EBE                     	;# 
  1244  1EC3                     	;# 
  1245  1EC5                     	;# 
  1246  1EC6                     	;# 
  1247  1EC7                     	;# 
  1248  1ECB                     	;# 
  1249  1ECC                     	;# 
  1250  1ECD                     	;# 
  1251  1ECE                     	;# 
  1252  1F10                     	;# 
  1253  1F11                     	;# 
  1254  1F12                     	;# 
  1255  1F13                     	;# 
  1256  1F14                     	;# 
  1257  1F15                     	;# 
  1258  1F20                     	;# 
  1259  1F21                     	;# 
  1260  1F22                     	;# 
  1261  1F23                     	;# 
  1262  1F24                     	;# 
  1263  1F25                     	;# 
  1264  1F38                     	;# 
  1265  1F39                     	;# 
  1266  1F3A                     	;# 
  1267  1F3B                     	;# 
  1268  1F3C                     	;# 
  1269  1F3D                     	;# 
  1270  1F3E                     	;# 
  1271  1F3F                     	;# 
  1272  1F4E                     	;# 
  1273  1F4F                     	;# 
  1274  1F50                     	;# 
  1275  1F51                     	;# 
  1276  1F52                     	;# 
  1277  1F53                     	;# 
  1278  1F54                     	;# 
  1279  1F55                     	;# 
  1280  1FE4                     	;# 
  1281  1FE5                     	;# 
  1282  1FE6                     	;# 
  1283  1FE7                     	;# 
  1284  1FE8                     	;# 
  1285  1FE8                     	;# 
  1286  1FE9                     	;# 
  1287  1FEA                     	;# 
  1288  1FEA                     	;# 
  1289  1FEB                     	;# 
  1290  1FED                     	;# 
  1291  1FEE                     	;# 
  1292  1FEF                     	;# 
  1293  0000                     	;# 
  1294  0001                     	;# 
  1295  0002                     	;# 
  1296  0003                     	;# 
  1297  0004                     	;# 
  1298  0005                     	;# 
  1299  0006                     	;# 
  1300  0007                     	;# 
  1301  0008                     	;# 
  1302  0009                     	;# 
  1303  000A                     	;# 
  1304  000B                     	;# 
  1305  000C                     	;# 
  1306  000E                     	;# 
  1307  0012                     	;# 
  1308  0014                     	;# 
  1309  0018                     	;# 
  1310  001A                     	;# 
  1311  009B                     	;# 
  1312  009B                     	;# 
  1313  009C                     	;# 
  1314  009D                     	;# 
  1315  009E                     	;# 
  1316  009F                     	;# 
  1317  0119                     	;# 
  1318  0119                     	;# 
  1319  0119                     	;# 
  1320  011A                     	;# 
  1321  011A                     	;# 
  1322  011A                     	;# 
  1323  011B                     	;# 
  1324  011B                     	;# 
  1325  011B                     	;# 
  1326  011B                     	;# 
  1327  011B                     	;# 
  1328  011C                     	;# 
  1329  011C                     	;# 
  1330  011C                     	;# 
  1331  011D                     	;# 
  1332  011D                     	;# 
  1333  011D                     	;# 
  1334  011E                     	;# 
  1335  011E                     	;# 
  1336  011E                     	;# 
  1337  011F                     	;# 
  1338  011F                     	;# 
  1339  011F                     	;# 
  1340  011F                     	;# 
  1341  011F                     	;# 
  1342  018C                     	;# 
  1343  018D                     	;# 
  1344  018E                     	;# 
  1345  018F                     	;# 
  1346  0190                     	;# 
  1347  0191                     	;# 
  1348  0192                     	;# 
  1349  020C                     	;# 
  1350  020C                     	;# 
  1351  020D                     	;# 
  1352  020E                     	;# 
  1353  020F                     	;# 
  1354  020F                     	;# 
  1355  0210                     	;# 
  1356  0210                     	;# 
  1357  0211                     	;# 
  1358  0211                     	;# 
  1359  028C                     	;# 
  1360  028C                     	;# 
  1361  028D                     	;# 
  1362  028D                     	;# 
  1363  028E                     	;# 
  1364  028F                     	;# 
  1365  0290                     	;# 
  1366  0291                     	;# 
  1367  030C                     	;# 
  1368  030C                     	;# 
  1369  030D                     	;# 
  1370  030E                     	;# 
  1371  030F                     	;# 
  1372  0310                     	;# 
  1373  0310                     	;# 
  1374  0311                     	;# 
  1375  0312                     	;# 
  1376  0313                     	;# 
  1377  0314                     	;# 
  1378  0314                     	;# 
  1379  0315                     	;# 
  1380  0316                     	;# 
  1381  0318                     	;# 
  1382  0318                     	;# 
  1383  0319                     	;# 
  1384  031A                     	;# 
  1385  031C                     	;# 
  1386  031C                     	;# 
  1387  031D                     	;# 
  1388  031E                     	;# 
  1389  038C                     	;# 
  1390  038C                     	;# 
  1391  038D                     	;# 
  1392  038E                     	;# 
  1393  058C                     	;# 
  1394  058C                     	;# 
  1395  058D                     	;# 
  1396  058E                     	;# 
  1397  058F                     	;# 
  1398  058F                     	;# 
  1399  0590                     	;# 
  1400  0591                     	;# 
  1401  0592                     	;# 
  1402  0593                     	;# 
  1403  059C                     	;# 
  1404  059C                     	;# 
  1405  059D                     	;# 
  1406  059D                     	;# 
  1407  059E                     	;# 
  1408  059F                     	;# 
  1409  060C                     	;# 
  1410  060D                     	;# 
  1411  060E                     	;# 
  1412  060F                     	;# 
  1413  0610                     	;# 
  1414  0611                     	;# 
  1415  0612                     	;# 
  1416  0613                     	;# 
  1417  0614                     	;# 
  1418  070C                     	;# 
  1419  070D                     	;# 
  1420  070E                     	;# 
  1421  070F                     	;# 
  1422  0710                     	;# 
  1423  0711                     	;# 
  1424  0712                     	;# 
  1425  0713                     	;# 
  1426  0716                     	;# 
  1427  0717                     	;# 
  1428  0718                     	;# 
  1429  0719                     	;# 
  1430  071A                     	;# 
  1431  071B                     	;# 
  1432  071C                     	;# 
  1433  071D                     	;# 
  1434  0796                     	;# 
  1435  0797                     	;# 
  1436  0798                     	;# 
  1437  0799                     	;# 
  1438  079A                     	;# 
  1439  079B                     	;# 
  1440  080C                     	;# 
  1441  080D                     	;# 
  1442  080E                     	;# 
  1443  080F                     	;# 
  1444  0810                     	;# 
  1445  0811                     	;# 
  1446  0812                     	;# 
  1447  0813                     	;# 
  1448  0814                     	;# 
  1449  081A                     	;# 
  1450  081A                     	;# 
  1451  081B                     	;# 
  1452  081C                     	;# 
  1453  081C                     	;# 
  1454  081D                     	;# 
  1455  081E                     	;# 
  1456  081F                     	;# 
  1457  088C                     	;# 
  1458  088D                     	;# 
  1459  088E                     	;# 
  1460  088F                     	;# 
  1461  0890                     	;# 
  1462  0891                     	;# 
  1463  0892                     	;# 
  1464  0893                     	;# 
  1465  0895                     	;# 
  1466  0896                     	;# 
  1467  090C                     	;# 
  1468  090E                     	;# 
  1469  090F                     	;# 
  1470  091F                     	;# 
  1471  098F                     	;# 
  1472  098F                     	;# 
  1473  0990                     	;# 
  1474  0991                     	;# 
  1475  0992                     	;# 
  1476  0993                     	;# 
  1477  0994                     	;# 
  1478  0995                     	;# 
  1479  0996                     	;# 
  1480  0997                     	;# 
  1481  0A19                     	;# 
  1482  0A19                     	;# 
  1483  0A1A                     	;# 
  1484  0A1A                     	;# 
  1485  0A1B                     	;# 
  1486  0A1B                     	;# 
  1487  0A1B                     	;# 
  1488  0A1C                     	;# 
  1489  0A1C                     	;# 
  1490  0A1D                     	;# 
  1491  0A1D                     	;# 
  1492  0A1E                     	;# 
  1493  0A1E                     	;# 
  1494  0A1F                     	;# 
  1495  0A1F                     	;# 
  1496  0A1F                     	;# 
  1497  1E0F                     	;# 
  1498  1E10                     	;# 
  1499  1E11                     	;# 
  1500  1E12                     	;# 
  1501  1E13                     	;# 
  1502  1E14                     	;# 
  1503  1E15                     	;# 
  1504  1E16                     	;# 
  1505  1E17                     	;# 
  1506  1E18                     	;# 
  1507  1E19                     	;# 
  1508  1E1A                     	;# 
  1509  1E1B                     	;# 
  1510  1E1C                     	;# 
  1511  1E1D                     	;# 
  1512  1E1E                     	;# 
  1513  1E1F                     	;# 
  1514  1E20                     	;# 
  1515  1E21                     	;# 
  1516  1E22                     	;# 
  1517  1E23                     	;# 
  1518  1E24                     	;# 
  1519  1E25                     	;# 
  1520  1E26                     	;# 
  1521  1E27                     	;# 
  1522  1E28                     	;# 
  1523  1E29                     	;# 
  1524  1E2A                     	;# 
  1525  1E2B                     	;# 
  1526  1E2C                     	;# 
  1527  1E2D                     	;# 
  1528  1E2E                     	;# 
  1529  1E2F                     	;# 
  1530  1E30                     	;# 
  1531  1E31                     	;# 
  1532  1E32                     	;# 
  1533  1E33                     	;# 
  1534  1E34                     	;# 
  1535  1E35                     	;# 
  1536  1E36                     	;# 
  1537  1E37                     	;# 
  1538  1E8F                     	;# 
  1539  1E90                     	;# 
  1540  1E91                     	;# 
  1541  1E92                     	;# 
  1542  1E93                     	;# 
  1543  1E9C                     	;# 
  1544  1EA1                     	;# 
  1545  1EA2                     	;# 
  1546  1EB1                     	;# 
  1547  1EBB                     	;# 
  1548  1EBC                     	;# 
  1549  1EBD                     	;# 
  1550  1EBE                     	;# 
  1551  1EC3                     	;# 
  1552  1EC5                     	;# 
  1553  1EC6                     	;# 
  1554  1EC7                     	;# 
  1555  1ECB                     	;# 
  1556  1ECC                     	;# 
  1557  1ECD                     	;# 
  1558  1ECE                     	;# 
  1559  1F10                     	;# 
  1560  1F11                     	;# 
  1561  1F12                     	;# 
  1562  1F13                     	;# 
  1563  1F14                     	;# 
  1564  1F15                     	;# 
  1565  1F20                     	;# 
  1566  1F21                     	;# 
  1567  1F22                     	;# 
  1568  1F23                     	;# 
  1569  1F24                     	;# 
  1570  1F25                     	;# 
  1571  1F38                     	;# 
  1572  1F39                     	;# 
  1573  1F3A                     	;# 
  1574  1F3B                     	;# 
  1575  1F3C                     	;# 
  1576  1F3D                     	;# 
  1577  1F3E                     	;# 
  1578  1F3F                     	;# 
  1579  1F4E                     	;# 
  1580  1F4F                     	;# 
  1581  1F50                     	;# 
  1582  1F51                     	;# 
  1583  1F52                     	;# 
  1584  1F53                     	;# 
  1585  1F54                     	;# 
  1586  1F55                     	;# 
  1587  1FE4                     	;# 
  1588  1FE5                     	;# 
  1589  1FE6                     	;# 
  1590  1FE7                     	;# 
  1591  1FE8                     	;# 
  1592  1FE8                     	;# 
  1593  1FE9                     	;# 
  1594  1FEA                     	;# 
  1595  1FEA                     	;# 
  1596  1FEB                     	;# 
  1597  1FED                     	;# 
  1598  1FEE                     	;# 
  1599  1FEF                     	;# 
  1600                           
  1601                           	psect	idataBANK0
  1602  034B                     __pidataBANK0:	
  1603                           
  1604                           ;initializer for _volume
  1605  034B  340F               	retlw	15
  1606  0014                     _TRISCbits	set	20
  1607  000B                     _INTCONbits	set	11
  1608  0014                     _TRISC	set	20
  1609  0012                     _TRISA	set	18
  1610  0070                     _RC0	set	112
  1611  0071                     _RC1	set	113
  1612  0064                     _RA4	set	100
  1613  0065                     _RA5	set	101
  1614  0073                     _RC3	set	115
  1615  0074                     _RC4	set	116
  1616  018C                     _SSP1BUF	set	396
  1617  0191                     _SSP1CON2bits	set	401
  1618  018F                     _SSP1STAT	set	399
  1619  018D                     _SSP1ADD	set	397
  1620  0191                     _SSP1CON2	set	401
  1621  0190                     _SSP1CON1	set	400
  1622  020C                     _TMR1	set	524
  1623  0211                     _T1CLK	set	529
  1624  020F                     _T1GCONbits	set	527
  1625  020E                     _T1CONbits	set	526
  1626  071A                     _PIE4bits	set	1818
  1627  3880                     _TMR1IF	set	14464
  1628  1E8F                     _PPSLOCK	set	7823
  1629  1EC5                     _SSP1CLKPPS	set	7877
  1630  1EC6                     _SSP1DATPPS	set	7878
  1631  1F20                     _RC0PPS	set	7968
  1632  1F21                     _RC1PPS	set	7969
  1633  1F4F                     _WPUC	set	8015
  1634  1F39                     _WPUA	set	7993
  1635  1F4E                     _ANSELC	set	8014
  1636  1F38                     _ANSELA	set	7992
  1637                           
  1638                           ; #config settings
  1639  0000                     
  1640                           	psect	cinit
  1641  001E                     start_initialization:	
  1642  001E                     __initialization:	
  1643                           
  1644                           ; Initialize objects allocated to BANK0
  1645  001E  3183  234B  3180   	fcall	__pidataBANK0	;fetch initializer
  1646  0021  00C0               	movwf	__pdataBANK0& (0+127)
  1647                           
  1648                           ; Clear objects allocated to BANK0
  1649  0022  3020               	movlw	low __pbssBANK0
  1650  0023  0084               	movwf	4
  1651  0024  3000               	movlw	high __pbssBANK0
  1652  0025  0085               	movwf	5
  1653  0026  3017               	movlw	23
  1654  0027  3183  2339  3180   	fcall	clear_ram0
  1655  002A                     end_of_initialization:	
  1656                           ;End of C runtime variable initialization code
  1657                           
  1658  002A                     __end_of__initialization:	
  1659  002A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1660  002B  0140               	movlb	0
  1661  002C  3180  282E         	ljmp	_main	;jump to C main() function
  1662                           
  1663                           	psect	bssBANK0
  1664  0020                     __pbssBANK0:	
  1665  0020                     _vol_minus_time_hold:	
  1666  0020                     	ds	4
  1667  0024                     _vol_minus_time_start:	
  1668  0024                     	ds	4
  1669  0028                     _vol_plus_time_hold:	
  1670  0028                     	ds	4
  1671  002C                     _vol_plus_time_start:	
  1672  002C                     	ds	4
  1673  0030                     _timer_counter:	
  1674  0030                     	ds	4
  1675  0034                     _vol_minus_state:	
  1676  0034                     	ds	1
  1677  0035                     _vol_plus_state:	
  1678  0035                     	ds	1
  1679  0036                     _set_volume:	
  1680  0036                     	ds	1
  1681                           
  1682                           	psect	dataBANK0
  1683  0040                     __pdataBANK0:	
  1684  0040                     _volume:	
  1685  0040                     	ds	1
  1686                           
  1687                           	psect	clrtext
  1688  0339                     clear_ram0:	
  1689                           ;	Called with FSR0 containing the base address, and
  1690                           ;	WREG with the size to clear
  1691                           
  1692  0339  0064               	clrwdt	;clear the watchdog before getting into this loop
  1693  033A                     clrloop0:	
  1694  033A  0180               	clrf	0	;clear RAM location pointed to by FSR
  1695  033B  3101               	addfsr 0,1
  1696  033C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1697  033D  2B3A               	goto	clrloop0	;have we reached the end yet?
  1698  033E  3400               	retlw	0	;all done for this memory range, return
  1699                           
  1700                           	psect	cstackCOMMON
  1701  0070                     __pcstackCOMMON:	
  1702  0070                     ?_PPS_unlock:	
  1703  0070                     ??_PPS_unlock:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706  0070                     ?_PPS_lock:	
  1707                           ; 1 bytes @ 0x0
  1708                           
  1709  0070                     ??_PPS_lock:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712  0070                     ?_LM49450_Wii_init:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715  0070                     ?_LM49450_PS2_init:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718  0070                     ?_LM49450_analog_init:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721  0070                     ?_LM49450_DC_init:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724  0070                     ?_PIC_SETUP:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727  0070                     ??_PIC_SETUP:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730  0070                     ?_ISR:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733  0070                     ??_ISR:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736  0070                     ?_main:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739  0070                     ?_I2C_Master_Wait:	
  1740                           ; 1 bytes @ 0x0
  1741                           
  1742  0070                     ??_I2C_Master_Wait:	
  1743                           ; 1 bytes @ 0x0
  1744                           
  1745  0070                     ?_I2C_Master_Start:	
  1746                           ; 1 bytes @ 0x0
  1747                           
  1748  0070                     ??_I2C_Master_Start:	
  1749                           ; 1 bytes @ 0x0
  1750                           
  1751  0070                     ?_I2C_Master_Stop:	
  1752                           ; 1 bytes @ 0x0
  1753                           
  1754  0070                     ??_I2C_Master_Stop:	
  1755                           ; 1 bytes @ 0x0
  1756                           
  1757  0070                     ?_I2C_Master_Write:	
  1758                           ; 1 bytes @ 0x0
  1759                           
  1760  0070                     ??_I2C_Master_Write:	
  1761                           ; 1 bytes @ 0x0
  1762                           
  1763  0070                     ?_get_time:	
  1764                           ; 1 bytes @ 0x0
  1765                           
  1766  0070                     ?_timer_diff:	
  1767                           ; 4 bytes @ 0x0
  1768                           
  1769  0070                     ?___lldiv:	
  1770                           ; 4 bytes @ 0x0
  1771                           
  1772  0070                     I2C_Master_Write@data:	
  1773                           ; 4 bytes @ 0x0
  1774                           
  1775  0070                     timer_diff@t:	
  1776                           ; 1 bytes @ 0x0
  1777                           
  1778  0070                     ___lldiv@divisor:	
  1779                           ; 4 bytes @ 0x0
  1780                           
  1781                           
  1782                           ; 4 bytes @ 0x0
  1783  0070                     	ds	1
  1784  0071                     ?_LM49450_write:	
  1785  0071                     LM49450_write@data:	
  1786                           ; 1 bytes @ 0x1
  1787                           
  1788                           
  1789                           ; 1 bytes @ 0x1
  1790  0071                     	ds	1
  1791  0072                     ??_LM49450_write:	
  1792  0072                     LM49450_write@reg:	
  1793                           ; 1 bytes @ 0x2
  1794                           
  1795                           
  1796                           ; 1 bytes @ 0x2
  1797  0072                     	ds	1
  1798  0073                     ??_LM49450_Wii_init:	
  1799  0073                     ??_LM49450_PS2_init:	
  1800                           ; 1 bytes @ 0x3
  1801                           
  1802  0073                     ??_LM49450_analog_init:	
  1803                           ; 1 bytes @ 0x3
  1804                           
  1805  0073                     ??_LM49450_DC_init:	
  1806                           ; 1 bytes @ 0x3
  1807                           
  1808                           
  1809                           ; 1 bytes @ 0x3
  1810  0073                     	ds	1
  1811  0074                     ??_get_time:	
  1812  0074                     ??_timer_diff:	
  1813                           ; 1 bytes @ 0x4
  1814                           
  1815  0074                     ___lldiv@dividend:	
  1816                           ; 1 bytes @ 0x4
  1817                           
  1818                           
  1819                           ; 4 bytes @ 0x4
  1820  0074                     	ds	4
  1821  0078                     ??___lldiv:	
  1822                           
  1823                           ; 1 bytes @ 0x8
  1824  0078                     	ds	1
  1825  0079                     ___lldiv@quotient:	
  1826                           
  1827                           ; 4 bytes @ 0x9
  1828  0079                     	ds	4
  1829  007D                     ___lldiv@counter:	
  1830                           
  1831                           ; 1 bytes @ 0xD
  1832  007D                     	ds	1
  1833                           
  1834                           	psect	cstackBANK0
  1835  0037                     __pcstackBANK0:	
  1836  0037                     ?_I2C_Master_Init:	
  1837  0037                     I2C_Master_Init@clk:	
  1838                           ; 1 bytes @ 0x0
  1839                           
  1840                           
  1841                           ; 4 bytes @ 0x0
  1842  0037                     	ds	4
  1843  003B                     ??_I2C_Master_Init:	
  1844                           
  1845                           ; 1 bytes @ 0x4
  1846  003B                     	ds	4
  1847  003F                     ??_main:	
  1848                           
  1849                           ; 1 bytes @ 0x8
  1850  003F                     	ds	1
  1851                           
  1852                           	psect	maintext
  1853  002E                     __pmaintext:	
  1854 ;;
  1855 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1856 ;;
  1857 ;; *************** function _main *****************
  1858 ;; Defined at:
  1859 ;;		line 67 in file "main.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;		None
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : B3F/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1873 ;;      Params:         0       0       0       0       0       0       0       0
  1874 ;;      Locals:         0       0       0       0       0       0       0       0
  1875 ;;      Temps:          0       1       0       0       0       0       0       0
  1876 ;;      Totals:         0       1       0       0       0       0       0       0
  1877 ;;Total ram usage:        1 bytes
  1878 ;; Hardware stack levels required when called:    5
  1879 ;; This function calls:
  1880 ;;		_I2C_Master_Init
  1881 ;;		_LM49450_DC_init
  1882 ;;		_LM49450_PS2_init
  1883 ;;		_LM49450_Wii_init
  1884 ;;		_LM49450_analog_init
  1885 ;;		_LM49450_write
  1886 ;;		_PIC_SETUP
  1887 ;;		_PPS_lock
  1888 ;;		_PPS_unlock
  1889 ;;		_get_time
  1890 ;;		_timer_diff
  1891 ;; This function is called by:
  1892 ;;		Startup code after reset
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           
  1897                           ;psect for function _main
  1898  002E                     _main:	
  1899  002E                     l1177:	
  1900                           ;incstack = 0
  1901                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1902                           
  1903                           
  1904                           ;main.c: 69: PIC_SETUP();
  1905  002E  3182  22BA  3180   	fcall	_PIC_SETUP
  1906                           
  1907                           ;main.c: 72: PPS_unlock();
  1908  0031  3183  2332  3180   	fcall	_PPS_unlock
  1909  0034                     l1179:	
  1910                           
  1911                           ;main.c: 73: SSP1DATPPS = 0x11;
  1912  0034  3011               	movlw	17
  1913  0035  017D               	movlb	61	; select bank61
  1914  0036  00C6               	movwf	70	;volatile
  1915  0037                     l1181:	
  1916                           
  1917                           ;main.c: 74: RC1PPS = 0x16;
  1918  0037  3016               	movlw	22
  1919  0038  017E               	movlb	62	; select bank62
  1920  0039  00A1               	movwf	33	;volatile
  1921  003A                     l1183:	
  1922                           
  1923                           ;main.c: 75: SSP1CLKPPS = 0x10;
  1924  003A  3010               	movlw	16
  1925  003B  017D               	movlb	61	; select bank61
  1926  003C  00C5               	movwf	69	;volatile
  1927  003D                     l1185:	
  1928                           
  1929                           ;main.c: 76: RC0PPS = 0x15;
  1930  003D  3015               	movlw	21
  1931  003E  017E               	movlb	62	; select bank62
  1932  003F  00A0               	movwf	32	;volatile
  1933                           
  1934                           ;main.c: 77: PPS_lock();
  1935  0040  3183  2322  3180   	fcall	_PPS_lock
  1936                           
  1937                           ;main.c: 78: I2C_Master_Init(100000);
  1938  0043  3000               	movlw	0
  1939  0044  0140               	movlb	0	; select bank0
  1940  0045  00BA               	movwf	I2C_Master_Init@clk+3
  1941  0046  3001               	movlw	1
  1942  0047  00B9               	movwf	I2C_Master_Init@clk+2
  1943  0048  3086               	movlw	134
  1944  0049  00B8               	movwf	I2C_Master_Init@clk+1
  1945  004A  30A0               	movlw	160
  1946  004B  00B7               	movwf	I2C_Master_Init@clk
  1947  004C  3182  221E  3180   	fcall	_I2C_Master_Init
  1948  004F                     l1187:	
  1949                           
  1950                           ;main.c: 81: if(RC4 && RC3) {
  1951  004F  0140               	movlb	0	; select bank0
  1952  0050  1E0E               	btfss	14,4	;volatile
  1953  0051  2853               	goto	u481
  1954  0052  2854               	goto	u480
  1955  0053                     u481:	
  1956  0053  285C               	goto	l94
  1957  0054                     u480:	
  1958  0054                     l1189:	
  1959  0054  1D8E               	btfss	14,3	;volatile
  1960  0055  2857               	goto	u491
  1961  0056  2858               	goto	u490
  1962  0057                     u491:	
  1963  0057  285C               	goto	l94
  1964  0058                     u490:	
  1965  0058                     l1191:	
  1966                           
  1967                           ;main.c: 82: LM49450_Wii_init();
  1968  0058  3182  2272  3180   	fcall	_LM49450_Wii_init
  1969                           
  1970                           ;main.c: 83: }
  1971  005B  287F               	goto	l95
  1972  005C                     l94:	
  1973                           
  1974                           ;main.c: 84: else if(RC4 && !RC3) {
  1975  005C  1E0E               	btfss	14,4	;volatile
  1976  005D  285F               	goto	u501
  1977  005E  2860               	goto	u500
  1978  005F                     u501:	
  1979  005F  2868               	goto	l96
  1980  0060                     u500:	
  1981  0060                     l1193:	
  1982  0060  198E               	btfsc	14,3	;volatile
  1983  0061  2863               	goto	u511
  1984  0062  2864               	goto	u510
  1985  0063                     u511:	
  1986  0063  2868               	goto	l96
  1987  0064                     u510:	
  1988  0064                     l1195:	
  1989                           
  1990                           ;main.c: 85: LM49450_PS2_init();
  1991  0064  3182  224C  3180   	fcall	_LM49450_PS2_init
  1992                           
  1993                           ;main.c: 86: }
  1994  0067  287F               	goto	l95
  1995  0068                     l96:	
  1996                           
  1997                           ;main.c: 87: else if(!RC4 && !RC3) {
  1998  0068  1A0E               	btfsc	14,4	;volatile
  1999  0069  286B               	goto	u521
  2000  006A  286C               	goto	u520
  2001  006B                     u521:	
  2002  006B  2874               	goto	l98
  2003  006C                     u520:	
  2004  006C                     l1197:	
  2005  006C  198E               	btfsc	14,3	;volatile
  2006  006D  286F               	goto	u531
  2007  006E  2870               	goto	u530
  2008  006F                     u531:	
  2009  006F  2874               	goto	l98
  2010  0070                     u530:	
  2011  0070                     l1199:	
  2012                           
  2013                           ;main.c: 88: LM49450_analog_init();
  2014  0070  3183  2319  3180   	fcall	_LM49450_analog_init
  2015                           
  2016                           ;main.c: 89: }
  2017  0073  287F               	goto	l95
  2018  0074                     l98:	
  2019                           
  2020                           ;main.c: 90: else if(!RC4 && RC3) {
  2021  0074  1A0E               	btfsc	14,4	;volatile
  2022  0075  2877               	goto	u541
  2023  0076  2878               	goto	u540
  2024  0077                     u541:	
  2025  0077  287F               	goto	l95
  2026  0078                     u540:	
  2027  0078                     l1201:	
  2028  0078  1D8E               	btfss	14,3	;volatile
  2029  0079  287B               	goto	u551
  2030  007A  287C               	goto	u550
  2031  007B                     u551:	
  2032  007B  287F               	goto	l95
  2033  007C                     u550:	
  2034  007C                     l1203:	
  2035                           
  2036                           ;main.c: 91: LM49450_DC_init();
  2037  007C  3182  2296  3180   	fcall	_LM49450_DC_init
  2038  007F                     l95:	
  2039                           
  2040                           ;main.c: 92: };main.c: 95: LM49450_write(0x08, volume);
  2041  007F  0140               	movlb	0	; select bank0
  2042  0080  0840               	movf	_volume,w
  2043  0081  00BF               	movwf	??_main
  2044  0082  083F               	movf	??_main,w
  2045  0083  00F1               	movwf	LM49450_write@data
  2046  0084  3008               	movlw	8
  2047  0085  3182  22EF  3180   	fcall	_LM49450_write
  2048                           
  2049                           ;main.c: 96: LM49450_write(0x07, volume);
  2050  0088  0140               	movlb	0	; select bank0
  2051  0089  0840               	movf	_volume,w
  2052  008A  00BF               	movwf	??_main
  2053  008B  083F               	movf	??_main,w
  2054  008C  00F1               	movwf	LM49450_write@data
  2055  008D  3007               	movlw	7
  2056  008E  3182  22EF  3180   	fcall	_LM49450_write
  2057  0091                     l1205:	
  2058                           
  2059                           ;main.c: 100: if(!RA5) {
  2060  0091  0140               	movlb	0	; select bank0
  2061  0092  1A8C               	btfsc	12,5	;volatile
  2062  0093  2895               	goto	u561
  2063  0094  2896               	goto	u560
  2064  0095                     u561:	
  2065  0095  28FE               	goto	l1231
  2066  0096                     u560:	
  2067  0096  2900               	goto	l1233
  2068  0097                     l1209:	
  2069                           
  2070                           ;main.c: 104: vol_plus_time_start = get_time();
  2071  0097  3183  230F  3180   	fcall	_get_time
  2072  009A  0873               	movf	?_get_time+3,w
  2073  009B  0140               	movlb	0	; select bank0
  2074  009C  00AF               	movwf	_vol_plus_time_start+3
  2075  009D  0872               	movf	?_get_time+2,w
  2076  009E  00AE               	movwf	_vol_plus_time_start+2
  2077  009F  0871               	movf	?_get_time+1,w
  2078  00A0  00AD               	movwf	_vol_plus_time_start+1
  2079  00A1  0870               	movf	?_get_time,w
  2080  00A2  00AC               	movwf	_vol_plus_time_start
  2081  00A3                     l1211:	
  2082                           
  2083                           ;main.c: 105: vol_plus_state = 1;
  2084  00A3  01B5               	clrf	_vol_plus_state
  2085  00A4  0AB5               	incf	_vol_plus_state,f
  2086                           
  2087                           ;main.c: 106: break;
  2088  00A5  290B               	goto	l1237
  2089  00A6                     l1213:	
  2090                           
  2091                           ;main.c: 109: if(timer_diff(vol_plus_time_start) >= 4) {
  2092  00A6  082F               	movf	_vol_plus_time_start+3,w
  2093  00A7  00F3               	movwf	timer_diff@t+3
  2094  00A8  082E               	movf	_vol_plus_time_start+2,w
  2095  00A9  00F2               	movwf	timer_diff@t+2
  2096  00AA  082D               	movf	_vol_plus_time_start+1,w
  2097  00AB  00F1               	movwf	timer_diff@t+1
  2098  00AC  082C               	movf	_vol_plus_time_start,w
  2099  00AD  00F0               	movwf	timer_diff@t
  2100  00AE  3182  22D9  3180   	fcall	_timer_diff
  2101  00B1  0873               	movf	?_timer_diff+3,w
  2102  00B2  1D03               	btfss	3,2
  2103  00B3  28C0               	goto	u570
  2104  00B4  0872               	movf	?_timer_diff+2,w
  2105  00B5  1D03               	btfss	3,2
  2106  00B6  28C0               	goto	u570
  2107  00B7  0871               	movf	?_timer_diff+1,w
  2108  00B8  1D03               	btfss	3,2
  2109  00B9  28C0               	goto	u570
  2110  00BA  3004               	movlw	4
  2111  00BB  0270               	subwf	?_timer_diff,w
  2112  00BC  1C03               	btfss	3,0
  2113  00BD  28BF               	goto	u571
  2114  00BE  28C0               	goto	u570
  2115  00BF                     u571:	
  2116  00BF  290B               	goto	l1237
  2117  00C0                     u570:	
  2118  00C0                     l1215:	
  2119                           
  2120                           ;main.c: 110: vol_plus_time_hold = get_time();
  2121  00C0  3183  230F  3180   	fcall	_get_time
  2122  00C3  0873               	movf	?_get_time+3,w
  2123  00C4  0140               	movlb	0	; select bank0
  2124  00C5  00AB               	movwf	_vol_plus_time_hold+3
  2125  00C6  0872               	movf	?_get_time+2,w
  2126  00C7  00AA               	movwf	_vol_plus_time_hold+2
  2127  00C8  0871               	movf	?_get_time+1,w
  2128  00C9  00A9               	movwf	_vol_plus_time_hold+1
  2129  00CA  0870               	movf	?_get_time,w
  2130  00CB  00A8               	movwf	_vol_plus_time_hold
  2131  00CC                     l1217:	
  2132                           
  2133                           ;main.c: 111: vol_plus_state = 2;
  2134  00CC  3002               	movlw	2
  2135  00CD  00BF               	movwf	??_main
  2136  00CE  083F               	movf	??_main,w
  2137  00CF  00B5               	movwf	_vol_plus_state
  2138  00D0                     l1219:	
  2139                           
  2140                           ;main.c: 112: volume++;
  2141  00D0  3001               	movlw	1
  2142  00D1  00BF               	movwf	??_main
  2143  00D2  083F               	movf	??_main,w
  2144  00D3  07C0               	addwf	_volume,f
  2145  00D4                     l1221:	
  2146                           
  2147                           ;main.c: 113: set_volume = 1;
  2148  00D4  01B6               	clrf	_set_volume
  2149  00D5  0AB6               	incf	_set_volume,f
  2150  00D6  290B               	goto	l1237
  2151  00D7                     l1223:	
  2152                           
  2153                           ;main.c: 118: if(timer_diff(vol_plus_time_hold) >= 20) {
  2154  00D7  082B               	movf	_vol_plus_time_hold+3,w
  2155  00D8  00F3               	movwf	timer_diff@t+3
  2156  00D9  082A               	movf	_vol_plus_time_hold+2,w
  2157  00DA  00F2               	movwf	timer_diff@t+2
  2158  00DB  0829               	movf	_vol_plus_time_hold+1,w
  2159  00DC  00F1               	movwf	timer_diff@t+1
  2160  00DD  0828               	movf	_vol_plus_time_hold,w
  2161  00DE  00F0               	movwf	timer_diff@t
  2162  00DF  3182  22D9  3180   	fcall	_timer_diff
  2163  00E2  0873               	movf	?_timer_diff+3,w
  2164  00E3  1D03               	btfss	3,2
  2165  00E4  28F1               	goto	u580
  2166  00E5  0872               	movf	?_timer_diff+2,w
  2167  00E6  1D03               	btfss	3,2
  2168  00E7  28F1               	goto	u580
  2169  00E8  0871               	movf	?_timer_diff+1,w
  2170  00E9  1D03               	btfss	3,2
  2171  00EA  28F1               	goto	u580
  2172  00EB  3014               	movlw	20
  2173  00EC  0270               	subwf	?_timer_diff,w
  2174  00ED  1C03               	btfss	3,0
  2175  00EE  28F0               	goto	u581
  2176  00EF  28F1               	goto	u580
  2177  00F0                     u581:	
  2178  00F0  290B               	goto	l1237
  2179  00F1                     u580:	
  2180  00F1                     l1225:	
  2181                           
  2182                           ;main.c: 119: vol_plus_time_hold = get_time();
  2183  00F1  3183  230F  3180   	fcall	_get_time
  2184  00F4  0873               	movf	?_get_time+3,w
  2185  00F5  0140               	movlb	0	; select bank0
  2186  00F6  00AB               	movwf	_vol_plus_time_hold+3
  2187  00F7  0872               	movf	?_get_time+2,w
  2188  00F8  00AA               	movwf	_vol_plus_time_hold+2
  2189  00F9  0871               	movf	?_get_time+1,w
  2190  00FA  00A9               	movwf	_vol_plus_time_hold+1
  2191  00FB  0870               	movf	?_get_time,w
  2192  00FC  00A8               	movwf	_vol_plus_time_hold
  2193  00FD  28D0               	goto	l1219
  2194  00FE                     l1231:	
  2195                           
  2196                           ;main.c: 125: vol_plus_state = 0;
  2197  00FE  01B5               	clrf	_vol_plus_state
  2198                           
  2199                           ;main.c: 126: }
  2200  00FF  290B               	goto	l1237
  2201  0100                     l1233:	
  2202  0100  0835               	movf	_vol_plus_state,w
  2203                           
  2204                           ; Switch size 1, requested type "simple"
  2205                           ; Number of cases is 3, Range of values is 0 to 2
  2206                           ; switch strategies available:
  2207                           ; Name         Instructions Cycles
  2208                           ; simple_byte           10     6 (average)
  2209                           ; direct_byte           12     6 (fixed)
  2210                           ; jumptable            260     6 (fixed)
  2211                           ;	Chosen strategy is simple_byte
  2212  0101  3A00               	xorlw	0	; case 0
  2213  0102  1903               	skipnz
  2214  0103  2897               	goto	l1209
  2215  0104  3A01               	xorlw	1	; case 1
  2216  0105  1903               	skipnz
  2217  0106  28A6               	goto	l1213
  2218  0107  3A03               	xorlw	3	; case 2
  2219  0108  1903               	skipnz
  2220  0109  28D7               	goto	l1223
  2221  010A  28FE               	goto	l1231
  2222  010B                     l1237:	
  2223                           
  2224                           ;main.c: 130: };main.c: 132: if(!RA4) {
  2225  010B  0140               	movlb	0	; select bank0
  2226  010C  1A0C               	btfsc	12,4	;volatile
  2227  010D  290F               	goto	u591
  2228  010E  2910               	goto	u590
  2229  010F                     u591:	
  2230  010F  2976               	goto	l1263
  2231  0110                     u590:	
  2232  0110  2978               	goto	l1265
  2233  0111                     l1241:	
  2234                           
  2235                           ;main.c: 135: vol_minus_time_start = get_time();
  2236  0111  3183  230F  3180   	fcall	_get_time
  2237  0114  0873               	movf	?_get_time+3,w
  2238  0115  0140               	movlb	0	; select bank0
  2239  0116  00A7               	movwf	_vol_minus_time_start+3
  2240  0117  0872               	movf	?_get_time+2,w
  2241  0118  00A6               	movwf	_vol_minus_time_start+2
  2242  0119  0871               	movf	?_get_time+1,w
  2243  011A  00A5               	movwf	_vol_minus_time_start+1
  2244  011B  0870               	movf	?_get_time,w
  2245  011C  00A4               	movwf	_vol_minus_time_start
  2246  011D                     l1243:	
  2247                           
  2248                           ;main.c: 136: vol_minus_state = 1;
  2249  011D  01B4               	clrf	_vol_minus_state
  2250  011E  0AB4               	incf	_vol_minus_state,f
  2251                           
  2252                           ;main.c: 137: break;
  2253  011F  2983               	goto	l1269
  2254  0120                     l1245:	
  2255                           
  2256                           ;main.c: 139: if(timer_diff(vol_minus_time_start) >= 4) {
  2257  0120  0827               	movf	_vol_minus_time_start+3,w
  2258  0121  00F3               	movwf	timer_diff@t+3
  2259  0122  0826               	movf	_vol_minus_time_start+2,w
  2260  0123  00F2               	movwf	timer_diff@t+2
  2261  0124  0825               	movf	_vol_minus_time_start+1,w
  2262  0125  00F1               	movwf	timer_diff@t+1
  2263  0126  0824               	movf	_vol_minus_time_start,w
  2264  0127  00F0               	movwf	timer_diff@t
  2265  0128  3182  22D9  3180   	fcall	_timer_diff
  2266  012B  0873               	movf	?_timer_diff+3,w
  2267  012C  1D03               	btfss	3,2
  2268  012D  293A               	goto	u600
  2269  012E  0872               	movf	?_timer_diff+2,w
  2270  012F  1D03               	btfss	3,2
  2271  0130  293A               	goto	u600
  2272  0131  0871               	movf	?_timer_diff+1,w
  2273  0132  1D03               	btfss	3,2
  2274  0133  293A               	goto	u600
  2275  0134  3004               	movlw	4
  2276  0135  0270               	subwf	?_timer_diff,w
  2277  0136  1C03               	btfss	3,0
  2278  0137  2939               	goto	u601
  2279  0138  293A               	goto	u600
  2280  0139                     u601:	
  2281  0139  2983               	goto	l1269
  2282  013A                     u600:	
  2283  013A                     l1247:	
  2284                           
  2285                           ;main.c: 140: vol_minus_time_hold = get_time();
  2286  013A  3183  230F  3180   	fcall	_get_time
  2287  013D  0873               	movf	?_get_time+3,w
  2288  013E  0140               	movlb	0	; select bank0
  2289  013F  00A3               	movwf	_vol_minus_time_hold+3
  2290  0140  0872               	movf	?_get_time+2,w
  2291  0141  00A2               	movwf	_vol_minus_time_hold+2
  2292  0142  0871               	movf	?_get_time+1,w
  2293  0143  00A1               	movwf	_vol_minus_time_hold+1
  2294  0144  0870               	movf	?_get_time,w
  2295  0145  00A0               	movwf	_vol_minus_time_hold
  2296  0146                     l1249:	
  2297                           
  2298                           ;main.c: 141: vol_minus_state = 2;
  2299  0146  3002               	movlw	2
  2300  0147  00BF               	movwf	??_main
  2301  0148  083F               	movf	??_main,w
  2302  0149  00B4               	movwf	_vol_minus_state
  2303  014A                     l1251:	
  2304                           
  2305                           ;main.c: 142: volume--;
  2306  014A  3001               	movlw	1
  2307  014B  02C0               	subwf	_volume,f
  2308  014C                     l1253:	
  2309                           
  2310                           ;main.c: 143: set_volume = 1;
  2311  014C  01B6               	clrf	_set_volume
  2312  014D  0AB6               	incf	_set_volume,f
  2313  014E  2983               	goto	l1269
  2314  014F                     l1255:	
  2315                           
  2316                           ;main.c: 147: if(timer_diff(vol_minus_time_hold) >= 20) {
  2317  014F  0823               	movf	_vol_minus_time_hold+3,w
  2318  0150  00F3               	movwf	timer_diff@t+3
  2319  0151  0822               	movf	_vol_minus_time_hold+2,w
  2320  0152  00F2               	movwf	timer_diff@t+2
  2321  0153  0821               	movf	_vol_minus_time_hold+1,w
  2322  0154  00F1               	movwf	timer_diff@t+1
  2323  0155  0820               	movf	_vol_minus_time_hold,w
  2324  0156  00F0               	movwf	timer_diff@t
  2325  0157  3182  22D9  3180   	fcall	_timer_diff
  2326  015A  0873               	movf	?_timer_diff+3,w
  2327  015B  1D03               	btfss	3,2
  2328  015C  2969               	goto	u610
  2329  015D  0872               	movf	?_timer_diff+2,w
  2330  015E  1D03               	btfss	3,2
  2331  015F  2969               	goto	u610
  2332  0160  0871               	movf	?_timer_diff+1,w
  2333  0161  1D03               	btfss	3,2
  2334  0162  2969               	goto	u610
  2335  0163  3014               	movlw	20
  2336  0164  0270               	subwf	?_timer_diff,w
  2337  0165  1C03               	btfss	3,0
  2338  0166  2968               	goto	u611
  2339  0167  2969               	goto	u610
  2340  0168                     u611:	
  2341  0168  2983               	goto	l1269
  2342  0169                     u610:	
  2343  0169                     l1257:	
  2344                           
  2345                           ;main.c: 148: vol_minus_time_hold = get_time();
  2346  0169  3183  230F  3180   	fcall	_get_time
  2347  016C  0873               	movf	?_get_time+3,w
  2348  016D  0140               	movlb	0	; select bank0
  2349  016E  00A3               	movwf	_vol_minus_time_hold+3
  2350  016F  0872               	movf	?_get_time+2,w
  2351  0170  00A2               	movwf	_vol_minus_time_hold+2
  2352  0171  0871               	movf	?_get_time+1,w
  2353  0172  00A1               	movwf	_vol_minus_time_hold+1
  2354  0173  0870               	movf	?_get_time,w
  2355  0174  00A0               	movwf	_vol_minus_time_hold
  2356  0175  294A               	goto	l1251
  2357  0176                     l1263:	
  2358                           
  2359                           ;main.c: 154: vol_minus_state = 0;
  2360  0176  01B4               	clrf	_vol_minus_state
  2361                           
  2362                           ;main.c: 155: }
  2363  0177  2983               	goto	l1269
  2364  0178                     l1265:	
  2365  0178  0834               	movf	_vol_minus_state,w
  2366                           
  2367                           ; Switch size 1, requested type "simple"
  2368                           ; Number of cases is 3, Range of values is 0 to 2
  2369                           ; switch strategies available:
  2370                           ; Name         Instructions Cycles
  2371                           ; simple_byte           10     6 (average)
  2372                           ; direct_byte           12     6 (fixed)
  2373                           ; jumptable            260     6 (fixed)
  2374                           ;	Chosen strategy is simple_byte
  2375  0179  3A00               	xorlw	0	; case 0
  2376  017A  1903               	skipnz
  2377  017B  2911               	goto	l1241
  2378  017C  3A01               	xorlw	1	; case 1
  2379  017D  1903               	skipnz
  2380  017E  2920               	goto	l1245
  2381  017F  3A03               	xorlw	3	; case 2
  2382  0180  1903               	skipnz
  2383  0181  294F               	goto	l1255
  2384  0182  2976               	goto	l1263
  2385  0183                     l1269:	
  2386                           
  2387                           ;main.c: 159: };main.c: 162: if((vol_plus_state == 2) && (vol_minus_state == 2)) {
  2388  0183  3002               	movlw	2
  2389  0184  0140               	movlb	0	; select bank0
  2390  0185  0635               	xorwf	_vol_plus_state,w
  2391  0186  1D03               	btfss	3,2
  2392  0187  2989               	goto	u621
  2393  0188  298A               	goto	u620
  2394  0189                     u621:	
  2395  0189  2993               	goto	l1277
  2396  018A                     u620:	
  2397  018A                     l1271:	
  2398  018A  3002               	movlw	2
  2399  018B  0634               	xorwf	_vol_minus_state,w
  2400  018C  1D03               	btfss	3,2
  2401  018D  298F               	goto	u631
  2402  018E  2990               	goto	u630
  2403  018F                     u631:	
  2404  018F  2993               	goto	l1277
  2405  0190                     u630:	
  2406  0190                     l1273:	
  2407                           
  2408                           ;main.c: 163: volume = 0;
  2409  0190  01C0               	clrf	_volume
  2410  0191                     l1275:	
  2411                           
  2412                           ;main.c: 164: set_volume = 1;
  2413  0191  01B6               	clrf	_set_volume
  2414  0192  0AB6               	incf	_set_volume,f
  2415  0193                     l1277:	
  2416                           
  2417                           ;main.c: 165: };main.c: 167: if(set_volume) {
  2418  0193  0836               	movf	_set_volume,w
  2419  0194  1903               	btfsc	3,2
  2420  0195  2997               	goto	u641
  2421  0196  2998               	goto	u640
  2422  0197                     u641:	
  2423  0197  2891               	goto	l1205
  2424  0198                     u640:	
  2425  0198                     l1279:	
  2426                           
  2427                           ;main.c: 168: if(volume < 1 || volume > 250) {
  2428  0198  0840               	movf	_volume,w
  2429  0199  1903               	btfsc	3,2
  2430  019A  299C               	goto	u651
  2431  019B  299D               	goto	u650
  2432  019C                     u651:	
  2433  019C  29A3               	goto	l1283
  2434  019D                     u650:	
  2435  019D                     l1281:	
  2436  019D  30FB               	movlw	251
  2437  019E  0240               	subwf	_volume,w
  2438  019F  1C03               	skipc
  2439  01A0  29A2               	goto	u661
  2440  01A1  29A3               	goto	u660
  2441  01A2                     u661:	
  2442  01A2  29A4               	goto	l1285
  2443  01A3                     u660:	
  2444  01A3                     l1283:	
  2445                           
  2446                           ;main.c: 169: volume = 0;
  2447  01A3  01C0               	clrf	_volume
  2448  01A4                     l1285:	
  2449                           
  2450                           ;main.c: 170: };main.c: 171: if(volume > 31) {
  2451  01A4  3020               	movlw	32
  2452  01A5  0240               	subwf	_volume,w
  2453  01A6  1C03               	skipc
  2454  01A7  29A9               	goto	u671
  2455  01A8  29AA               	goto	u670
  2456  01A9                     u671:	
  2457  01A9  29AE               	goto	l1289
  2458  01AA                     u670:	
  2459  01AA                     l1287:	
  2460                           
  2461                           ;main.c: 172: volume = 31;
  2462  01AA  301F               	movlw	31
  2463  01AB  00BF               	movwf	??_main
  2464  01AC  083F               	movf	??_main,w
  2465  01AD  00C0               	movwf	_volume
  2466  01AE                     l1289:	
  2467                           
  2468                           ;main.c: 173: };main.c: 175: LM49450_write(0x08, volume);
  2469  01AE  0840               	movf	_volume,w
  2470  01AF  00BF               	movwf	??_main
  2471  01B0  083F               	movf	??_main,w
  2472  01B1  00F1               	movwf	LM49450_write@data
  2473  01B2  3008               	movlw	8
  2474  01B3  3182  22EF  3180   	fcall	_LM49450_write
  2475  01B6                     l1291:	
  2476                           
  2477                           ;main.c: 176: LM49450_write(0x07, volume);
  2478  01B6  0140               	movlb	0	; select bank0
  2479  01B7  0840               	movf	_volume,w
  2480  01B8  00BF               	movwf	??_main
  2481  01B9  083F               	movf	??_main,w
  2482  01BA  00F1               	movwf	LM49450_write@data
  2483  01BB  3007               	movlw	7
  2484  01BC  3182  22EF  3180   	fcall	_LM49450_write
  2485  01BF                     l1293:	
  2486                           
  2487                           ;main.c: 178: set_volume = 0;
  2488  01BF  0140               	movlb	0	; select bank0
  2489  01C0  01B6               	clrf	_set_volume
  2490  01C1  2891               	goto	l1205
  2491  01C2  3180  281C         	ljmp	start
  2492  01C4                     __end_of_main:	
  2493                           
  2494                           	psect	text1
  2495  02D9                     __ptext1:	
  2496 ;; *************** function _timer_diff *****************
  2497 ;; Defined at:
  2498 ;;		line 17 in file "time.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;  t               4    0[COMMON] unsigned long 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  4    0[COMMON] unsigned long 
  2505 ;; Registers used:
  2506 ;;		wreg
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2512 ;;      Params:         4       0       0       0       0       0       0       0
  2513 ;;      Locals:         0       0       0       0       0       0       0       0
  2514 ;;      Temps:          4       0       0       0       0       0       0       0
  2515 ;;      Totals:         8       0       0       0       0       0       0       0
  2516 ;;Total ram usage:        8 bytes
  2517 ;; Hardware stack levels used:    1
  2518 ;; Hardware stack levels required when called:    1
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		_main
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _timer_diff
  2528  02D9                     _timer_diff:	
  2529  02D9                     l1167:	
  2530                           ;incstack = 0
  2531                           ; Regs used in _timer_diff: [wreg]
  2532                           
  2533                           
  2534                           ;time.c: 18: return timer_counter - t;
  2535  02D9  0870               	movf	timer_diff@t,w
  2536  02DA  0140               	movlb	0	; select bank0
  2537  02DB  0230               	subwf	_timer_counter,w
  2538  02DC  00F4               	movwf	??_timer_diff
  2539  02DD  0871               	movf	timer_diff@t+1,w
  2540  02DE  3B31               	subwfb	_timer_counter+1,w
  2541  02DF  00F5               	movwf	??_timer_diff+1
  2542  02E0  0872               	movf	timer_diff@t+2,w
  2543  02E1  3B32               	subwfb	_timer_counter+2,w
  2544  02E2  00F6               	movwf	??_timer_diff+2
  2545  02E3  0873               	movf	timer_diff@t+3,w
  2546  02E4  3B33               	subwfb	_timer_counter+3,w
  2547  02E5  00F7               	movwf	??_timer_diff+3
  2548  02E6  0877               	movf	??_timer_diff+3,w
  2549  02E7  00F3               	movwf	?_timer_diff+3
  2550  02E8  0876               	movf	??_timer_diff+2,w
  2551  02E9  00F2               	movwf	?_timer_diff+2
  2552  02EA  0875               	movf	??_timer_diff+1,w
  2553  02EB  00F1               	movwf	?_timer_diff+1
  2554  02EC  0874               	movf	??_timer_diff,w
  2555  02ED  00F0               	movwf	?_timer_diff
  2556  02EE                     l210:	
  2557  02EE  0008               	return
  2558  02EF                     __end_of_timer_diff:	
  2559                           
  2560                           	psect	text2
  2561  030F                     __ptext2:	
  2562 ;; *************** function _get_time *****************
  2563 ;; Defined at:
  2564 ;;		line 13 in file "time.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;		None
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  4    0[COMMON] unsigned long 
  2571 ;; Registers used:
  2572 ;;		wreg
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2578 ;;      Params:         4       0       0       0       0       0       0       0
  2579 ;;      Locals:         0       0       0       0       0       0       0       0
  2580 ;;      Temps:          0       0       0       0       0       0       0       0
  2581 ;;      Totals:         4       0       0       0       0       0       0       0
  2582 ;;Total ram usage:        4 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:    1
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_main
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           
  2593                           ;psect for function _get_time
  2594  030F                     _get_time:	
  2595  030F                     l1163:	
  2596                           ;incstack = 0
  2597                           ; Regs used in _get_time: [wreg]
  2598                           
  2599                           
  2600                           ;time.c: 14: return timer_counter;
  2601  030F  0140               	movlb	0	; select bank0
  2602  0310  0833               	movf	_timer_counter+3,w
  2603  0311  00F3               	movwf	?_get_time+3
  2604  0312  0832               	movf	_timer_counter+2,w
  2605  0313  00F2               	movwf	?_get_time+2
  2606  0314  0831               	movf	_timer_counter+1,w
  2607  0315  00F1               	movwf	?_get_time+1
  2608  0316  0830               	movf	_timer_counter,w
  2609  0317  00F0               	movwf	?_get_time
  2610  0318                     l207:	
  2611  0318  0008               	return
  2612  0319                     __end_of_get_time:	
  2613                           
  2614                           	psect	text3
  2615  0332                     __ptext3:	
  2616 ;; *************** function _PPS_unlock *****************
  2617 ;; Defined at:
  2618 ;;		line 11 in file "PPS.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      void 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2632 ;;      Params:         0       0       0       0       0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0       0       0       0
  2634 ;;      Temps:          0       0       0       0       0       0       0       0
  2635 ;;      Totals:         0       0       0       0       0       0       0       0
  2636 ;;Total ram usage:        0 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    1
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_main
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           
  2647                           ;psect for function _PPS_unlock
  2648  0332                     _PPS_unlock:	
  2649  0332                     l1141:	
  2650                           ;incstack = 0
  2651                           ; Regs used in _PPS_unlock: [wreg+status,2]
  2652                           
  2653                           
  2654                           ;PPS.c: 12: PPSLOCK = 0x55;
  2655  0332  3055               	movlw	85
  2656  0333  017D               	movlb	61	; select bank61
  2657  0334  008F               	movwf	15	;volsfr
  2658                           
  2659                           ;PPS.c: 13: PPSLOCK = 0xAA;
  2660  0335  30AA               	movlw	170
  2661  0336  008F               	movwf	15	;volsfr
  2662  0337                     l1143:	
  2663                           
  2664                           ;PPS.c: 14: PPSLOCK = 0;
  2665  0337  018F               	clrf	15	;volsfr
  2666  0338                     l135:	
  2667  0338  0008               	return
  2668  0339                     __end_of_PPS_unlock:	
  2669                           
  2670                           	psect	text4
  2671  0322                     __ptext4:	
  2672 ;; *************** function _PPS_lock *****************
  2673 ;; Defined at:
  2674 ;;		line 17 in file "PPS.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2688 ;;      Params:         0       0       0       0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    1
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_main
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           
  2703                           ;psect for function _PPS_lock
  2704  0322                     _PPS_lock:	
  2705  0322                     l1145:	
  2706                           ;incstack = 0
  2707                           ; Regs used in _PPS_lock: [wreg]
  2708                           
  2709                           
  2710                           ;PPS.c: 18: PPSLOCK = 0x55;
  2711  0322  3055               	movlw	85
  2712  0323  017D               	movlb	61	; select bank61
  2713  0324  008F               	movwf	15	;volsfr
  2714                           
  2715                           ;PPS.c: 19: PPSLOCK = 0xAA;
  2716  0325  30AA               	movlw	170
  2717  0326  008F               	movwf	15	;volsfr
  2718                           
  2719                           ;PPS.c: 20: PPSLOCK = 1;
  2720  0327  3001               	movlw	1
  2721  0328  008F               	movwf	15	;volsfr
  2722  0329                     l138:	
  2723  0329  0008               	return
  2724  032A                     __end_of_PPS_lock:	
  2725                           
  2726                           	psect	text5
  2727  02BA                     __ptext5:	
  2728 ;; *************** function _PIC_SETUP *****************
  2729 ;; Defined at:
  2730 ;;		line 16 in file "main.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;		None
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;		None
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2, status,0
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2744 ;;      Params:         0       0       0       0       0       0       0       0
  2745 ;;      Locals:         0       0       0       0       0       0       0       0
  2746 ;;      Temps:          0       0       0       0       0       0       0       0
  2747 ;;      Totals:         0       0       0       0       0       0       0       0
  2748 ;;Total ram usage:        0 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:    1
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		_main
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           
  2759                           ;psect for function _PIC_SETUP
  2760  02BA                     _PIC_SETUP:	
  2761  02BA                     l1115:	
  2762                           ;incstack = 0
  2763                           ; Regs used in _PIC_SETUP: [wreg+status,2+status,0]
  2764                           
  2765                           
  2766                           ;main.c: 19: TRISA = 0xFF;
  2767  02BA  30FF               	movlw	255
  2768  02BB  0140               	movlb	0	; select bank0
  2769  02BC  0092               	movwf	18	;volatile
  2770                           
  2771                           ;main.c: 20: TRISC = 0xFF;
  2772  02BD  30FF               	movlw	255
  2773  02BE  0094               	movwf	20	;volatile
  2774  02BF                     l1117:	
  2775                           
  2776                           ;main.c: 21: ANSELA = 0;
  2777  02BF  017E               	movlb	62	; select bank62
  2778  02C0  01B8               	clrf	56	;volatile
  2779  02C1                     l1119:	
  2780                           
  2781                           ;main.c: 22: ANSELC = 0;
  2782  02C1  01CE               	clrf	78	;volatile
  2783                           
  2784                           ;main.c: 23: WPUA = 0b00110000;
  2785  02C2  3030               	movlw	48
  2786  02C3  00B9               	movwf	57	;volatile
  2787                           
  2788                           ;main.c: 24: WPUC = 0b00011000;
  2789  02C4  3018               	movlw	24
  2790  02C5  00CF               	movwf	79	;volatile
  2791  02C6                     l1121:	
  2792                           
  2793                           ;main.c: 27: T1CONbits.CKPS = 0b00;
  2794  02C6  30CF               	movlw	-49
  2795  02C7  0144               	movlb	4	; select bank4
  2796  02C8  058E               	andwf	14,f	;volatile
  2797  02C9                     l1123:	
  2798                           
  2799                           ;main.c: 28: T1CONbits.nSYNC = 0;
  2800  02C9  110E               	bcf	14,2	;volatile
  2801  02CA                     l1125:	
  2802                           
  2803                           ;main.c: 29: T1CONbits.RD16 = 1;
  2804  02CA  148E               	bsf	14,1	;volatile
  2805  02CB                     l1127:	
  2806                           
  2807                           ;main.c: 30: T1GCONbits.GE = 0;
  2808  02CB  138F               	bcf	15,7	;volatile
  2809  02CC                     l1129:	
  2810                           
  2811                           ;main.c: 31: T1CLK = 0b00000100;
  2812  02CC  3004               	movlw	4
  2813  02CD  0091               	movwf	17	;volatile
  2814  02CE                     l1131:	
  2815                           
  2816                           ;main.c: 32: TMR1 = 65228;
  2817  02CE  30FE               	movlw	254
  2818  02CF  008D               	movwf	13	;volatile
  2819  02D0  30CC               	movlw	204
  2820  02D1  008C               	movwf	12	;volatile
  2821  02D2                     l1133:	
  2822                           
  2823                           ;main.c: 33: PIE4bits.TMR1IE = 1;
  2824  02D2  014E               	movlb	14	; select bank14
  2825  02D3  141A               	bsf	26,0	;volatile
  2826  02D4                     l1135:	
  2827                           
  2828                           ;main.c: 34: T1CONbits.ON = 1;
  2829  02D4  0144               	movlb	4	; select bank4
  2830  02D5  140E               	bsf	14,0	;volatile
  2831  02D6                     l1137:	
  2832                           
  2833                           ;main.c: 36: INTCONbits.GIE = 1;
  2834  02D6  178B               	bsf	11,7	;volatile
  2835  02D7                     l1139:	
  2836                           
  2837                           ;main.c: 37: INTCONbits.PEIE = 1;
  2838  02D7  170B               	bsf	11,6	;volatile
  2839  02D8                     l67:	
  2840  02D8  0008               	return
  2841  02D9                     __end_of_PIC_SETUP:	
  2842                           
  2843                           	psect	text6
  2844  0319                     __ptext6:	
  2845 ;; *************** function _LM49450_analog_init *****************
  2846 ;; Defined at:
  2847 ;;		line 79 in file "LM49450.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;		None
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;		None
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  1    wreg      void 
  2854 ;; Registers used:
  2855 ;;		wreg, status,2, status,0, pclath, cstack
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2861 ;;      Params:         0       0       0       0       0       0       0       0
  2862 ;;      Locals:         0       0       0       0       0       0       0       0
  2863 ;;      Temps:          1       0       0       0       0       0       0       0
  2864 ;;      Totals:         1       0       0       0       0       0       0       0
  2865 ;;Total ram usage:        1 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:    4
  2868 ;; This function calls:
  2869 ;;		_LM49450_write
  2870 ;; This function is called by:
  2871 ;;		_main
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           
  2876                           ;psect for function _LM49450_analog_init
  2877  0319                     _LM49450_analog_init:	
  2878  0319                     l1159:	
  2879                           ;incstack = 0
  2880                           ; Regs used in _LM49450_analog_init: [wreg+status,2+status,0+pclath+cstack]
  2881                           
  2882                           
  2883                           ;LM49450.c: 85: LM49450_write(0x00, 0b00101011);
  2884  0319  302B               	movlw	43
  2885  031A  00F3               	movwf	??_LM49450_analog_init
  2886  031B  0873               	movf	??_LM49450_analog_init,w
  2887  031C  00F1               	movwf	LM49450_write@data
  2888  031D  3000               	movlw	0
  2889  031E  3182  22EF  3183   	fcall	_LM49450_write
  2890  0321                     l231:	
  2891  0321  0008               	return
  2892  0322                     __end_of_LM49450_analog_init:	
  2893                           
  2894                           	psect	text7
  2895  0272                     __ptext7:	
  2896 ;; *************** function _LM49450_Wii_init *****************
  2897 ;; Defined at:
  2898 ;;		line 41 in file "LM49450.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0, pclath, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2912 ;;      Params:         0       0       0       0       0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0
  2914 ;;      Temps:          1       0       0       0       0       0       0       0
  2915 ;;      Totals:         1       0       0       0       0       0       0       0
  2916 ;;Total ram usage:        1 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    4
  2919 ;; This function calls:
  2920 ;;		_LM49450_write
  2921 ;; This function is called by:
  2922 ;;		_main
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           
  2927                           ;psect for function _LM49450_Wii_init
  2928  0272                     _LM49450_Wii_init:	
  2929  0272                     l1155:	
  2930                           ;incstack = 0
  2931                           ; Regs used in _LM49450_Wii_init: [wreg+status,2+status,0+pclath+cstack]
  2932                           
  2933                           
  2934                           ;LM49450.c: 46: LM49450_write(0x00, 0b00101001);
  2935  0272  3029               	movlw	41
  2936  0273  00F3               	movwf	??_LM49450_Wii_init
  2937  0274  0873               	movf	??_LM49450_Wii_init,w
  2938  0275  00F1               	movwf	LM49450_write@data
  2939  0276  3000               	movlw	0
  2940  0277  3182  22EF  3182   	fcall	_LM49450_write
  2941                           
  2942                           ;LM49450.c: 49: LM49450_write(0x01, 0b00000001);
  2943  027A  01F1               	clrf	LM49450_write@data
  2944  027B  0AF1               	incf	LM49450_write@data,f
  2945  027C  3001               	movlw	1
  2946  027D  3182  22EF  3182   	fcall	_LM49450_write
  2947                           
  2948                           ;LM49450.c: 50: LM49450_write(0x02, 0x4B);
  2949  0280  304B               	movlw	75
  2950  0281  00F3               	movwf	??_LM49450_Wii_init
  2951  0282  0873               	movf	??_LM49450_Wii_init,w
  2952  0283  00F1               	movwf	LM49450_write@data
  2953  0284  3002               	movlw	2
  2954  0285  3182  22EF  3182   	fcall	_LM49450_write
  2955                           
  2956                           ;LM49450.c: 55: LM49450_write(0x03, 0b01110001);
  2957  0288  3071               	movlw	113
  2958  0289  00F3               	movwf	??_LM49450_Wii_init
  2959  028A  0873               	movf	??_LM49450_Wii_init,w
  2960  028B  00F1               	movwf	LM49450_write@data
  2961  028C  3003               	movlw	3
  2962  028D  3182  22EF  3182   	fcall	_LM49450_write
  2963                           
  2964                           ;LM49450.c: 57: LM49450_write(0x04, 0b00000000);
  2965  0290  01F1               	clrf	LM49450_write@data
  2966  0291  3004               	movlw	4
  2967  0292  3182  22EF  3182   	fcall	_LM49450_write
  2968  0295                     l225:	
  2969  0295  0008               	return
  2970  0296                     __end_of_LM49450_Wii_init:	
  2971                           
  2972                           	psect	text8
  2973  024C                     __ptext8:	
  2974 ;; *************** function _LM49450_PS2_init *****************
  2975 ;; Defined at:
  2976 ;;		line 60 in file "LM49450.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;		None
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      void 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2, status,0, pclath, cstack
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2990 ;;      Params:         0       0       0       0       0       0       0       0
  2991 ;;      Locals:         0       0       0       0       0       0       0       0
  2992 ;;      Temps:          1       0       0       0       0       0       0       0
  2993 ;;      Totals:         1       0       0       0       0       0       0       0
  2994 ;;Total ram usage:        1 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    4
  2997 ;; This function calls:
  2998 ;;		_LM49450_write
  2999 ;; This function is called by:
  3000 ;;		_main
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           
  3005                           ;psect for function _LM49450_PS2_init
  3006  024C                     _LM49450_PS2_init:	
  3007  024C                     l1157:	
  3008                           ;incstack = 0
  3009                           ; Regs used in _LM49450_PS2_init: [wreg+status,2+status,0+pclath+cstack]
  3010                           
  3011                           
  3012                           ;LM49450.c: 65: LM49450_write(0x00, 0b00101001);
  3013  024C  3029               	movlw	41
  3014  024D  00F3               	movwf	??_LM49450_PS2_init
  3015  024E  0873               	movf	??_LM49450_PS2_init,w
  3016  024F  00F1               	movwf	LM49450_write@data
  3017  0250  3000               	movlw	0
  3018  0251  3182  22EF  3182   	fcall	_LM49450_write
  3019                           
  3020                           ;LM49450.c: 68: LM49450_write(0x01, 0b00000010);
  3021  0254  3002               	movlw	2
  3022  0255  00F3               	movwf	??_LM49450_PS2_init
  3023  0256  0873               	movf	??_LM49450_PS2_init,w
  3024  0257  00F1               	movwf	LM49450_write@data
  3025  0258  3001               	movlw	1
  3026  0259  3182  22EF  3182   	fcall	_LM49450_write
  3027                           
  3028                           ;LM49450.c: 70: LM49450_write(0x02, 0x4B);
  3029  025C  304B               	movlw	75
  3030  025D  00F3               	movwf	??_LM49450_PS2_init
  3031  025E  0873               	movf	??_LM49450_PS2_init,w
  3032  025F  00F1               	movwf	LM49450_write@data
  3033  0260  3002               	movlw	2
  3034  0261  3182  22EF  3182   	fcall	_LM49450_write
  3035                           
  3036                           ;LM49450.c: 74: LM49450_write(0x03, 0b01110000);
  3037  0264  3070               	movlw	112
  3038  0265  00F3               	movwf	??_LM49450_PS2_init
  3039  0266  0873               	movf	??_LM49450_PS2_init,w
  3040  0267  00F1               	movwf	LM49450_write@data
  3041  0268  3003               	movlw	3
  3042  0269  3182  22EF  3182   	fcall	_LM49450_write
  3043                           
  3044                           ;LM49450.c: 76: LM49450_write(0x04, 0b00000000);
  3045  026C  01F1               	clrf	LM49450_write@data
  3046  026D  3004               	movlw	4
  3047  026E  3182  22EF  3182   	fcall	_LM49450_write
  3048  0271                     l228:	
  3049  0271  0008               	return
  3050  0272                     __end_of_LM49450_PS2_init:	
  3051                           
  3052                           	psect	text9
  3053  0296                     __ptext9:	
  3054 ;; *************** function _LM49450_DC_init *****************
  3055 ;; Defined at:
  3056 ;;		line 21 in file "LM49450.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;		None
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;		None
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      void 
  3063 ;; Registers used:
  3064 ;;		wreg, status,2, status,0, pclath, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3070 ;;      Params:         0       0       0       0       0       0       0       0
  3071 ;;      Locals:         0       0       0       0       0       0       0       0
  3072 ;;      Temps:          1       0       0       0       0       0       0       0
  3073 ;;      Totals:         1       0       0       0       0       0       0       0
  3074 ;;Total ram usage:        1 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; Hardware stack levels required when called:    4
  3077 ;; This function calls:
  3078 ;;		_LM49450_write
  3079 ;; This function is called by:
  3080 ;;		_main
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           
  3085                           ;psect for function _LM49450_DC_init
  3086  0296                     _LM49450_DC_init:	
  3087  0296                     l1161:	
  3088                           ;incstack = 0
  3089                           ; Regs used in _LM49450_DC_init: [wreg+status,2+status,0+pclath+cstack]
  3090                           
  3091                           
  3092                           ;LM49450.c: 26: LM49450_write(0x00, 0b00101001);
  3093  0296  3029               	movlw	41
  3094  0297  00F3               	movwf	??_LM49450_DC_init
  3095  0298  0873               	movf	??_LM49450_DC_init,w
  3096  0299  00F1               	movwf	LM49450_write@data
  3097  029A  3000               	movlw	0
  3098  029B  3182  22EF  3182   	fcall	_LM49450_write
  3099                           
  3100                           ;LM49450.c: 29: LM49450_write(0x01, 0b00000001);
  3101  029E  01F1               	clrf	LM49450_write@data
  3102  029F  0AF1               	incf	LM49450_write@data,f
  3103  02A0  3001               	movlw	1
  3104  02A1  3182  22EF  3182   	fcall	_LM49450_write
  3105                           
  3106                           ;LM49450.c: 35: LM49450_write(0x04, 0b00000000);
  3107  02A4  01F1               	clrf	LM49450_write@data
  3108  02A5  3004               	movlw	4
  3109  02A6  3182  22EF  3182   	fcall	_LM49450_write
  3110                           
  3111                           ;LM49450.c: 37: LM49450_write(0x02, 0x44);
  3112  02A9  3044               	movlw	68
  3113  02AA  00F3               	movwf	??_LM49450_DC_init
  3114  02AB  0873               	movf	??_LM49450_DC_init,w
  3115  02AC  00F1               	movwf	LM49450_write@data
  3116  02AD  3002               	movlw	2
  3117  02AE  3182  22EF  3182   	fcall	_LM49450_write
  3118                           
  3119                           ;LM49450.c: 38: LM49450_write(0x03, 0b00000010);
  3120  02B1  3002               	movlw	2
  3121  02B2  00F3               	movwf	??_LM49450_DC_init
  3122  02B3  0873               	movf	??_LM49450_DC_init,w
  3123  02B4  00F1               	movwf	LM49450_write@data
  3124  02B5  3003               	movlw	3
  3125  02B6  3182  22EF  3182   	fcall	_LM49450_write
  3126  02B9                     l222:	
  3127  02B9  0008               	return
  3128  02BA                     __end_of_LM49450_DC_init:	
  3129                           
  3130                           	psect	text10
  3131  02EF                     __ptext10:	
  3132 ;; *************** function _LM49450_write *****************
  3133 ;; Defined at:
  3134 ;;		line 13 in file "LM49450.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  reg             1    wreg     unsigned char 
  3137 ;;  data            1    1[COMMON] unsigned char 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  reg             1    2[COMMON] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0, pclath, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3149 ;;      Params:         1       0       0       0       0       0       0       0
  3150 ;;      Locals:         1       0       0       0       0       0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0
  3152 ;;      Totals:         2       0       0       0       0       0       0       0
  3153 ;;Total ram usage:        2 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:    3
  3156 ;; This function calls:
  3157 ;;		_I2C_Master_Start
  3158 ;;		_I2C_Master_Stop
  3159 ;;		_I2C_Master_Write
  3160 ;; This function is called by:
  3161 ;;		_main
  3162 ;;		_LM49450_DC_init
  3163 ;;		_LM49450_Wii_init
  3164 ;;		_LM49450_PS2_init
  3165 ;;		_LM49450_analog_init
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           
  3170                           ;psect for function _LM49450_write
  3171  02EF                     _LM49450_write:	
  3172                           
  3173                           ;incstack = 0
  3174                           ; Regs used in _LM49450_write: [wreg+status,2+status,0+pclath+cstack]
  3175                           ;LM49450_write@reg stored from wreg
  3176  02EF  00F2               	movwf	LM49450_write@reg
  3177  02F0                     l1089:	
  3178                           
  3179                           ;LM49450.c: 14: I2C_Master_Start();
  3180  02F0  3183  2345  3182   	fcall	_I2C_Master_Start
  3181                           
  3182                           ;LM49450.c: 15: I2C_Master_Write(0b1111101 << 1);
  3183  02F3  30FA               	movlw	250
  3184  02F4  3183  232A  3182   	fcall	_I2C_Master_Write
  3185                           
  3186                           ;LM49450.c: 16: I2C_Master_Write(reg);
  3187  02F7  0872               	movf	LM49450_write@reg,w
  3188  02F8  3183  232A  3182   	fcall	_I2C_Master_Write
  3189                           
  3190                           ;LM49450.c: 17: I2C_Master_Write(data);
  3191  02FB  0871               	movf	LM49450_write@data,w
  3192  02FC  3183  232A  3182   	fcall	_I2C_Master_Write
  3193                           
  3194                           ;LM49450.c: 18: I2C_Master_Stop();
  3195  02FF  3183  233F  3182   	fcall	_I2C_Master_Stop
  3196  0302                     l219:	
  3197  0302  0008               	return
  3198  0303                     __end_of_LM49450_write:	
  3199                           
  3200                           	psect	text11
  3201  032A                     __ptext11:	
  3202 ;; *************** function _I2C_Master_Write *****************
  3203 ;; Defined at:
  3204 ;;		line 76 in file "I2C.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  data            1    wreg     unsigned char 
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;  data            1    0[COMMON] unsigned char 
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      void 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2, status,0, pclath, cstack
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3218 ;;      Params:         0       0       0       0       0       0       0       0
  3219 ;;      Locals:         1       0       0       0       0       0       0       0
  3220 ;;      Temps:          0       0       0       0       0       0       0       0
  3221 ;;      Totals:         1       0       0       0       0       0       0       0
  3222 ;;Total ram usage:        1 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    2
  3225 ;; This function calls:
  3226 ;;		_I2C_Master_Wait
  3227 ;; This function is called by:
  3228 ;;		_LM49450_write
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           
  3233                           ;psect for function _I2C_Master_Write
  3234  032A                     _I2C_Master_Write:	
  3235                           
  3236                           ;incstack = 0
  3237                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3238                           ;I2C_Master_Write@data stored from wreg
  3239  032A  00F0               	movwf	I2C_Master_Write@data
  3240  032B                     l1085:	
  3241                           
  3242                           ;I2C.c: 78: I2C_Master_Wait();
  3243  032B  3183  2303  3183   	fcall	_I2C_Master_Wait
  3244  032E                     l1087:	
  3245                           
  3246                           ;I2C.c: 79: SSP1BUF = data;
  3247  032E  0870               	movf	I2C_Master_Write@data,w
  3248  032F  0143               	movlb	3	; select bank3
  3249  0330  008C               	movwf	12	;volatile
  3250  0331                     l191:	
  3251  0331  0008               	return
  3252  0332                     __end_of_I2C_Master_Write:	
  3253                           
  3254                           	psect	text12
  3255  033F                     __ptext12:	
  3256 ;; *************** function _I2C_Master_Stop *****************
  3257 ;; Defined at:
  3258 ;;		line 70 in file "I2C.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;		None
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;		None
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  1    wreg      void 
  3265 ;; Registers used:
  3266 ;;		wreg, status,2, status,0, pclath, cstack
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3272 ;;      Params:         0       0       0       0       0       0       0       0
  3273 ;;      Locals:         0       0       0       0       0       0       0       0
  3274 ;;      Temps:          0       0       0       0       0       0       0       0
  3275 ;;      Totals:         0       0       0       0       0       0       0       0
  3276 ;;Total ram usage:        0 bytes
  3277 ;; Hardware stack levels used:    1
  3278 ;; Hardware stack levels required when called:    2
  3279 ;; This function calls:
  3280 ;;		_I2C_Master_Wait
  3281 ;; This function is called by:
  3282 ;;		_LM49450_write
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           
  3287                           ;psect for function _I2C_Master_Stop
  3288  033F                     _I2C_Master_Stop:	
  3289  033F                     l1081:	
  3290                           ;incstack = 0
  3291                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3292                           
  3293                           
  3294                           ;I2C.c: 72: I2C_Master_Wait();
  3295  033F  3183  2303  3183   	fcall	_I2C_Master_Wait
  3296  0342                     l1083:	
  3297                           
  3298                           ;I2C.c: 73: SSP1CON2bits.PEN = 1;
  3299  0342  0143               	movlb	3	; select bank3
  3300  0343  1511               	bsf	17,2	;volatile
  3301  0344                     l188:	
  3302  0344  0008               	return
  3303  0345                     __end_of_I2C_Master_Stop:	
  3304                           
  3305                           	psect	text13
  3306  0345                     __ptext13:	
  3307 ;; *************** function _I2C_Master_Start *****************
  3308 ;; Defined at:
  3309 ;;		line 58 in file "I2C.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;		None
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0, pclath, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3323 ;;      Params:         0       0       0       0       0       0       0       0
  3324 ;;      Locals:         0       0       0       0       0       0       0       0
  3325 ;;      Temps:          0       0       0       0       0       0       0       0
  3326 ;;      Totals:         0       0       0       0       0       0       0       0
  3327 ;;Total ram usage:        0 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    2
  3330 ;; This function calls:
  3331 ;;		_I2C_Master_Wait
  3332 ;; This function is called by:
  3333 ;;		_LM49450_write
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           
  3338                           ;psect for function _I2C_Master_Start
  3339  0345                     _I2C_Master_Start:	
  3340  0345                     l1077:	
  3341                           ;incstack = 0
  3342                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3343                           
  3344                           
  3345                           ;I2C.c: 60: I2C_Master_Wait();
  3346  0345  3183  2303  3183   	fcall	_I2C_Master_Wait
  3347  0348                     l1079:	
  3348                           
  3349                           ;I2C.c: 61: SSP1CON2bits.SEN = 1;
  3350  0348  0143               	movlb	3	; select bank3
  3351  0349  1411               	bsf	17,0	;volatile
  3352  034A                     l182:	
  3353  034A  0008               	return
  3354  034B                     __end_of_I2C_Master_Start:	
  3355                           
  3356                           	psect	text14
  3357  0303                     __ptext14:	
  3358 ;; *************** function _I2C_Master_Wait *****************
  3359 ;; Defined at:
  3360 ;;		line 53 in file "I2C.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;		None
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;		None
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		wreg, status,2
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3374 ;;      Params:         0       0       0       0       0       0       0       0
  3375 ;;      Locals:         0       0       0       0       0       0       0       0
  3376 ;;      Temps:          0       0       0       0       0       0       0       0
  3377 ;;      Totals:         0       0       0       0       0       0       0       0
  3378 ;;Total ram usage:        0 bytes
  3379 ;; Hardware stack levels used:    1
  3380 ;; Hardware stack levels required when called:    1
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_I2C_Master_Start
  3385 ;;		_I2C_Master_Stop
  3386 ;;		_I2C_Master_Write
  3387 ;;		_I2C_Master_Repeated_Start
  3388 ;;		_I2C_Master_Read
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           
  3393                           ;psect for function _I2C_Master_Wait
  3394  0303                     _I2C_Master_Wait:	
  3395  0303                     l1073:	
  3396                           ;incstack = 0
  3397                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3398                           
  3399  0303                     l176:	
  3400                           ;I2C.c: 55: while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  3401                           
  3402  0303  0143               	movlb	3	; select bank3
  3403  0304  190F               	btfsc	15,2	;volatile
  3404  0305  2B07               	goto	u371
  3405  0306  2B08               	goto	u370
  3406  0307                     u371:	
  3407  0307  2B03               	goto	l176
  3408  0308                     u370:	
  3409  0308                     l1075:	
  3410  0308  0811               	movf	17,w	;volatile
  3411  0309  391F               	andlw	31
  3412  030A  1D03               	btfss	3,2
  3413  030B  2B0D               	goto	u381
  3414  030C  2B0E               	goto	u380
  3415  030D                     u381:	
  3416  030D  2B03               	goto	l176
  3417  030E                     u380:	
  3418  030E                     l179:	
  3419  030E  0008               	return
  3420  030F                     __end_of_I2C_Master_Wait:	
  3421                           
  3422                           	psect	text15
  3423  021E                     __ptext15:	
  3424 ;; *************** function _I2C_Master_Init *****************
  3425 ;; Defined at:
  3426 ;;		line 45 in file "I2C.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;  clk             4    0[BANK0 ] const unsigned long 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;		None
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  1    wreg      void 
  3433 ;; Registers used:
  3434 ;;		wreg, status,2, status,0, pclath, cstack
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3440 ;;      Params:         0       4       0       0       0       0       0       0
  3441 ;;      Locals:         0       0       0       0       0       0       0       0
  3442 ;;      Temps:          0       4       0       0       0       0       0       0
  3443 ;;      Totals:         0       8       0       0       0       0       0       0
  3444 ;;Total ram usage:        8 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; Hardware stack levels required when called:    2
  3447 ;; This function calls:
  3448 ;;		___lldiv
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           
  3455                           ;psect for function _I2C_Master_Init
  3456  021E                     _I2C_Master_Init:	
  3457  021E                     l1147:	
  3458                           ;incstack = 0
  3459                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3460                           
  3461                           
  3462                           ;I2C.c: 47: SSP1CON1 = 0b00101000;
  3463  021E  3028               	movlw	40
  3464  021F  0143               	movlb	3	; select bank3
  3465  0220  0090               	movwf	16	;volatile
  3466  0221                     l1149:	
  3467                           
  3468                           ;I2C.c: 48: SSP1CON2 = 0x00;
  3469  0221  0191               	clrf	17	;volatile
  3470  0222                     l1151:	
  3471                           
  3472                           ;I2C.c: 49: SSP1ADD = (32000000 / (4*clk)) - 1;
  3473  0222  0140               	movlb	0	; select bank0
  3474  0223  0837               	movf	I2C_Master_Init@clk,w
  3475  0224  00BB               	movwf	??_I2C_Master_Init
  3476  0225  0838               	movf	I2C_Master_Init@clk+1,w
  3477  0226  00BC               	movwf	??_I2C_Master_Init+1
  3478  0227  0839               	movf	I2C_Master_Init@clk+2,w
  3479  0228  00BD               	movwf	??_I2C_Master_Init+2
  3480  0229  083A               	movf	I2C_Master_Init@clk+3,w
  3481  022A  00BE               	movwf	??_I2C_Master_Init+3
  3482  022B  3002               	movlw	2
  3483  022C                     u465:	
  3484  022C  35BB               	lslf	??_I2C_Master_Init,f
  3485  022D  0DBC               	rlf	??_I2C_Master_Init+1,f
  3486  022E  0DBD               	rlf	??_I2C_Master_Init+2,f
  3487  022F  0DBE               	rlf	??_I2C_Master_Init+3,f
  3488  0230                     u460:	
  3489  0230  0B89               	decfsz	9,f
  3490  0231  2A2C               	goto	u465
  3491  0232  083E               	movf	??_I2C_Master_Init+3,w
  3492  0233  00F3               	movwf	___lldiv@divisor+3
  3493  0234  083D               	movf	??_I2C_Master_Init+2,w
  3494  0235  00F2               	movwf	___lldiv@divisor+2
  3495  0236  083C               	movf	??_I2C_Master_Init+1,w
  3496  0237  00F1               	movwf	___lldiv@divisor+1
  3497  0238  083B               	movf	??_I2C_Master_Init,w
  3498  0239  00F0               	movwf	___lldiv@divisor
  3499  023A  3001               	movlw	1
  3500  023B  00F7               	movwf	___lldiv@dividend+3
  3501  023C  30E8               	movlw	232
  3502  023D  00F6               	movwf	___lldiv@dividend+2
  3503  023E  3048               	movlw	72
  3504  023F  00F5               	movwf	___lldiv@dividend+1
  3505  0240  3000               	movlw	0
  3506  0241  00F4               	movwf	___lldiv@dividend
  3507  0242  3181  21C4  3182   	fcall	___lldiv
  3508  0245  0870               	movf	?___lldiv,w
  3509  0246  3EFF               	addlw	255
  3510  0247  0143               	movlb	3	; select bank3
  3511  0248  008D               	movwf	13	;volatile
  3512  0249                     l1153:	
  3513                           
  3514                           ;I2C.c: 50: SSP1STAT = 0b10000000;
  3515  0249  3080               	movlw	128
  3516  024A  008F               	movwf	15	;volatile
  3517  024B                     l173:	
  3518  024B  0008               	return
  3519  024C                     __end_of_I2C_Master_Init:	
  3520                           
  3521                           	psect	text16
  3522  01C4                     __ptext16:	
  3523 ;; *************** function ___lldiv *****************
  3524 ;; Defined at:
  3525 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  divisor         4    0[COMMON] unsigned long 
  3528 ;;  dividend        4    4[COMMON] unsigned long 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;  quotient        4    9[COMMON] unsigned long 
  3531 ;;  counter         1   13[COMMON] unsigned char 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  4    0[COMMON] unsigned long 
  3534 ;; Registers used:
  3535 ;;		wreg, status,2, status,0
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3541 ;;      Params:         8       0       0       0       0       0       0       0
  3542 ;;      Locals:         5       0       0       0       0       0       0       0
  3543 ;;      Temps:          1       0       0       0       0       0       0       0
  3544 ;;      Totals:        14       0       0       0       0       0       0       0
  3545 ;;Total ram usage:       14 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:    1
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		_I2C_Master_Init
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           
  3556                           ;psect for function ___lldiv
  3557  01C4                     ___lldiv:	
  3558  01C4                     l1091:	
  3559                           ;incstack = 0
  3560                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3561                           
  3562  01C4  3000               	movlw	0
  3563  01C5  00FC               	movwf	___lldiv@quotient+3
  3564  01C6  3000               	movlw	0
  3565  01C7  00FB               	movwf	___lldiv@quotient+2
  3566  01C8  3000               	movlw	0
  3567  01C9  00FA               	movwf	___lldiv@quotient+1
  3568  01CA  3000               	movlw	0
  3569  01CB  00F9               	movwf	___lldiv@quotient
  3570  01CC  0873               	movf	___lldiv@divisor+3,w
  3571  01CD  0472               	iorwf	___lldiv@divisor+2,w
  3572  01CE  0471               	iorwf	___lldiv@divisor+1,w
  3573  01CF  0470               	iorwf	___lldiv@divisor,w
  3574  01D0  1903               	skipnz
  3575  01D1  29D3               	goto	u391
  3576  01D2  29D4               	goto	u390
  3577  01D3                     u391:	
  3578  01D3  2A15               	goto	l1111
  3579  01D4                     u390:	
  3580  01D4                     l1093:	
  3581  01D4  01FD               	clrf	___lldiv@counter
  3582  01D5  0AFD               	incf	___lldiv@counter,f
  3583  01D6  29E2               	goto	l1097
  3584  01D7                     l1095:	
  3585  01D7  3001               	movlw	1
  3586  01D8                     u405:	
  3587  01D8  35F0               	lslf	___lldiv@divisor,f
  3588  01D9  0DF1               	rlf	___lldiv@divisor+1,f
  3589  01DA  0DF2               	rlf	___lldiv@divisor+2,f
  3590  01DB  0DF3               	rlf	___lldiv@divisor+3,f
  3591  01DC  0B89               	decfsz	9,f
  3592  01DD  29D8               	goto	u405
  3593  01DE  3001               	movlw	1
  3594  01DF  00F8               	movwf	??___lldiv
  3595  01E0  0878               	movf	??___lldiv,w
  3596  01E1  07FD               	addwf	___lldiv@counter,f
  3597  01E2                     l1097:	
  3598  01E2  1FF3               	btfss	___lldiv@divisor+3,7
  3599  01E3  29E5               	goto	u411
  3600  01E4  29E6               	goto	u410
  3601  01E5                     u411:	
  3602  01E5  29D7               	goto	l1095
  3603  01E6                     u410:	
  3604  01E6                     l1099:	
  3605  01E6  3001               	movlw	1
  3606  01E7                     u425:	
  3607  01E7  35F9               	lslf	___lldiv@quotient,f
  3608  01E8  0DFA               	rlf	___lldiv@quotient+1,f
  3609  01E9  0DFB               	rlf	___lldiv@quotient+2,f
  3610  01EA  0DFC               	rlf	___lldiv@quotient+3,f
  3611  01EB  0B89               	decfsz	9,f
  3612  01EC  29E7               	goto	u425
  3613  01ED                     l1101:	
  3614  01ED  0873               	movf	___lldiv@divisor+3,w
  3615  01EE  0277               	subwf	___lldiv@dividend+3,w
  3616  01EF  1D03               	skipz
  3617  01F0  29FB               	goto	u435
  3618  01F1  0872               	movf	___lldiv@divisor+2,w
  3619  01F2  0276               	subwf	___lldiv@dividend+2,w
  3620  01F3  1D03               	skipz
  3621  01F4  29FB               	goto	u435
  3622  01F5  0871               	movf	___lldiv@divisor+1,w
  3623  01F6  0275               	subwf	___lldiv@dividend+1,w
  3624  01F7  1D03               	skipz
  3625  01F8  29FB               	goto	u435
  3626  01F9  0870               	movf	___lldiv@divisor,w
  3627  01FA  0274               	subwf	___lldiv@dividend,w
  3628  01FB                     u435:	
  3629  01FB  1C03               	skipc
  3630  01FC  29FE               	goto	u431
  3631  01FD  29FF               	goto	u430
  3632  01FE                     u431:	
  3633  01FE  2A08               	goto	l1107
  3634  01FF                     u430:	
  3635  01FF                     l1103:	
  3636  01FF  0870               	movf	___lldiv@divisor,w
  3637  0200  02F4               	subwf	___lldiv@dividend,f
  3638  0201  0871               	movf	___lldiv@divisor+1,w
  3639  0202  3BF5               	subwfb	___lldiv@dividend+1,f
  3640  0203  0872               	movf	___lldiv@divisor+2,w
  3641  0204  3BF6               	subwfb	___lldiv@dividend+2,f
  3642  0205  0873               	movf	___lldiv@divisor+3,w
  3643  0206  3BF7               	subwfb	___lldiv@dividend+3,f
  3644  0207                     l1105:	
  3645  0207  1479               	bsf	___lldiv@quotient,0
  3646  0208                     l1107:	
  3647  0208  3001               	movlw	1
  3648  0209                     u445:	
  3649  0209  36F3               	lsrf	___lldiv@divisor+3,f
  3650  020A  0CF2               	rrf	___lldiv@divisor+2,f
  3651  020B  0CF1               	rrf	___lldiv@divisor+1,f
  3652  020C  0CF0               	rrf	___lldiv@divisor,f
  3653  020D  0B89               	decfsz	9,f
  3654  020E  2A09               	goto	u445
  3655  020F                     l1109:	
  3656  020F  3001               	movlw	1
  3657  0210  02FD               	subwf	___lldiv@counter,f
  3658  0211  1D03               	btfss	3,2
  3659  0212  2A14               	goto	u451
  3660  0213  2A15               	goto	u450
  3661  0214                     u451:	
  3662  0214  29E6               	goto	l1099
  3663  0215                     u450:	
  3664  0215                     l1111:	
  3665  0215  087C               	movf	___lldiv@quotient+3,w
  3666  0216  00F3               	movwf	?___lldiv+3
  3667  0217  087B               	movf	___lldiv@quotient+2,w
  3668  0218  00F2               	movwf	?___lldiv+2
  3669  0219  087A               	movf	___lldiv@quotient+1,w
  3670  021A  00F1               	movwf	?___lldiv+1
  3671  021B  0879               	movf	___lldiv@quotient,w
  3672  021C  00F0               	movwf	?___lldiv
  3673  021D                     l335:	
  3674  021D  0008               	return
  3675  021E                     __end_of___lldiv:	
  3676                           
  3677                           	psect	intentry
  3678  0004                     __pintentry:	
  3679 ;; *************** function _ISR *****************
  3680 ;; Defined at:
  3681 ;;		line 40 in file "main.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;		None
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;		None
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  1    wreg      void 
  3688 ;; Registers used:
  3689 ;;		wreg
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3695 ;;      Params:         0       0       0       0       0       0       0       0
  3696 ;;      Locals:         0       0       0       0       0       0       0       0
  3697 ;;      Temps:          0       0       0       0       0       0       0       0
  3698 ;;      Totals:         0       0       0       0       0       0       0       0
  3699 ;;Total ram usage:        0 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		Interrupt level 1
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708  0004                     _ISR:	
  3709                           
  3710                           ;incstack = 0
  3711  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3712                           
  3713                           ; Regs used in _ISR: [wreg]
  3714  0005  3180               	pagesel	$
  3715  0006                     i1l1171:	
  3716                           
  3717                           ;main.c: 42: if(TMR1IF) {
  3718  0006  014E               	movlb	14	; select bank14
  3719  0007  1C10               	btfss	16,0	;volatile
  3720  0008  280A               	goto	u47_21
  3721  0009  280B               	goto	u47_20
  3722  000A                     u47_21:	
  3723  000A  281A               	goto	i1l73
  3724  000B                     u47_20:	
  3725  000B                     i1l1173:	
  3726                           
  3727                           ;main.c: 43: TMR1IF = 0;
  3728  000B  1010               	bcf	16,0	;volatile
  3729                           
  3730                           ;main.c: 44: TMR1 = 65228;
  3731  000C  30FE               	movlw	254
  3732  000D  0144               	movlb	4	; select bank4
  3733  000E  008D               	movwf	13	;volatile
  3734  000F  30CC               	movlw	204
  3735  0010  008C               	movwf	12	;volatile
  3736  0011                     i1l1175:	
  3737                           
  3738                           ;main.c: 45: timer_counter++;
  3739  0011  3001               	movlw	1
  3740  0012  0140               	movlb	0	; select bank0
  3741  0013  07B0               	addwf	_timer_counter,f
  3742  0014  3000               	movlw	0
  3743  0015  3DB1               	addwfc	_timer_counter+1,f
  3744  0016  3000               	movlw	0
  3745  0017  3DB2               	addwfc	_timer_counter+2,f
  3746  0018  3000               	movlw	0
  3747  0019  3DB3               	addwfc	_timer_counter+3,f
  3748  001A                     i1l73:	
  3749  001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3750  001B  0009               	retfie
  3751  001C                     __end_of_ISR:	
  3752  007E                     btemp	set	126	;btemp
  3753  007E                     int$flags	set	126
  3754  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         23
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9      33
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LM49450_analog_init->_LM49450_write
    _LM49450_Wii_init->_LM49450_write
    _LM49450_PS2_init->_LM49450_write
    _LM49450_DC_init->_LM49450_write
    _LM49450_write->_I2C_Master_Write
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    8668
                                              8 BANK0      1     1      0
                    _I2C_Master_Init
                    _LM49450_DC_init
                   _LM49450_PS2_init
                   _LM49450_Wii_init
                _LM49450_analog_init
                      _LM49450_write
                          _PIC_SETUP
                           _PPS_lock
                         _PPS_unlock
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _timer_diff                                           8     4      4     326
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _get_time                                             4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _PPS_unlock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PPS_lock                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIC_SETUP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LM49450_analog_init                                  1     1      0    1586
                                              3 COMMON     1     1      0
                      _LM49450_write
 ---------------------------------------------------------------------------------
 (1) _LM49450_Wii_init                                     1     1      0    1586
                                              3 COMMON     1     1      0
                      _LM49450_write
 ---------------------------------------------------------------------------------
 (1) _LM49450_PS2_init                                     1     1      0    1586
                                              3 COMMON     1     1      0
                      _LM49450_write
 ---------------------------------------------------------------------------------
 (1) _LM49450_DC_init                                      1     1      0    1586
                                              3 COMMON     1     1      0
                      _LM49450_write
 ---------------------------------------------------------------------------------
 (1) _LM49450_write                                        2     1      1    1586
                                              1 COMMON     2     1      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _LM49450_DC_init
     _LM49450_write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _LM49450_PS2_init
     _LM49450_write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _LM49450_Wii_init
     _LM49450_write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _LM49450_analog_init
     _LM49450_write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _LM49450_write
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _PIC_SETUP
   _PPS_lock
   _PPS_unlock
   _get_time
   _timer_diff

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      9      21       6       41.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      2F      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 09 10:24:29 2019

       __end_of_LM49450_write 0303         ??_LM49450_analog_init 0073                   __CFG_CP$OFF 0000  
                          l67 02D8                            l94 005C                            l95 007F  
                          l96 0068                            l98 0074                    _PPS_unlock 0332  
                         l210 02EE                           l222 02B9                           l231 0321  
                         l135 0338                           l207 0318                           l225 0295  
                         l138 0329                           l219 0302                           l228 0271  
                         l173 024B                           l182 034A                           l335 021D  
                         l191 0331                           l176 0303                           l179 030E  
                         l188 0344                           _RA4 0064                           _RC0 0070  
                         _RA5 0065                           _RC1 0071                           _RC3 0073  
                         _RC4 0074                           u410 01E6                           u411 01E5  
                         u500 0060                           u405 01D8                           u501 005F  
                         u430 01FF                           u510 0064                           u431 01FE  
                         u511 0063                           u600 013A                           u520 006C  
                         u425 01E7                           u601 0139                           u521 006B  
                         u450 0215                           u370 0308                           u610 0169  
                         u530 0070                           u451 0214                           u435 01FB  
                         u371 0307                           u611 0168                           u531 006F  
                         u460 0230                           u380 030E                           u620 018A  
                         u540 0078                           _ISR 0004                           u445 0209  
                         u381 030D                           u621 0189                           u541 0077  
                         u390 01D4                           u630 0190                           u550 007C  
                         u391 01D3                           u631 018F                           u551 007B  
                         u640 0198                           u560 0096                           u480 0054  
                         u465 022C                           u641 0197                           u561 0095  
                         u481 0053                           u650 019D                           u570 00C0  
                         u490 0058                           u651 019C                           u571 00BF  
                         u491 0057                           u660 01A3                           u580 00F1  
                         u661 01A2                           u581 00F0                           u670 01AA  
                         u590 0110                           u671 01A9                           u591 010F  
        _vol_minus_time_start 0024                  __CFG_BORV$LO 0000                           wreg 0009  
               __CFG_BBEN$OFF 0000                  __CFG_LVP$OFF 0000                          ?_ISR 0070  
                __CFG_ZCD$OFF 0000                          l1101 01ED                          l1103 01FF  
                        l1111 0215                          l1105 0207                          l1121 02C6  
                        l1201 0078                          l1107 0208                          l1131 02CE  
                        l1123 02C9                          l1115 02BA                          l1211 00A3  
                        l1203 007C                          l1109 020F                          l1133 02D2  
                        l1125 02CA                          l1117 02BF                          l1141 0332  
                        l1221 00D4                          l1213 00A6                          l1205 0091  
                        l1151 0222                          l1135 02D4                          l1127 02CB  
                        l1119 02C1                          l1143 0337                          l1223 00D7  
                        l1215 00C0                          l1231 00FE                          l1153 0249  
                        l1073 0303                          l1081 033F                          l1161 0296  
                        l1137 02D6                          l1129 02CC                          l1145 0322  
                        l1241 0111                          l1225 00F1                          l1217 00CC  
                        l1209 0097                          l1233 0100                          l1091 01C4  
                        l1147 021E                          l1075 0308                          l1083 0342  
                        l1155 0272                          l1139 02D7                          l1163 030F  
                        l1251 014A                          l1243 011D                          l1219 00D0  
                        l1093 01D4                          l1149 0221                          l1077 0345  
                        l1085 032B                          l1157 024C                          l1253 014C  
                        l1245 0120                          l1237 010B                          l1181 0037  
                        l1095 01D7                          l1079 0348                          l1087 032E  
                        l1159 0319                          l1167 02D9                          l1271 018A  
                        l1255 014F                          l1247 013A                          l1263 0176  
                        l1191 0058                          l1183 003A                          l1097 01E2  
                        l1089 02F0                          l1281 019D                          l1273 0190  
                        l1257 0169                          l1249 0146                          l1265 0178  
                        l1193 0060                          l1185 003D                          l1177 002E  
                        l1099 01E6                          l1291 01B6                          l1283 01A3  
                        l1275 0191                          l1195 0064                          l1187 004F  
                        l1179 0034                          l1293 01BF                          l1285 01A4  
                        l1277 0193                          l1269 0183                          l1197 006C  
                        l1189 0054                          l1287 01AA                          l1279 0198  
                        l1199 0070                          l1289 01AE                          i1l73 001A  
                        _TMR1 020C                          _WPUA 1F39                          _WPUC 1F4F  
               __CFG_FCMEN$ON 0000                          _main 002E                          fsr0h 0005  
                        indf0 0000                          fsr0l 0004                          btemp 007E  
               __CFG_BOREN$ON 0000                          start 001C                 __CFG_CSWEN$ON 0000  
            ?_LM49450_DC_init 0070                         ??_ISR 0070            __size_of_PIC_SETUP 001F  
            ?_I2C_Master_Init 0037              ?_I2C_Master_Wait 0070              ?_I2C_Master_Stop 0070  
                       ?_main 0070                 __CFG_WDTE$OFF 0000               __end_of___lldiv 021E  
                       _T1CLK 0211                         u47_20 000B                         u47_21 000A  
                       _TRISA 0012                         _TRISC 0014                 __CFG_WRTB$OFF 0000  
               __CFG_WRTC$OFF 0000              __end_of_PPS_lock 032A                         status 0003  
                       wtemp0 007E                __CFG_MCLRE$OFF 0000               __initialization 001E  
                __end_of_main 01C4                __CFG_SAFEN$OFF 0000             ?_LM49450_PS2_init 0070  
                 ?_PPS_unlock 0070                        ??_main 003F            ??_LM49450_PS2_init 0073  
           ?_I2C_Master_Start 0070             ?_I2C_Master_Write 0070            ??_I2C_Master_Start 0070  
          ??_I2C_Master_Write 0070                        _ANSELA 1F38                        _ANSELC 1F4E  
                      _RC0PPS 1F20                        _RC1PPS 1F21                        i1l1171 0006  
                      i1l1173 000B                        i1l1175 0011             __end_of_PIC_SETUP 02D9  
                      _TMR1IF 3880                __CFG_PWRTE$OFF 0000              __end_of_get_time 0319  
              __CFG_STVREN$ON 0000                     ??___lldiv 0078             ?_LM49450_Wii_init 0070  
                      _volume 0040            ??_LM49450_Wii_init 0073       __end_of__initialization 002A  
         __size_of_PPS_unlock 0007                __pcstackCOMMON 0070                  __pidataBANK0 034B  
                   ?_PPS_lock 0070                    __pbssBANK0 0020   __end_of_LM49450_analog_init 0322  
                  __pmaintext 002E                    __pintentry 0004           __CFG_RSTOSC$HFINT32 0000  
                  ??_PPS_lock 0070                       _SSP1ADD 018D                       _PPSLOCK 1E8F  
                     _SSP1BUF 018C                _vol_plus_state 0035        __size_of_LM49450_write 0014  
                   ?_get_time 0070                       ___lldiv 01C4                  ??_PPS_unlock 0070  
                     __ptext1 02D9                       __ptext2 030F                       __ptext3 0332  
                     __ptext4 0322                       __ptext5 02BA                       __ptext6 0319  
                     __ptext7 0272                       __ptext8 024C                       __ptext9 0296  
    __size_of_LM49450_DC_init 0024               __CFG_WRTAPP$OFF 0000                  __size_of_ISR 0018  
                   _T1CONbits 020E               __CFG_WRTSAF$OFF 0000      __size_of_I2C_Master_Init 002E  
    __size_of_I2C_Master_Wait 000C      __size_of_I2C_Master_Stop 0006                       clrloop0 033A  
                  ??_get_time 0074          end_of_initialization 002A     __size_of_LM49450_PS2_init 0026  
   __size_of_I2C_Master_Start 0006            __end_of_PPS_unlock 0339                     _PIC_SETUP 02BA  
   __size_of_I2C_Master_Write 0008               ___lldiv@divisor 0070               ___lldiv@counter 007D  
               _LM49450_write 02EF                    _set_volume 0036         __CFG_WDTCPS$WDTCPS_13 0000  
                  _timer_diff 02D9             LM49450_write@data 0071          __CFG_WDTCCS$LFINTOSC 0000  
                   _TRISCbits 0014                   timer_diff@t 0070              __CFG_FEXTOSC$OFF 0000  
         _vol_minus_time_hold 0020     __size_of_LM49450_Wii_init 0024                    ?_PIC_SETUP 0070  
              ?_LM49450_write 0071             __size_of_PPS_lock 0008           start_initialization 001E  
                 __end_of_ISR 001C             ??_LM49450_DC_init 0073             ??_I2C_Master_Init 003B  
           ??_I2C_Master_Wait 0070             ??_I2C_Master_Stop 0070              __CFG_LPBOREN$OFF 0000  
                 __pdataBANK0 0040                   ?_timer_diff 0070                     ___latbits 0001  
               __pcstackBANK0 0037              _LM49450_PS2_init 024C             __size_of_get_time 000A  
             _vol_minus_state 0034              _I2C_Master_Start 0345                   ??_PIC_SETUP 0070  
            _I2C_Master_Write 032A               ??_LM49450_write 0072                      ?___lldiv 0070  
            __CFG_PPS1WAY$OFF 0000  __size_of_LM49450_analog_init 0009          I2C_Master_Write@data 0070  
            _LM49450_Wii_init 0272           __size_of_timer_diff 0016                     clear_ram0 0339  
                    _PIE4bits 071A             __CFG_BBSIZE$BB512 0000                      _SSP1CON1 0190  
                    _SSP1CON2 0191                      _SSP1STAT 018F              LM49450_write@reg 0072  
                    _PPS_lock 0322              __size_of___lldiv 005A               _LM49450_DC_init 0296  
             _I2C_Master_Init 021E               _I2C_Master_Wait 0303               _I2C_Master_Stop 033F  
                    __ptext10 02EF                      __ptext11 032A                      __ptext12 033F  
                    __ptext13 0345                    _T1GCONbits 020F                      __ptext14 0303  
                    __ptext15 021E                      __ptext16 01C4                  _SSP1CON2bits 0191  
                    _get_time 030F                 __size_of_main 0196          __CFG_WDTCWS$WDTCWS_7 0000  
                    int$flags 007E      __end_of_LM49450_PS2_init 0272                 _timer_counter 0030  
                ??_timer_diff 0074            I2C_Master_Init@clk 0037      __end_of_I2C_Master_Start 034B  
    __end_of_I2C_Master_Write 0332                    _INTCONbits 000B                      intlevel1 0000  
         _LM49450_analog_init 0319              ___lldiv@dividend 0074             __CFG_CLKOUTEN$OFF 0000  
          __end_of_timer_diff 02EF       __end_of_LM49450_DC_init 02BA           _vol_plus_time_start 002C  
     __end_of_I2C_Master_Init 024C       __end_of_I2C_Master_Wait 030F          ?_LM49450_analog_init 0070  
     __end_of_I2C_Master_Stop 0345      __end_of_LM49450_Wii_init 0296                    _SSP1DATPPS 1EC6  
                  _SSP1CLKPPS 1EC5              ___lldiv@quotient 0079            _vol_plus_time_hold 0028  
