

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov 10 09:30:56 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F15324
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.10
    32                           ; Generated 31/07/2019 GMT
    33                           ; 
    34                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F15324 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000E                     	;# 
    79  0012                     	;# 
    80  0014                     	;# 
    81  0018                     	;# 
    82  001A                     	;# 
    83  009B                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  009F                     	;# 
    89  0119                     	;# 
    90  0119                     	;# 
    91  0119                     	;# 
    92  011A                     	;# 
    93  011A                     	;# 
    94  011A                     	;# 
    95  011B                     	;# 
    96  011B                     	;# 
    97  011B                     	;# 
    98  011B                     	;# 
    99  011B                     	;# 
   100  011C                     	;# 
   101  011C                     	;# 
   102  011C                     	;# 
   103  011D                     	;# 
   104  011D                     	;# 
   105  011D                     	;# 
   106  011E                     	;# 
   107  011E                     	;# 
   108  011E                     	;# 
   109  011F                     	;# 
   110  011F                     	;# 
   111  011F                     	;# 
   112  011F                     	;# 
   113  011F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  018E                     	;# 
   117  018F                     	;# 
   118  0190                     	;# 
   119  0191                     	;# 
   120  0192                     	;# 
   121  020C                     	;# 
   122  020C                     	;# 
   123  020D                     	;# 
   124  020E                     	;# 
   125  020F                     	;# 
   126  020F                     	;# 
   127  0210                     	;# 
   128  0210                     	;# 
   129  0211                     	;# 
   130  0211                     	;# 
   131  028C                     	;# 
   132  028C                     	;# 
   133  028D                     	;# 
   134  028D                     	;# 
   135  028E                     	;# 
   136  028F                     	;# 
   137  0290                     	;# 
   138  0291                     	;# 
   139  030C                     	;# 
   140  030C                     	;# 
   141  030D                     	;# 
   142  030E                     	;# 
   143  030F                     	;# 
   144  0310                     	;# 
   145  0310                     	;# 
   146  0311                     	;# 
   147  0312                     	;# 
   148  0313                     	;# 
   149  0314                     	;# 
   150  0314                     	;# 
   151  0315                     	;# 
   152  0316                     	;# 
   153  0318                     	;# 
   154  0318                     	;# 
   155  0319                     	;# 
   156  031A                     	;# 
   157  031C                     	;# 
   158  031C                     	;# 
   159  031D                     	;# 
   160  031E                     	;# 
   161  038C                     	;# 
   162  038C                     	;# 
   163  038D                     	;# 
   164  038E                     	;# 
   165  058C                     	;# 
   166  058C                     	;# 
   167  058D                     	;# 
   168  058E                     	;# 
   169  058F                     	;# 
   170  058F                     	;# 
   171  0590                     	;# 
   172  0591                     	;# 
   173  0592                     	;# 
   174  0593                     	;# 
   175  059C                     	;# 
   176  059C                     	;# 
   177  059D                     	;# 
   178  059D                     	;# 
   179  059E                     	;# 
   180  059F                     	;# 
   181  060C                     	;# 
   182  060D                     	;# 
   183  060E                     	;# 
   184  060F                     	;# 
   185  0610                     	;# 
   186  0611                     	;# 
   187  0612                     	;# 
   188  0613                     	;# 
   189  0614                     	;# 
   190  070C                     	;# 
   191  070D                     	;# 
   192  070E                     	;# 
   193  070F                     	;# 
   194  0710                     	;# 
   195  0711                     	;# 
   196  0712                     	;# 
   197  0713                     	;# 
   198  0716                     	;# 
   199  0717                     	;# 
   200  0718                     	;# 
   201  0719                     	;# 
   202  071A                     	;# 
   203  071B                     	;# 
   204  071C                     	;# 
   205  071D                     	;# 
   206  0796                     	;# 
   207  0797                     	;# 
   208  0798                     	;# 
   209  0799                     	;# 
   210  079A                     	;# 
   211  079B                     	;# 
   212  080C                     	;# 
   213  080D                     	;# 
   214  080E                     	;# 
   215  080F                     	;# 
   216  0810                     	;# 
   217  0811                     	;# 
   218  0812                     	;# 
   219  0813                     	;# 
   220  0814                     	;# 
   221  081A                     	;# 
   222  081A                     	;# 
   223  081B                     	;# 
   224  081C                     	;# 
   225  081C                     	;# 
   226  081D                     	;# 
   227  081E                     	;# 
   228  081F                     	;# 
   229  088C                     	;# 
   230  088D                     	;# 
   231  088E                     	;# 
   232  088F                     	;# 
   233  0890                     	;# 
   234  0891                     	;# 
   235  0892                     	;# 
   236  0893                     	;# 
   237  0895                     	;# 
   238  0896                     	;# 
   239  090C                     	;# 
   240  090E                     	;# 
   241  090F                     	;# 
   242  091F                     	;# 
   243  098F                     	;# 
   244  098F                     	;# 
   245  0990                     	;# 
   246  0991                     	;# 
   247  0992                     	;# 
   248  0993                     	;# 
   249  0994                     	;# 
   250  0995                     	;# 
   251  0996                     	;# 
   252  0997                     	;# 
   253  0A19                     	;# 
   254  0A19                     	;# 
   255  0A1A                     	;# 
   256  0A1A                     	;# 
   257  0A1B                     	;# 
   258  0A1B                     	;# 
   259  0A1B                     	;# 
   260  0A1C                     	;# 
   261  0A1C                     	;# 
   262  0A1D                     	;# 
   263  0A1D                     	;# 
   264  0A1E                     	;# 
   265  0A1E                     	;# 
   266  0A1F                     	;# 
   267  0A1F                     	;# 
   268  0A1F                     	;# 
   269  1E0F                     	;# 
   270  1E10                     	;# 
   271  1E11                     	;# 
   272  1E12                     	;# 
   273  1E13                     	;# 
   274  1E14                     	;# 
   275  1E15                     	;# 
   276  1E16                     	;# 
   277  1E17                     	;# 
   278  1E18                     	;# 
   279  1E19                     	;# 
   280  1E1A                     	;# 
   281  1E1B                     	;# 
   282  1E1C                     	;# 
   283  1E1D                     	;# 
   284  1E1E                     	;# 
   285  1E1F                     	;# 
   286  1E20                     	;# 
   287  1E21                     	;# 
   288  1E22                     	;# 
   289  1E23                     	;# 
   290  1E24                     	;# 
   291  1E25                     	;# 
   292  1E26                     	;# 
   293  1E27                     	;# 
   294  1E28                     	;# 
   295  1E29                     	;# 
   296  1E2A                     	;# 
   297  1E2B                     	;# 
   298  1E2C                     	;# 
   299  1E2D                     	;# 
   300  1E2E                     	;# 
   301  1E2F                     	;# 
   302  1E30                     	;# 
   303  1E31                     	;# 
   304  1E32                     	;# 
   305  1E33                     	;# 
   306  1E34                     	;# 
   307  1E35                     	;# 
   308  1E36                     	;# 
   309  1E37                     	;# 
   310  1E8F                     	;# 
   311  1E90                     	;# 
   312  1E91                     	;# 
   313  1E92                     	;# 
   314  1E93                     	;# 
   315  1E9C                     	;# 
   316  1EA1                     	;# 
   317  1EA2                     	;# 
   318  1EB1                     	;# 
   319  1EBB                     	;# 
   320  1EBC                     	;# 
   321  1EBD                     	;# 
   322  1EBE                     	;# 
   323  1EC3                     	;# 
   324  1EC5                     	;# 
   325  1EC6                     	;# 
   326  1EC7                     	;# 
   327  1ECB                     	;# 
   328  1ECC                     	;# 
   329  1ECD                     	;# 
   330  1ECE                     	;# 
   331  1F10                     	;# 
   332  1F11                     	;# 
   333  1F12                     	;# 
   334  1F13                     	;# 
   335  1F14                     	;# 
   336  1F15                     	;# 
   337  1F20                     	;# 
   338  1F21                     	;# 
   339  1F22                     	;# 
   340  1F23                     	;# 
   341  1F24                     	;# 
   342  1F25                     	;# 
   343  1F38                     	;# 
   344  1F39                     	;# 
   345  1F3A                     	;# 
   346  1F3B                     	;# 
   347  1F3C                     	;# 
   348  1F3D                     	;# 
   349  1F3E                     	;# 
   350  1F3F                     	;# 
   351  1F4E                     	;# 
   352  1F4F                     	;# 
   353  1F50                     	;# 
   354  1F51                     	;# 
   355  1F52                     	;# 
   356  1F53                     	;# 
   357  1F54                     	;# 
   358  1F55                     	;# 
   359  1FE4                     	;# 
   360  1FE5                     	;# 
   361  1FE6                     	;# 
   362  1FE7                     	;# 
   363  1FE8                     	;# 
   364  1FE8                     	;# 
   365  1FE9                     	;# 
   366  1FEA                     	;# 
   367  1FEA                     	;# 
   368  1FEB                     	;# 
   369  1FED                     	;# 
   370  1FEE                     	;# 
   371  1FEF                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000E                     	;# 
   386  0012                     	;# 
   387  0014                     	;# 
   388  0018                     	;# 
   389  001A                     	;# 
   390  009B                     	;# 
   391  009B                     	;# 
   392  009C                     	;# 
   393  009D                     	;# 
   394  009E                     	;# 
   395  009F                     	;# 
   396  0119                     	;# 
   397  0119                     	;# 
   398  0119                     	;# 
   399  011A                     	;# 
   400  011A                     	;# 
   401  011A                     	;# 
   402  011B                     	;# 
   403  011B                     	;# 
   404  011B                     	;# 
   405  011B                     	;# 
   406  011B                     	;# 
   407  011C                     	;# 
   408  011C                     	;# 
   409  011C                     	;# 
   410  011D                     	;# 
   411  011D                     	;# 
   412  011D                     	;# 
   413  011E                     	;# 
   414  011E                     	;# 
   415  011E                     	;# 
   416  011F                     	;# 
   417  011F                     	;# 
   418  011F                     	;# 
   419  011F                     	;# 
   420  011F                     	;# 
   421  018C                     	;# 
   422  018D                     	;# 
   423  018E                     	;# 
   424  018F                     	;# 
   425  0190                     	;# 
   426  0191                     	;# 
   427  0192                     	;# 
   428  020C                     	;# 
   429  020C                     	;# 
   430  020D                     	;# 
   431  020E                     	;# 
   432  020F                     	;# 
   433  020F                     	;# 
   434  0210                     	;# 
   435  0210                     	;# 
   436  0211                     	;# 
   437  0211                     	;# 
   438  028C                     	;# 
   439  028C                     	;# 
   440  028D                     	;# 
   441  028D                     	;# 
   442  028E                     	;# 
   443  028F                     	;# 
   444  0290                     	;# 
   445  0291                     	;# 
   446  030C                     	;# 
   447  030C                     	;# 
   448  030D                     	;# 
   449  030E                     	;# 
   450  030F                     	;# 
   451  0310                     	;# 
   452  0310                     	;# 
   453  0311                     	;# 
   454  0312                     	;# 
   455  0313                     	;# 
   456  0314                     	;# 
   457  0314                     	;# 
   458  0315                     	;# 
   459  0316                     	;# 
   460  0318                     	;# 
   461  0318                     	;# 
   462  0319                     	;# 
   463  031A                     	;# 
   464  031C                     	;# 
   465  031C                     	;# 
   466  031D                     	;# 
   467  031E                     	;# 
   468  038C                     	;# 
   469  038C                     	;# 
   470  038D                     	;# 
   471  038E                     	;# 
   472  058C                     	;# 
   473  058C                     	;# 
   474  058D                     	;# 
   475  058E                     	;# 
   476  058F                     	;# 
   477  058F                     	;# 
   478  0590                     	;# 
   479  0591                     	;# 
   480  0592                     	;# 
   481  0593                     	;# 
   482  059C                     	;# 
   483  059C                     	;# 
   484  059D                     	;# 
   485  059D                     	;# 
   486  059E                     	;# 
   487  059F                     	;# 
   488  060C                     	;# 
   489  060D                     	;# 
   490  060E                     	;# 
   491  060F                     	;# 
   492  0610                     	;# 
   493  0611                     	;# 
   494  0612                     	;# 
   495  0613                     	;# 
   496  0614                     	;# 
   497  070C                     	;# 
   498  070D                     	;# 
   499  070E                     	;# 
   500  070F                     	;# 
   501  0710                     	;# 
   502  0711                     	;# 
   503  0712                     	;# 
   504  0713                     	;# 
   505  0716                     	;# 
   506  0717                     	;# 
   507  0718                     	;# 
   508  0719                     	;# 
   509  071A                     	;# 
   510  071B                     	;# 
   511  071C                     	;# 
   512  071D                     	;# 
   513  0796                     	;# 
   514  0797                     	;# 
   515  0798                     	;# 
   516  0799                     	;# 
   517  079A                     	;# 
   518  079B                     	;# 
   519  080C                     	;# 
   520  080D                     	;# 
   521  080E                     	;# 
   522  080F                     	;# 
   523  0810                     	;# 
   524  0811                     	;# 
   525  0812                     	;# 
   526  0813                     	;# 
   527  0814                     	;# 
   528  081A                     	;# 
   529  081A                     	;# 
   530  081B                     	;# 
   531  081C                     	;# 
   532  081C                     	;# 
   533  081D                     	;# 
   534  081E                     	;# 
   535  081F                     	;# 
   536  088C                     	;# 
   537  088D                     	;# 
   538  088E                     	;# 
   539  088F                     	;# 
   540  0890                     	;# 
   541  0891                     	;# 
   542  0892                     	;# 
   543  0893                     	;# 
   544  0895                     	;# 
   545  0896                     	;# 
   546  090C                     	;# 
   547  090E                     	;# 
   548  090F                     	;# 
   549  091F                     	;# 
   550  098F                     	;# 
   551  098F                     	;# 
   552  0990                     	;# 
   553  0991                     	;# 
   554  0992                     	;# 
   555  0993                     	;# 
   556  0994                     	;# 
   557  0995                     	;# 
   558  0996                     	;# 
   559  0997                     	;# 
   560  0A19                     	;# 
   561  0A19                     	;# 
   562  0A1A                     	;# 
   563  0A1A                     	;# 
   564  0A1B                     	;# 
   565  0A1B                     	;# 
   566  0A1B                     	;# 
   567  0A1C                     	;# 
   568  0A1C                     	;# 
   569  0A1D                     	;# 
   570  0A1D                     	;# 
   571  0A1E                     	;# 
   572  0A1E                     	;# 
   573  0A1F                     	;# 
   574  0A1F                     	;# 
   575  0A1F                     	;# 
   576  1E0F                     	;# 
   577  1E10                     	;# 
   578  1E11                     	;# 
   579  1E12                     	;# 
   580  1E13                     	;# 
   581  1E14                     	;# 
   582  1E15                     	;# 
   583  1E16                     	;# 
   584  1E17                     	;# 
   585  1E18                     	;# 
   586  1E19                     	;# 
   587  1E1A                     	;# 
   588  1E1B                     	;# 
   589  1E1C                     	;# 
   590  1E1D                     	;# 
   591  1E1E                     	;# 
   592  1E1F                     	;# 
   593  1E20                     	;# 
   594  1E21                     	;# 
   595  1E22                     	;# 
   596  1E23                     	;# 
   597  1E24                     	;# 
   598  1E25                     	;# 
   599  1E26                     	;# 
   600  1E27                     	;# 
   601  1E28                     	;# 
   602  1E29                     	;# 
   603  1E2A                     	;# 
   604  1E2B                     	;# 
   605  1E2C                     	;# 
   606  1E2D                     	;# 
   607  1E2E                     	;# 
   608  1E2F                     	;# 
   609  1E30                     	;# 
   610  1E31                     	;# 
   611  1E32                     	;# 
   612  1E33                     	;# 
   613  1E34                     	;# 
   614  1E35                     	;# 
   615  1E36                     	;# 
   616  1E37                     	;# 
   617  1E8F                     	;# 
   618  1E90                     	;# 
   619  1E91                     	;# 
   620  1E92                     	;# 
   621  1E93                     	;# 
   622  1E9C                     	;# 
   623  1EA1                     	;# 
   624  1EA2                     	;# 
   625  1EB1                     	;# 
   626  1EBB                     	;# 
   627  1EBC                     	;# 
   628  1EBD                     	;# 
   629  1EBE                     	;# 
   630  1EC3                     	;# 
   631  1EC5                     	;# 
   632  1EC6                     	;# 
   633  1EC7                     	;# 
   634  1ECB                     	;# 
   635  1ECC                     	;# 
   636  1ECD                     	;# 
   637  1ECE                     	;# 
   638  1F10                     	;# 
   639  1F11                     	;# 
   640  1F12                     	;# 
   641  1F13                     	;# 
   642  1F14                     	;# 
   643  1F15                     	;# 
   644  1F20                     	;# 
   645  1F21                     	;# 
   646  1F22                     	;# 
   647  1F23                     	;# 
   648  1F24                     	;# 
   649  1F25                     	;# 
   650  1F38                     	;# 
   651  1F39                     	;# 
   652  1F3A                     	;# 
   653  1F3B                     	;# 
   654  1F3C                     	;# 
   655  1F3D                     	;# 
   656  1F3E                     	;# 
   657  1F3F                     	;# 
   658  1F4E                     	;# 
   659  1F4F                     	;# 
   660  1F50                     	;# 
   661  1F51                     	;# 
   662  1F52                     	;# 
   663  1F53                     	;# 
   664  1F54                     	;# 
   665  1F55                     	;# 
   666  1FE4                     	;# 
   667  1FE5                     	;# 
   668  1FE6                     	;# 
   669  1FE7                     	;# 
   670  1FE8                     	;# 
   671  1FE8                     	;# 
   672  1FE9                     	;# 
   673  1FEA                     	;# 
   674  1FEA                     	;# 
   675  1FEB                     	;# 
   676  1FED                     	;# 
   677  1FEE                     	;# 
   678  1FEF                     	;# 
   679  0000                     	;# 
   680  0001                     	;# 
   681  0002                     	;# 
   682  0003                     	;# 
   683  0004                     	;# 
   684  0005                     	;# 
   685  0006                     	;# 
   686  0007                     	;# 
   687  0008                     	;# 
   688  0009                     	;# 
   689  000A                     	;# 
   690  000B                     	;# 
   691  000C                     	;# 
   692  000E                     	;# 
   693  0012                     	;# 
   694  0014                     	;# 
   695  0018                     	;# 
   696  001A                     	;# 
   697  009B                     	;# 
   698  009B                     	;# 
   699  009C                     	;# 
   700  009D                     	;# 
   701  009E                     	;# 
   702  009F                     	;# 
   703  0119                     	;# 
   704  0119                     	;# 
   705  0119                     	;# 
   706  011A                     	;# 
   707  011A                     	;# 
   708  011A                     	;# 
   709  011B                     	;# 
   710  011B                     	;# 
   711  011B                     	;# 
   712  011B                     	;# 
   713  011B                     	;# 
   714  011C                     	;# 
   715  011C                     	;# 
   716  011C                     	;# 
   717  011D                     	;# 
   718  011D                     	;# 
   719  011D                     	;# 
   720  011E                     	;# 
   721  011E                     	;# 
   722  011E                     	;# 
   723  011F                     	;# 
   724  011F                     	;# 
   725  011F                     	;# 
   726  011F                     	;# 
   727  011F                     	;# 
   728  018C                     	;# 
   729  018D                     	;# 
   730  018E                     	;# 
   731  018F                     	;# 
   732  0190                     	;# 
   733  0191                     	;# 
   734  0192                     	;# 
   735  020C                     	;# 
   736  020C                     	;# 
   737  020D                     	;# 
   738  020E                     	;# 
   739  020F                     	;# 
   740  020F                     	;# 
   741  0210                     	;# 
   742  0210                     	;# 
   743  0211                     	;# 
   744  0211                     	;# 
   745  028C                     	;# 
   746  028C                     	;# 
   747  028D                     	;# 
   748  028D                     	;# 
   749  028E                     	;# 
   750  028F                     	;# 
   751  0290                     	;# 
   752  0291                     	;# 
   753  030C                     	;# 
   754  030C                     	;# 
   755  030D                     	;# 
   756  030E                     	;# 
   757  030F                     	;# 
   758  0310                     	;# 
   759  0310                     	;# 
   760  0311                     	;# 
   761  0312                     	;# 
   762  0313                     	;# 
   763  0314                     	;# 
   764  0314                     	;# 
   765  0315                     	;# 
   766  0316                     	;# 
   767  0318                     	;# 
   768  0318                     	;# 
   769  0319                     	;# 
   770  031A                     	;# 
   771  031C                     	;# 
   772  031C                     	;# 
   773  031D                     	;# 
   774  031E                     	;# 
   775  038C                     	;# 
   776  038C                     	;# 
   777  038D                     	;# 
   778  038E                     	;# 
   779  058C                     	;# 
   780  058C                     	;# 
   781  058D                     	;# 
   782  058E                     	;# 
   783  058F                     	;# 
   784  058F                     	;# 
   785  0590                     	;# 
   786  0591                     	;# 
   787  0592                     	;# 
   788  0593                     	;# 
   789  059C                     	;# 
   790  059C                     	;# 
   791  059D                     	;# 
   792  059D                     	;# 
   793  059E                     	;# 
   794  059F                     	;# 
   795  060C                     	;# 
   796  060D                     	;# 
   797  060E                     	;# 
   798  060F                     	;# 
   799  0610                     	;# 
   800  0611                     	;# 
   801  0612                     	;# 
   802  0613                     	;# 
   803  0614                     	;# 
   804  070C                     	;# 
   805  070D                     	;# 
   806  070E                     	;# 
   807  070F                     	;# 
   808  0710                     	;# 
   809  0711                     	;# 
   810  0712                     	;# 
   811  0713                     	;# 
   812  0716                     	;# 
   813  0717                     	;# 
   814  0718                     	;# 
   815  0719                     	;# 
   816  071A                     	;# 
   817  071B                     	;# 
   818  071C                     	;# 
   819  071D                     	;# 
   820  0796                     	;# 
   821  0797                     	;# 
   822  0798                     	;# 
   823  0799                     	;# 
   824  079A                     	;# 
   825  079B                     	;# 
   826  080C                     	;# 
   827  080D                     	;# 
   828  080E                     	;# 
   829  080F                     	;# 
   830  0810                     	;# 
   831  0811                     	;# 
   832  0812                     	;# 
   833  0813                     	;# 
   834  0814                     	;# 
   835  081A                     	;# 
   836  081A                     	;# 
   837  081B                     	;# 
   838  081C                     	;# 
   839  081C                     	;# 
   840  081D                     	;# 
   841  081E                     	;# 
   842  081F                     	;# 
   843  088C                     	;# 
   844  088D                     	;# 
   845  088E                     	;# 
   846  088F                     	;# 
   847  0890                     	;# 
   848  0891                     	;# 
   849  0892                     	;# 
   850  0893                     	;# 
   851  0895                     	;# 
   852  0896                     	;# 
   853  090C                     	;# 
   854  090E                     	;# 
   855  090F                     	;# 
   856  091F                     	;# 
   857  098F                     	;# 
   858  098F                     	;# 
   859  0990                     	;# 
   860  0991                     	;# 
   861  0992                     	;# 
   862  0993                     	;# 
   863  0994                     	;# 
   864  0995                     	;# 
   865  0996                     	;# 
   866  0997                     	;# 
   867  0A19                     	;# 
   868  0A19                     	;# 
   869  0A1A                     	;# 
   870  0A1A                     	;# 
   871  0A1B                     	;# 
   872  0A1B                     	;# 
   873  0A1B                     	;# 
   874  0A1C                     	;# 
   875  0A1C                     	;# 
   876  0A1D                     	;# 
   877  0A1D                     	;# 
   878  0A1E                     	;# 
   879  0A1E                     	;# 
   880  0A1F                     	;# 
   881  0A1F                     	;# 
   882  0A1F                     	;# 
   883  1E0F                     	;# 
   884  1E10                     	;# 
   885  1E11                     	;# 
   886  1E12                     	;# 
   887  1E13                     	;# 
   888  1E14                     	;# 
   889  1E15                     	;# 
   890  1E16                     	;# 
   891  1E17                     	;# 
   892  1E18                     	;# 
   893  1E19                     	;# 
   894  1E1A                     	;# 
   895  1E1B                     	;# 
   896  1E1C                     	;# 
   897  1E1D                     	;# 
   898  1E1E                     	;# 
   899  1E1F                     	;# 
   900  1E20                     	;# 
   901  1E21                     	;# 
   902  1E22                     	;# 
   903  1E23                     	;# 
   904  1E24                     	;# 
   905  1E25                     	;# 
   906  1E26                     	;# 
   907  1E27                     	;# 
   908  1E28                     	;# 
   909  1E29                     	;# 
   910  1E2A                     	;# 
   911  1E2B                     	;# 
   912  1E2C                     	;# 
   913  1E2D                     	;# 
   914  1E2E                     	;# 
   915  1E2F                     	;# 
   916  1E30                     	;# 
   917  1E31                     	;# 
   918  1E32                     	;# 
   919  1E33                     	;# 
   920  1E34                     	;# 
   921  1E35                     	;# 
   922  1E36                     	;# 
   923  1E37                     	;# 
   924  1E8F                     	;# 
   925  1E90                     	;# 
   926  1E91                     	;# 
   927  1E92                     	;# 
   928  1E93                     	;# 
   929  1E9C                     	;# 
   930  1EA1                     	;# 
   931  1EA2                     	;# 
   932  1EB1                     	;# 
   933  1EBB                     	;# 
   934  1EBC                     	;# 
   935  1EBD                     	;# 
   936  1EBE                     	;# 
   937  1EC3                     	;# 
   938  1EC5                     	;# 
   939  1EC6                     	;# 
   940  1EC7                     	;# 
   941  1ECB                     	;# 
   942  1ECC                     	;# 
   943  1ECD                     	;# 
   944  1ECE                     	;# 
   945  1F10                     	;# 
   946  1F11                     	;# 
   947  1F12                     	;# 
   948  1F13                     	;# 
   949  1F14                     	;# 
   950  1F15                     	;# 
   951  1F20                     	;# 
   952  1F21                     	;# 
   953  1F22                     	;# 
   954  1F23                     	;# 
   955  1F24                     	;# 
   956  1F25                     	;# 
   957  1F38                     	;# 
   958  1F39                     	;# 
   959  1F3A                     	;# 
   960  1F3B                     	;# 
   961  1F3C                     	;# 
   962  1F3D                     	;# 
   963  1F3E                     	;# 
   964  1F3F                     	;# 
   965  1F4E                     	;# 
   966  1F4F                     	;# 
   967  1F50                     	;# 
   968  1F51                     	;# 
   969  1F52                     	;# 
   970  1F53                     	;# 
   971  1F54                     	;# 
   972  1F55                     	;# 
   973  1FE4                     	;# 
   974  1FE5                     	;# 
   975  1FE6                     	;# 
   976  1FE7                     	;# 
   977  1FE8                     	;# 
   978  1FE8                     	;# 
   979  1FE9                     	;# 
   980  1FEA                     	;# 
   981  1FEA                     	;# 
   982  1FEB                     	;# 
   983  1FED                     	;# 
   984  1FEE                     	;# 
   985  1FEF                     	;# 
   986  0000                     	;# 
   987  0001                     	;# 
   988  0002                     	;# 
   989  0003                     	;# 
   990  0004                     	;# 
   991  0005                     	;# 
   992  0006                     	;# 
   993  0007                     	;# 
   994  0008                     	;# 
   995  0009                     	;# 
   996  000A                     	;# 
   997  000B                     	;# 
   998  000C                     	;# 
   999  000E                     	;# 
  1000  0012                     	;# 
  1001  0014                     	;# 
  1002  0018                     	;# 
  1003  001A                     	;# 
  1004  009B                     	;# 
  1005  009B                     	;# 
  1006  009C                     	;# 
  1007  009D                     	;# 
  1008  009E                     	;# 
  1009  009F                     	;# 
  1010  0119                     	;# 
  1011  0119                     	;# 
  1012  0119                     	;# 
  1013  011A                     	;# 
  1014  011A                     	;# 
  1015  011A                     	;# 
  1016  011B                     	;# 
  1017  011B                     	;# 
  1018  011B                     	;# 
  1019  011B                     	;# 
  1020  011B                     	;# 
  1021  011C                     	;# 
  1022  011C                     	;# 
  1023  011C                     	;# 
  1024  011D                     	;# 
  1025  011D                     	;# 
  1026  011D                     	;# 
  1027  011E                     	;# 
  1028  011E                     	;# 
  1029  011E                     	;# 
  1030  011F                     	;# 
  1031  011F                     	;# 
  1032  011F                     	;# 
  1033  011F                     	;# 
  1034  011F                     	;# 
  1035  018C                     	;# 
  1036  018D                     	;# 
  1037  018E                     	;# 
  1038  018F                     	;# 
  1039  0190                     	;# 
  1040  0191                     	;# 
  1041  0192                     	;# 
  1042  020C                     	;# 
  1043  020C                     	;# 
  1044  020D                     	;# 
  1045  020E                     	;# 
  1046  020F                     	;# 
  1047  020F                     	;# 
  1048  0210                     	;# 
  1049  0210                     	;# 
  1050  0211                     	;# 
  1051  0211                     	;# 
  1052  028C                     	;# 
  1053  028C                     	;# 
  1054  028D                     	;# 
  1055  028D                     	;# 
  1056  028E                     	;# 
  1057  028F                     	;# 
  1058  0290                     	;# 
  1059  0291                     	;# 
  1060  030C                     	;# 
  1061  030C                     	;# 
  1062  030D                     	;# 
  1063  030E                     	;# 
  1064  030F                     	;# 
  1065  0310                     	;# 
  1066  0310                     	;# 
  1067  0311                     	;# 
  1068  0312                     	;# 
  1069  0313                     	;# 
  1070  0314                     	;# 
  1071  0314                     	;# 
  1072  0315                     	;# 
  1073  0316                     	;# 
  1074  0318                     	;# 
  1075  0318                     	;# 
  1076  0319                     	;# 
  1077  031A                     	;# 
  1078  031C                     	;# 
  1079  031C                     	;# 
  1080  031D                     	;# 
  1081  031E                     	;# 
  1082  038C                     	;# 
  1083  038C                     	;# 
  1084  038D                     	;# 
  1085  038E                     	;# 
  1086  058C                     	;# 
  1087  058C                     	;# 
  1088  058D                     	;# 
  1089  058E                     	;# 
  1090  058F                     	;# 
  1091  058F                     	;# 
  1092  0590                     	;# 
  1093  0591                     	;# 
  1094  0592                     	;# 
  1095  0593                     	;# 
  1096  059C                     	;# 
  1097  059C                     	;# 
  1098  059D                     	;# 
  1099  059D                     	;# 
  1100  059E                     	;# 
  1101  059F                     	;# 
  1102  060C                     	;# 
  1103  060D                     	;# 
  1104  060E                     	;# 
  1105  060F                     	;# 
  1106  0610                     	;# 
  1107  0611                     	;# 
  1108  0612                     	;# 
  1109  0613                     	;# 
  1110  0614                     	;# 
  1111  070C                     	;# 
  1112  070D                     	;# 
  1113  070E                     	;# 
  1114  070F                     	;# 
  1115  0710                     	;# 
  1116  0711                     	;# 
  1117  0712                     	;# 
  1118  0713                     	;# 
  1119  0716                     	;# 
  1120  0717                     	;# 
  1121  0718                     	;# 
  1122  0719                     	;# 
  1123  071A                     	;# 
  1124  071B                     	;# 
  1125  071C                     	;# 
  1126  071D                     	;# 
  1127  0796                     	;# 
  1128  0797                     	;# 
  1129  0798                     	;# 
  1130  0799                     	;# 
  1131  079A                     	;# 
  1132  079B                     	;# 
  1133  080C                     	;# 
  1134  080D                     	;# 
  1135  080E                     	;# 
  1136  080F                     	;# 
  1137  0810                     	;# 
  1138  0811                     	;# 
  1139  0812                     	;# 
  1140  0813                     	;# 
  1141  0814                     	;# 
  1142  081A                     	;# 
  1143  081A                     	;# 
  1144  081B                     	;# 
  1145  081C                     	;# 
  1146  081C                     	;# 
  1147  081D                     	;# 
  1148  081E                     	;# 
  1149  081F                     	;# 
  1150  088C                     	;# 
  1151  088D                     	;# 
  1152  088E                     	;# 
  1153  088F                     	;# 
  1154  0890                     	;# 
  1155  0891                     	;# 
  1156  0892                     	;# 
  1157  0893                     	;# 
  1158  0895                     	;# 
  1159  0896                     	;# 
  1160  090C                     	;# 
  1161  090E                     	;# 
  1162  090F                     	;# 
  1163  091F                     	;# 
  1164  098F                     	;# 
  1165  098F                     	;# 
  1166  0990                     	;# 
  1167  0991                     	;# 
  1168  0992                     	;# 
  1169  0993                     	;# 
  1170  0994                     	;# 
  1171  0995                     	;# 
  1172  0996                     	;# 
  1173  0997                     	;# 
  1174  0A19                     	;# 
  1175  0A19                     	;# 
  1176  0A1A                     	;# 
  1177  0A1A                     	;# 
  1178  0A1B                     	;# 
  1179  0A1B                     	;# 
  1180  0A1B                     	;# 
  1181  0A1C                     	;# 
  1182  0A1C                     	;# 
  1183  0A1D                     	;# 
  1184  0A1D                     	;# 
  1185  0A1E                     	;# 
  1186  0A1E                     	;# 
  1187  0A1F                     	;# 
  1188  0A1F                     	;# 
  1189  0A1F                     	;# 
  1190  1E0F                     	;# 
  1191  1E10                     	;# 
  1192  1E11                     	;# 
  1193  1E12                     	;# 
  1194  1E13                     	;# 
  1195  1E14                     	;# 
  1196  1E15                     	;# 
  1197  1E16                     	;# 
  1198  1E17                     	;# 
  1199  1E18                     	;# 
  1200  1E19                     	;# 
  1201  1E1A                     	;# 
  1202  1E1B                     	;# 
  1203  1E1C                     	;# 
  1204  1E1D                     	;# 
  1205  1E1E                     	;# 
  1206  1E1F                     	;# 
  1207  1E20                     	;# 
  1208  1E21                     	;# 
  1209  1E22                     	;# 
  1210  1E23                     	;# 
  1211  1E24                     	;# 
  1212  1E25                     	;# 
  1213  1E26                     	;# 
  1214  1E27                     	;# 
  1215  1E28                     	;# 
  1216  1E29                     	;# 
  1217  1E2A                     	;# 
  1218  1E2B                     	;# 
  1219  1E2C                     	;# 
  1220  1E2D                     	;# 
  1221  1E2E                     	;# 
  1222  1E2F                     	;# 
  1223  1E30                     	;# 
  1224  1E31                     	;# 
  1225  1E32                     	;# 
  1226  1E33                     	;# 
  1227  1E34                     	;# 
  1228  1E35                     	;# 
  1229  1E36                     	;# 
  1230  1E37                     	;# 
  1231  1E8F                     	;# 
  1232  1E90                     	;# 
  1233  1E91                     	;# 
  1234  1E92                     	;# 
  1235  1E93                     	;# 
  1236  1E9C                     	;# 
  1237  1EA1                     	;# 
  1238  1EA2                     	;# 
  1239  1EB1                     	;# 
  1240  1EBB                     	;# 
  1241  1EBC                     	;# 
  1242  1EBD                     	;# 
  1243  1EBE                     	;# 
  1244  1EC3                     	;# 
  1245  1EC5                     	;# 
  1246  1EC6                     	;# 
  1247  1EC7                     	;# 
  1248  1ECB                     	;# 
  1249  1ECC                     	;# 
  1250  1ECD                     	;# 
  1251  1ECE                     	;# 
  1252  1F10                     	;# 
  1253  1F11                     	;# 
  1254  1F12                     	;# 
  1255  1F13                     	;# 
  1256  1F14                     	;# 
  1257  1F15                     	;# 
  1258  1F20                     	;# 
  1259  1F21                     	;# 
  1260  1F22                     	;# 
  1261  1F23                     	;# 
  1262  1F24                     	;# 
  1263  1F25                     	;# 
  1264  1F38                     	;# 
  1265  1F39                     	;# 
  1266  1F3A                     	;# 
  1267  1F3B                     	;# 
  1268  1F3C                     	;# 
  1269  1F3D                     	;# 
  1270  1F3E                     	;# 
  1271  1F3F                     	;# 
  1272  1F4E                     	;# 
  1273  1F4F                     	;# 
  1274  1F50                     	;# 
  1275  1F51                     	;# 
  1276  1F52                     	;# 
  1277  1F53                     	;# 
  1278  1F54                     	;# 
  1279  1F55                     	;# 
  1280  1FE4                     	;# 
  1281  1FE5                     	;# 
  1282  1FE6                     	;# 
  1283  1FE7                     	;# 
  1284  1FE8                     	;# 
  1285  1FE8                     	;# 
  1286  1FE9                     	;# 
  1287  1FEA                     	;# 
  1288  1FEA                     	;# 
  1289  1FEB                     	;# 
  1290  1FED                     	;# 
  1291  1FEE                     	;# 
  1292  1FEF                     	;# 
  1293  0000                     	;# 
  1294  0001                     	;# 
  1295  0002                     	;# 
  1296  0003                     	;# 
  1297  0004                     	;# 
  1298  0005                     	;# 
  1299  0006                     	;# 
  1300  0007                     	;# 
  1301  0008                     	;# 
  1302  0009                     	;# 
  1303  000A                     	;# 
  1304  000B                     	;# 
  1305  000C                     	;# 
  1306  000E                     	;# 
  1307  0012                     	;# 
  1308  0014                     	;# 
  1309  0018                     	;# 
  1310  001A                     	;# 
  1311  009B                     	;# 
  1312  009B                     	;# 
  1313  009C                     	;# 
  1314  009D                     	;# 
  1315  009E                     	;# 
  1316  009F                     	;# 
  1317  0119                     	;# 
  1318  0119                     	;# 
  1319  0119                     	;# 
  1320  011A                     	;# 
  1321  011A                     	;# 
  1322  011A                     	;# 
  1323  011B                     	;# 
  1324  011B                     	;# 
  1325  011B                     	;# 
  1326  011B                     	;# 
  1327  011B                     	;# 
  1328  011C                     	;# 
  1329  011C                     	;# 
  1330  011C                     	;# 
  1331  011D                     	;# 
  1332  011D                     	;# 
  1333  011D                     	;# 
  1334  011E                     	;# 
  1335  011E                     	;# 
  1336  011E                     	;# 
  1337  011F                     	;# 
  1338  011F                     	;# 
  1339  011F                     	;# 
  1340  011F                     	;# 
  1341  011F                     	;# 
  1342  018C                     	;# 
  1343  018D                     	;# 
  1344  018E                     	;# 
  1345  018F                     	;# 
  1346  0190                     	;# 
  1347  0191                     	;# 
  1348  0192                     	;# 
  1349  020C                     	;# 
  1350  020C                     	;# 
  1351  020D                     	;# 
  1352  020E                     	;# 
  1353  020F                     	;# 
  1354  020F                     	;# 
  1355  0210                     	;# 
  1356  0210                     	;# 
  1357  0211                     	;# 
  1358  0211                     	;# 
  1359  028C                     	;# 
  1360  028C                     	;# 
  1361  028D                     	;# 
  1362  028D                     	;# 
  1363  028E                     	;# 
  1364  028F                     	;# 
  1365  0290                     	;# 
  1366  0291                     	;# 
  1367  030C                     	;# 
  1368  030C                     	;# 
  1369  030D                     	;# 
  1370  030E                     	;# 
  1371  030F                     	;# 
  1372  0310                     	;# 
  1373  0310                     	;# 
  1374  0311                     	;# 
  1375  0312                     	;# 
  1376  0313                     	;# 
  1377  0314                     	;# 
  1378  0314                     	;# 
  1379  0315                     	;# 
  1380  0316                     	;# 
  1381  0318                     	;# 
  1382  0318                     	;# 
  1383  0319                     	;# 
  1384  031A                     	;# 
  1385  031C                     	;# 
  1386  031C                     	;# 
  1387  031D                     	;# 
  1388  031E                     	;# 
  1389  038C                     	;# 
  1390  038C                     	;# 
  1391  038D                     	;# 
  1392  038E                     	;# 
  1393  058C                     	;# 
  1394  058C                     	;# 
  1395  058D                     	;# 
  1396  058E                     	;# 
  1397  058F                     	;# 
  1398  058F                     	;# 
  1399  0590                     	;# 
  1400  0591                     	;# 
  1401  0592                     	;# 
  1402  0593                     	;# 
  1403  059C                     	;# 
  1404  059C                     	;# 
  1405  059D                     	;# 
  1406  059D                     	;# 
  1407  059E                     	;# 
  1408  059F                     	;# 
  1409  060C                     	;# 
  1410  060D                     	;# 
  1411  060E                     	;# 
  1412  060F                     	;# 
  1413  0610                     	;# 
  1414  0611                     	;# 
  1415  0612                     	;# 
  1416  0613                     	;# 
  1417  0614                     	;# 
  1418  070C                     	;# 
  1419  070D                     	;# 
  1420  070E                     	;# 
  1421  070F                     	;# 
  1422  0710                     	;# 
  1423  0711                     	;# 
  1424  0712                     	;# 
  1425  0713                     	;# 
  1426  0716                     	;# 
  1427  0717                     	;# 
  1428  0718                     	;# 
  1429  0719                     	;# 
  1430  071A                     	;# 
  1431  071B                     	;# 
  1432  071C                     	;# 
  1433  071D                     	;# 
  1434  0796                     	;# 
  1435  0797                     	;# 
  1436  0798                     	;# 
  1437  0799                     	;# 
  1438  079A                     	;# 
  1439  079B                     	;# 
  1440  080C                     	;# 
  1441  080D                     	;# 
  1442  080E                     	;# 
  1443  080F                     	;# 
  1444  0810                     	;# 
  1445  0811                     	;# 
  1446  0812                     	;# 
  1447  0813                     	;# 
  1448  0814                     	;# 
  1449  081A                     	;# 
  1450  081A                     	;# 
  1451  081B                     	;# 
  1452  081C                     	;# 
  1453  081C                     	;# 
  1454  081D                     	;# 
  1455  081E                     	;# 
  1456  081F                     	;# 
  1457  088C                     	;# 
  1458  088D                     	;# 
  1459  088E                     	;# 
  1460  088F                     	;# 
  1461  0890                     	;# 
  1462  0891                     	;# 
  1463  0892                     	;# 
  1464  0893                     	;# 
  1465  0895                     	;# 
  1466  0896                     	;# 
  1467  090C                     	;# 
  1468  090E                     	;# 
  1469  090F                     	;# 
  1470  091F                     	;# 
  1471  098F                     	;# 
  1472  098F                     	;# 
  1473  0990                     	;# 
  1474  0991                     	;# 
  1475  0992                     	;# 
  1476  0993                     	;# 
  1477  0994                     	;# 
  1478  0995                     	;# 
  1479  0996                     	;# 
  1480  0997                     	;# 
  1481  0A19                     	;# 
  1482  0A19                     	;# 
  1483  0A1A                     	;# 
  1484  0A1A                     	;# 
  1485  0A1B                     	;# 
  1486  0A1B                     	;# 
  1487  0A1B                     	;# 
  1488  0A1C                     	;# 
  1489  0A1C                     	;# 
  1490  0A1D                     	;# 
  1491  0A1D                     	;# 
  1492  0A1E                     	;# 
  1493  0A1E                     	;# 
  1494  0A1F                     	;# 
  1495  0A1F                     	;# 
  1496  0A1F                     	;# 
  1497  1E0F                     	;# 
  1498  1E10                     	;# 
  1499  1E11                     	;# 
  1500  1E12                     	;# 
  1501  1E13                     	;# 
  1502  1E14                     	;# 
  1503  1E15                     	;# 
  1504  1E16                     	;# 
  1505  1E17                     	;# 
  1506  1E18                     	;# 
  1507  1E19                     	;# 
  1508  1E1A                     	;# 
  1509  1E1B                     	;# 
  1510  1E1C                     	;# 
  1511  1E1D                     	;# 
  1512  1E1E                     	;# 
  1513  1E1F                     	;# 
  1514  1E20                     	;# 
  1515  1E21                     	;# 
  1516  1E22                     	;# 
  1517  1E23                     	;# 
  1518  1E24                     	;# 
  1519  1E25                     	;# 
  1520  1E26                     	;# 
  1521  1E27                     	;# 
  1522  1E28                     	;# 
  1523  1E29                     	;# 
  1524  1E2A                     	;# 
  1525  1E2B                     	;# 
  1526  1E2C                     	;# 
  1527  1E2D                     	;# 
  1528  1E2E                     	;# 
  1529  1E2F                     	;# 
  1530  1E30                     	;# 
  1531  1E31                     	;# 
  1532  1E32                     	;# 
  1533  1E33                     	;# 
  1534  1E34                     	;# 
  1535  1E35                     	;# 
  1536  1E36                     	;# 
  1537  1E37                     	;# 
  1538  1E8F                     	;# 
  1539  1E90                     	;# 
  1540  1E91                     	;# 
  1541  1E92                     	;# 
  1542  1E93                     	;# 
  1543  1E9C                     	;# 
  1544  1EA1                     	;# 
  1545  1EA2                     	;# 
  1546  1EB1                     	;# 
  1547  1EBB                     	;# 
  1548  1EBC                     	;# 
  1549  1EBD                     	;# 
  1550  1EBE                     	;# 
  1551  1EC3                     	;# 
  1552  1EC5                     	;# 
  1553  1EC6                     	;# 
  1554  1EC7                     	;# 
  1555  1ECB                     	;# 
  1556  1ECC                     	;# 
  1557  1ECD                     	;# 
  1558  1ECE                     	;# 
  1559  1F10                     	;# 
  1560  1F11                     	;# 
  1561  1F12                     	;# 
  1562  1F13                     	;# 
  1563  1F14                     	;# 
  1564  1F15                     	;# 
  1565  1F20                     	;# 
  1566  1F21                     	;# 
  1567  1F22                     	;# 
  1568  1F23                     	;# 
  1569  1F24                     	;# 
  1570  1F25                     	;# 
  1571  1F38                     	;# 
  1572  1F39                     	;# 
  1573  1F3A                     	;# 
  1574  1F3B                     	;# 
  1575  1F3C                     	;# 
  1576  1F3D                     	;# 
  1577  1F3E                     	;# 
  1578  1F3F                     	;# 
  1579  1F4E                     	;# 
  1580  1F4F                     	;# 
  1581  1F50                     	;# 
  1582  1F51                     	;# 
  1583  1F52                     	;# 
  1584  1F53                     	;# 
  1585  1F54                     	;# 
  1586  1F55                     	;# 
  1587  1FE4                     	;# 
  1588  1FE5                     	;# 
  1589  1FE6                     	;# 
  1590  1FE7                     	;# 
  1591  1FE8                     	;# 
  1592  1FE8                     	;# 
  1593  1FE9                     	;# 
  1594  1FEA                     	;# 
  1595  1FEA                     	;# 
  1596  1FEB                     	;# 
  1597  1FED                     	;# 
  1598  1FEE                     	;# 
  1599  1FEF                     	;# 
  1600                           
  1601                           	psect	idataBANK0
  1602  03CC                     __pidataBANK0:	
  1603                           
  1604                           ;initializer for _volume_prev
  1605  03CC  340F               	retlw	15
  1606                           
  1607                           ;initializer for _volume
  1608  03CD  340F               	retlw	15
  1609  0014                     _TRISCbits	set	20
  1610  000B                     _INTCONbits	set	11
  1611  0014                     _TRISC	set	20
  1612  0012                     _TRISA	set	18
  1613  0070                     _RC0	set	112
  1614  0071                     _RC1	set	113
  1615  0064                     _RA4	set	100
  1616  0065                     _RA5	set	101
  1617  0073                     _RC3	set	115
  1618  0074                     _RC4	set	116
  1619  018C                     _SSP1BUF	set	396
  1620  0191                     _SSP1CON2bits	set	401
  1621  018F                     _SSP1STAT	set	399
  1622  018D                     _SSP1ADD	set	397
  1623  0191                     _SSP1CON2	set	401
  1624  0190                     _SSP1CON1	set	400
  1625  020C                     _TMR1	set	524
  1626  0211                     _T1CLK	set	529
  1627  020F                     _T1GCONbits	set	527
  1628  020E                     _T1CONbits	set	526
  1629  071A                     _PIE4bits	set	1818
  1630  3880                     _TMR1IF	set	14464
  1631  1E8F                     _PPSLOCK	set	7823
  1632  1EC5                     _SSP1CLKPPS	set	7877
  1633  1EC6                     _SSP1DATPPS	set	7878
  1634  1F20                     _RC0PPS	set	7968
  1635  1F21                     _RC1PPS	set	7969
  1636  1F4F                     _WPUC	set	8015
  1637  1F39                     _WPUA	set	7993
  1638  1F4E                     _ANSELC	set	8014
  1639  1F38                     _ANSELA	set	7992
  1640                           
  1641                           ; #config settings
  1642  0000                     
  1643                           	psect	cinit
  1644  001E                     start_initialization:	
  1645  001E                     __initialization:	
  1646                           
  1647                           ; Initialize objects allocated to BANK0
  1648  001E  3183  23CC  3180   	fcall	__pidataBANK0	;fetch initializer
  1649  0021  00C1               	movwf	__pdataBANK0& (0+127)
  1650  0022  3183  23CD  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1651  0025  00C2               	movwf	(__pdataBANK0+1)& (0+127)
  1652                           
  1653                           ; Clear objects allocated to BANK0
  1654  0026  3020               	movlw	low __pbssBANK0
  1655  0027  0084               	movwf	4
  1656  0028  3000               	movlw	high __pbssBANK0
  1657  0029  0085               	movwf	5
  1658  002A  3018               	movlw	24
  1659  002B  3183  23BA  3180   	fcall	clear_ram0
  1660  002E                     end_of_initialization:	
  1661                           ;End of C runtime variable initialization code
  1662                           
  1663  002E                     __end_of__initialization:	
  1664  002E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1665  002F  0140               	movlb	0
  1666  0030  3180  2832         	ljmp	_main	;jump to C main() function
  1667                           
  1668                           	psect	bssBANK0
  1669  0020                     __pbssBANK0:	
  1670  0020                     _vol_minus_time_hold:	
  1671  0020                     	ds	4
  1672  0024                     _vol_minus_time_start:	
  1673  0024                     	ds	4
  1674  0028                     _vol_plus_time_hold:	
  1675  0028                     	ds	4
  1676  002C                     _vol_plus_time_start:	
  1677  002C                     	ds	4
  1678  0030                     _timer_counter:	
  1679  0030                     	ds	4
  1680  0034                     _vol_minus_state:	
  1681  0034                     	ds	1
  1682  0035                     _vol_plus_state:	
  1683  0035                     	ds	1
  1684  0036                     _mute_state:	
  1685  0036                     	ds	1
  1686  0037                     _mute_config:	
  1687  0037                     	ds	1
  1688                           
  1689                           	psect	dataBANK0
  1690  0041                     __pdataBANK0:	
  1691  0041                     _volume_prev:	
  1692  0041                     	ds	1
  1693  0042                     _volume:	
  1694  0042                     	ds	1
  1695                           
  1696                           	psect	clrtext
  1697  03BA                     clear_ram0:	
  1698                           ;	Called with FSR0 containing the base address, and
  1699                           ;	WREG with the size to clear
  1700                           
  1701  03BA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1702  03BB                     clrloop0:	
  1703  03BB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1704  03BC  3101               	addfsr 0,1
  1705  03BD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1706  03BE  2BBB               	goto	clrloop0	;have we reached the end yet?
  1707  03BF  3400               	retlw	0	;all done for this memory range, return
  1708                           
  1709                           	psect	cstackCOMMON
  1710  0070                     __pcstackCOMMON:	
  1711  0070                     ?_PPS_unlock:	
  1712  0070                     ??_PPS_unlock:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715  0070                     ?_PPS_lock:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718  0070                     ??_PPS_lock:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721  0070                     ?_LM49450_Wii_init:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724  0070                     ?_LM49450_PS2_init:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727  0070                     ?_LM49450_analog_init:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730  0070                     ?_LM49450_DC_init:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733  0070                     ?_PIC_SETUP:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736  0070                     ??_PIC_SETUP:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739  0070                     ?_ISR:	
  1740                           ; 1 bytes @ 0x0
  1741                           
  1742  0070                     ??_ISR:	
  1743                           ; 1 bytes @ 0x0
  1744                           
  1745  0070                     ?_main:	
  1746                           ; 1 bytes @ 0x0
  1747                           
  1748  0070                     ?_I2C_Master_Wait:	
  1749                           ; 1 bytes @ 0x0
  1750                           
  1751  0070                     ??_I2C_Master_Wait:	
  1752                           ; 1 bytes @ 0x0
  1753                           
  1754  0070                     ?_I2C_Master_Start:	
  1755                           ; 1 bytes @ 0x0
  1756                           
  1757  0070                     ??_I2C_Master_Start:	
  1758                           ; 1 bytes @ 0x0
  1759                           
  1760  0070                     ?_I2C_Master_Stop:	
  1761                           ; 1 bytes @ 0x0
  1762                           
  1763  0070                     ??_I2C_Master_Stop:	
  1764                           ; 1 bytes @ 0x0
  1765                           
  1766  0070                     ?_I2C_Master_Write:	
  1767                           ; 1 bytes @ 0x0
  1768                           
  1769  0070                     ??_I2C_Master_Write:	
  1770                           ; 1 bytes @ 0x0
  1771                           
  1772  0070                     ?_get_time:	
  1773                           ; 1 bytes @ 0x0
  1774                           
  1775  0070                     ?_timer_diff:	
  1776                           ; 4 bytes @ 0x0
  1777                           
  1778  0070                     ?___lldiv:	
  1779                           ; 4 bytes @ 0x0
  1780                           
  1781  0070                     I2C_Master_Write@data:	
  1782                           ; 4 bytes @ 0x0
  1783                           
  1784  0070                     timer_diff@t:	
  1785                           ; 1 bytes @ 0x0
  1786                           
  1787  0070                     ___lldiv@divisor:	
  1788                           ; 4 bytes @ 0x0
  1789                           
  1790                           
  1791                           ; 4 bytes @ 0x0
  1792  0070                     	ds	1
  1793  0071                     ?_LM49450_write:	
  1794  0071                     LM49450_write@data:	
  1795                           ; 1 bytes @ 0x1
  1796                           
  1797                           
  1798                           ; 1 bytes @ 0x1
  1799  0071                     	ds	1
  1800  0072                     ??_LM49450_write:	
  1801  0072                     LM49450_write@reg:	
  1802                           ; 1 bytes @ 0x2
  1803                           
  1804                           
  1805                           ; 1 bytes @ 0x2
  1806  0072                     	ds	1
  1807  0073                     ??_LM49450_Wii_init:	
  1808  0073                     ??_LM49450_PS2_init:	
  1809                           ; 1 bytes @ 0x3
  1810                           
  1811  0073                     ??_LM49450_analog_init:	
  1812                           ; 1 bytes @ 0x3
  1813                           
  1814  0073                     ??_LM49450_DC_init:	
  1815                           ; 1 bytes @ 0x3
  1816                           
  1817                           
  1818                           ; 1 bytes @ 0x3
  1819  0073                     	ds	1
  1820  0074                     ??_get_time:	
  1821  0074                     ??_timer_diff:	
  1822                           ; 1 bytes @ 0x4
  1823                           
  1824  0074                     ___lldiv@dividend:	
  1825                           ; 1 bytes @ 0x4
  1826                           
  1827                           
  1828                           ; 4 bytes @ 0x4
  1829  0074                     	ds	4
  1830  0078                     ??___lldiv:	
  1831                           
  1832                           ; 1 bytes @ 0x8
  1833  0078                     	ds	1
  1834  0079                     ___lldiv@quotient:	
  1835                           
  1836                           ; 4 bytes @ 0x9
  1837  0079                     	ds	4
  1838  007D                     ___lldiv@counter:	
  1839                           
  1840                           ; 1 bytes @ 0xD
  1841  007D                     	ds	1
  1842                           
  1843                           	psect	cstackBANK0
  1844  0038                     __pcstackBANK0:	
  1845  0038                     ?_I2C_Master_Init:	
  1846  0038                     I2C_Master_Init@clk:	
  1847                           ; 1 bytes @ 0x0
  1848                           
  1849                           
  1850                           ; 4 bytes @ 0x0
  1851  0038                     	ds	4
  1852  003C                     ??_I2C_Master_Init:	
  1853                           
  1854                           ; 1 bytes @ 0x4
  1855  003C                     	ds	4
  1856  0040                     ??_main:	
  1857                           
  1858                           ; 1 bytes @ 0x8
  1859  0040                     	ds	1
  1860                           
  1861                           	psect	maintext
  1862  0032                     __pmaintext:	
  1863 ;;
  1864 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1865 ;;
  1866 ;; *************** function _main *****************
  1867 ;; Defined at:
  1868 ;;		line 70 in file "main.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      void 
  1875 ;; Registers used:
  1876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : B3F/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1882 ;;      Params:         0       0       0       0       0       0       0       0
  1883 ;;      Locals:         0       0       0       0       0       0       0       0
  1884 ;;      Temps:          0       1       0       0       0       0       0       0
  1885 ;;      Totals:         0       1       0       0       0       0       0       0
  1886 ;;Total ram usage:        1 bytes
  1887 ;; Hardware stack levels required when called:    5
  1888 ;; This function calls:
  1889 ;;		_I2C_Master_Init
  1890 ;;		_LM49450_DC_init
  1891 ;;		_LM49450_PS2_init
  1892 ;;		_LM49450_Wii_init
  1893 ;;		_LM49450_analog_init
  1894 ;;		_LM49450_write
  1895 ;;		_PIC_SETUP
  1896 ;;		_PPS_lock
  1897 ;;		_PPS_unlock
  1898 ;;		_get_time
  1899 ;;		_timer_diff
  1900 ;; This function is called by:
  1901 ;;		Startup code after reset
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           
  1906                           ;psect for function _main
  1907  0032                     _main:	
  1908  0032                     l1309:	
  1909                           ;incstack = 0
  1910                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1911                           
  1912                           
  1913                           ;main.c: 72: PIC_SETUP();
  1914  0032  3183  233A  3180   	fcall	_PIC_SETUP
  1915                           
  1916                           ;main.c: 75: PPS_unlock();
  1917  0035  3183  23B3  3180   	fcall	_PPS_unlock
  1918  0038                     l1311:	
  1919                           
  1920                           ;main.c: 76: SSP1DATPPS = 0x11;
  1921  0038  3011               	movlw	17
  1922  0039  017D               	movlb	61	; select bank61
  1923  003A  00C6               	movwf	70	;volatile
  1924  003B                     l1313:	
  1925                           
  1926                           ;main.c: 77: RC1PPS = 0x16;
  1927  003B  3016               	movlw	22
  1928  003C  017E               	movlb	62	; select bank62
  1929  003D  00A1               	movwf	33	;volatile
  1930  003E                     l1315:	
  1931                           
  1932                           ;main.c: 78: SSP1CLKPPS = 0x10;
  1933  003E  3010               	movlw	16
  1934  003F  017D               	movlb	61	; select bank61
  1935  0040  00C5               	movwf	69	;volatile
  1936  0041                     l1317:	
  1937                           
  1938                           ;main.c: 79: RC0PPS = 0x15;
  1939  0041  3015               	movlw	21
  1940  0042  017E               	movlb	62	; select bank62
  1941  0043  00A0               	movwf	32	;volatile
  1942                           
  1943                           ;main.c: 80: PPS_lock();
  1944  0044  3183  23A3  3180   	fcall	_PPS_lock
  1945                           
  1946                           ;main.c: 81: I2C_Master_Init(100000);
  1947  0047  3000               	movlw	0
  1948  0048  0140               	movlb	0	; select bank0
  1949  0049  00BB               	movwf	I2C_Master_Init@clk+3
  1950  004A  3001               	movlw	1
  1951  004B  00BA               	movwf	I2C_Master_Init@clk+2
  1952  004C  3086               	movlw	134
  1953  004D  00B9               	movwf	I2C_Master_Init@clk+1
  1954  004E  30A0               	movlw	160
  1955  004F  00B8               	movwf	I2C_Master_Init@clk
  1956  0050  3182  229B  3180   	fcall	_I2C_Master_Init
  1957  0053                     l1319:	
  1958                           
  1959                           ;main.c: 84: if(RC4 && RC3) {
  1960  0053  0140               	movlb	0	; select bank0
  1961  0054  1E0E               	btfss	14,4	;volatile
  1962  0055  2857               	goto	u571
  1963  0056  2858               	goto	u570
  1964  0057                     u571:	
  1965  0057  2864               	goto	l98
  1966  0058                     u570:	
  1967  0058                     l1321:	
  1968  0058  1D8E               	btfss	14,3	;volatile
  1969  0059  285B               	goto	u581
  1970  005A  285C               	goto	u580
  1971  005B                     u581:	
  1972  005B  2864               	goto	l98
  1973  005C                     u580:	
  1974  005C                     l1323:	
  1975                           
  1976                           ;main.c: 85: mute_config = LM49450_Wii_init();
  1977  005C  3182  22F0  3180   	fcall	_LM49450_Wii_init
  1978  005F  0140               	movlb	0	; select bank0
  1979  0060  00C0               	movwf	??_main
  1980  0061  0840               	movf	??_main,w
  1981  0062  00B7               	movwf	_mute_config
  1982                           
  1983                           ;main.c: 86: }
  1984  0063  2893               	goto	l99
  1985  0064                     l98:	
  1986                           
  1987                           ;main.c: 87: else if(RC4 && !RC3) {
  1988  0064  1E0E               	btfss	14,4	;volatile
  1989  0065  2867               	goto	u591
  1990  0066  2868               	goto	u590
  1991  0067                     u591:	
  1992  0067  2874               	goto	l100
  1993  0068                     u590:	
  1994  0068                     l1325:	
  1995  0068  198E               	btfsc	14,3	;volatile
  1996  0069  286B               	goto	u601
  1997  006A  286C               	goto	u600
  1998  006B                     u601:	
  1999  006B  2874               	goto	l100
  2000  006C                     u600:	
  2001  006C                     l1327:	
  2002                           
  2003                           ;main.c: 88: mute_config = LM49450_PS2_init();
  2004  006C  3182  22C9  3180   	fcall	_LM49450_PS2_init
  2005  006F  0140               	movlb	0	; select bank0
  2006  0070  00C0               	movwf	??_main
  2007  0071  0840               	movf	??_main,w
  2008  0072  00B7               	movwf	_mute_config
  2009                           
  2010                           ;main.c: 89: }
  2011  0073  2893               	goto	l99
  2012  0074                     l100:	
  2013                           
  2014                           ;main.c: 90: else if(!RC4 && !RC3) {
  2015  0074  1A0E               	btfsc	14,4	;volatile
  2016  0075  2877               	goto	u611
  2017  0076  2878               	goto	u610
  2018  0077                     u611:	
  2019  0077  2884               	goto	l102
  2020  0078                     u610:	
  2021  0078                     l1329:	
  2022  0078  198E               	btfsc	14,3	;volatile
  2023  0079  287B               	goto	u621
  2024  007A  287C               	goto	u620
  2025  007B                     u621:	
  2026  007B  2884               	goto	l102
  2027  007C                     u620:	
  2028  007C                     l1331:	
  2029                           
  2030                           ;main.c: 91: mute_config = LM49450_analog_init();
  2031  007C  3183  2399  3180   	fcall	_LM49450_analog_init
  2032  007F  0140               	movlb	0	; select bank0
  2033  0080  00C0               	movwf	??_main
  2034  0081  0840               	movf	??_main,w
  2035  0082  00B7               	movwf	_mute_config
  2036                           
  2037                           ;main.c: 92: }
  2038  0083  2893               	goto	l99
  2039  0084                     l102:	
  2040                           
  2041                           ;main.c: 93: else if(!RC4 && RC3) {
  2042  0084  1A0E               	btfsc	14,4	;volatile
  2043  0085  2887               	goto	u631
  2044  0086  2888               	goto	u630
  2045  0087                     u631:	
  2046  0087  2893               	goto	l99
  2047  0088                     u630:	
  2048  0088                     l1333:	
  2049  0088  1D8E               	btfss	14,3	;volatile
  2050  0089  288B               	goto	u641
  2051  008A  288C               	goto	u640
  2052  008B                     u641:	
  2053  008B  2893               	goto	l99
  2054  008C                     u640:	
  2055  008C                     l1335:	
  2056                           
  2057                           ;main.c: 94: mute_config = LM49450_DC_init();
  2058  008C  3183  2315  3180   	fcall	_LM49450_DC_init
  2059  008F  0140               	movlb	0	; select bank0
  2060  0090  00C0               	movwf	??_main
  2061  0091  0840               	movf	??_main,w
  2062  0092  00B7               	movwf	_mute_config
  2063  0093                     l99:	
  2064                           
  2065                           ;main.c: 95: };main.c: 98: LM49450_write(0x08, volume);
  2066  0093  0842               	movf	_volume,w
  2067  0094  00C0               	movwf	??_main
  2068  0095  0840               	movf	??_main,w
  2069  0096  00F1               	movwf	LM49450_write@data
  2070  0097  3008               	movlw	8
  2071  0098  3183  236F  3180   	fcall	_LM49450_write
  2072                           
  2073                           ;main.c: 99: LM49450_write(0x07, volume);
  2074  009B  0140               	movlb	0	; select bank0
  2075  009C  0842               	movf	_volume,w
  2076  009D  00C0               	movwf	??_main
  2077  009E  0840               	movf	??_main,w
  2078  009F  00F1               	movwf	LM49450_write@data
  2079  00A0  3007               	movlw	7
  2080  00A1  3183  236F  3180   	fcall	_LM49450_write
  2081  00A4                     l1337:	
  2082                           
  2083                           ;main.c: 103: if(!RA5) {
  2084  00A4  0140               	movlb	0	; select bank0
  2085  00A5  1A8C               	btfsc	12,5	;volatile
  2086  00A6  28A8               	goto	u651
  2087  00A7  28A9               	goto	u650
  2088  00A8                     u651:	
  2089  00A8  2925               	goto	l1367
  2090  00A9                     u650:	
  2091  00A9  2927               	goto	l1369
  2092  00AA                     l1341:	
  2093                           
  2094                           ;main.c: 107: vol_plus_time_start = get_time();
  2095  00AA  3183  238F  3180   	fcall	_get_time
  2096  00AD  0873               	movf	?_get_time+3,w
  2097  00AE  0140               	movlb	0	; select bank0
  2098  00AF  00AF               	movwf	_vol_plus_time_start+3
  2099  00B0  0872               	movf	?_get_time+2,w
  2100  00B1  00AE               	movwf	_vol_plus_time_start+2
  2101  00B2  0871               	movf	?_get_time+1,w
  2102  00B3  00AD               	movwf	_vol_plus_time_start+1
  2103  00B4  0870               	movf	?_get_time,w
  2104  00B5  00AC               	movwf	_vol_plus_time_start
  2105  00B6                     l1343:	
  2106                           
  2107                           ;main.c: 108: vol_plus_state = 1;
  2108  00B6  01B5               	clrf	_vol_plus_state
  2109  00B7  0AB5               	incf	_vol_plus_state,f
  2110                           
  2111                           ;main.c: 109: break;
  2112  00B8  2932               	goto	l1373
  2113  00B9                     l1345:	
  2114                           
  2115                           ;main.c: 112: if(timer_diff(vol_plus_time_start) >= 4) {
  2116  00B9  082F               	movf	_vol_plus_time_start+3,w
  2117  00BA  00F3               	movwf	timer_diff@t+3
  2118  00BB  082E               	movf	_vol_plus_time_start+2,w
  2119  00BC  00F2               	movwf	timer_diff@t+2
  2120  00BD  082D               	movf	_vol_plus_time_start+1,w
  2121  00BE  00F1               	movwf	timer_diff@t+1
  2122  00BF  082C               	movf	_vol_plus_time_start,w
  2123  00C0  00F0               	movwf	timer_diff@t
  2124  00C1  3183  2359  3180   	fcall	_timer_diff
  2125  00C4  0873               	movf	?_timer_diff+3,w
  2126  00C5  1D03               	btfss	3,2
  2127  00C6  28D3               	goto	u660
  2128  00C7  0872               	movf	?_timer_diff+2,w
  2129  00C8  1D03               	btfss	3,2
  2130  00C9  28D3               	goto	u660
  2131  00CA  0871               	movf	?_timer_diff+1,w
  2132  00CB  1D03               	btfss	3,2
  2133  00CC  28D3               	goto	u660
  2134  00CD  3004               	movlw	4
  2135  00CE  0270               	subwf	?_timer_diff,w
  2136  00CF  1C03               	btfss	3,0
  2137  00D0  28D2               	goto	u661
  2138  00D1  28D3               	goto	u660
  2139  00D2                     u661:	
  2140  00D2  2932               	goto	l1373
  2141  00D3                     u660:	
  2142  00D3                     l1347:	
  2143                           
  2144                           ;main.c: 113: vol_plus_time_hold = get_time();
  2145  00D3  3183  238F  3180   	fcall	_get_time
  2146  00D6  0873               	movf	?_get_time+3,w
  2147  00D7  0140               	movlb	0	; select bank0
  2148  00D8  00AB               	movwf	_vol_plus_time_hold+3
  2149  00D9  0872               	movf	?_get_time+2,w
  2150  00DA  00AA               	movwf	_vol_plus_time_hold+2
  2151  00DB  0871               	movf	?_get_time+1,w
  2152  00DC  00A9               	movwf	_vol_plus_time_hold+1
  2153  00DD  0870               	movf	?_get_time,w
  2154  00DE  00A8               	movwf	_vol_plus_time_hold
  2155  00DF                     l1349:	
  2156                           
  2157                           ;main.c: 114: vol_plus_state = 2;
  2158  00DF  3002               	movlw	2
  2159  00E0  00C0               	movwf	??_main
  2160  00E1  0840               	movf	??_main,w
  2161  00E2  00B5               	movwf	_vol_plus_state
  2162  00E3                     l1351:	
  2163                           
  2164                           ;main.c: 115: if((volume < 31) && mute_state == 0) volume++;
  2165  00E3  301F               	movlw	31
  2166  00E4  0242               	subwf	_volume,w
  2167  00E5  1803               	skipnc
  2168  00E6  28E8               	goto	u671
  2169  00E7  28E9               	goto	u670
  2170  00E8                     u671:	
  2171  00E8  2932               	goto	l109
  2172  00E9                     u670:	
  2173  00E9                     l1353:	
  2174  00E9  0836               	movf	_mute_state,w
  2175  00EA  1D03               	btfss	3,2
  2176  00EB  28ED               	goto	u681
  2177  00EC  28EE               	goto	u680
  2178  00ED                     u681:	
  2179  00ED  2932               	goto	l109
  2180  00EE                     u680:	
  2181  00EE                     l1355:	
  2182  00EE  3001               	movlw	1
  2183  00EF  00C0               	movwf	??_main
  2184  00F0  0840               	movf	??_main,w
  2185  00F1  07C2               	addwf	_volume,f
  2186  00F2  2932               	goto	l1373
  2187  00F3                     l1357:	
  2188                           
  2189                           ;main.c: 120: if(timer_diff(vol_plus_time_hold) >= 20) {
  2190  00F3  082B               	movf	_vol_plus_time_hold+3,w
  2191  00F4  00F3               	movwf	timer_diff@t+3
  2192  00F5  082A               	movf	_vol_plus_time_hold+2,w
  2193  00F6  00F2               	movwf	timer_diff@t+2
  2194  00F7  0829               	movf	_vol_plus_time_hold+1,w
  2195  00F8  00F1               	movwf	timer_diff@t+1
  2196  00F9  0828               	movf	_vol_plus_time_hold,w
  2197  00FA  00F0               	movwf	timer_diff@t
  2198  00FB  3183  2359  3180   	fcall	_timer_diff
  2199  00FE  0873               	movf	?_timer_diff+3,w
  2200  00FF  1D03               	btfss	3,2
  2201  0100  290D               	goto	u690
  2202  0101  0872               	movf	?_timer_diff+2,w
  2203  0102  1D03               	btfss	3,2
  2204  0103  290D               	goto	u690
  2205  0104  0871               	movf	?_timer_diff+1,w
  2206  0105  1D03               	btfss	3,2
  2207  0106  290D               	goto	u690
  2208  0107  3014               	movlw	20
  2209  0108  0270               	subwf	?_timer_diff,w
  2210  0109  1C03               	btfss	3,0
  2211  010A  290C               	goto	u691
  2212  010B  290D               	goto	u690
  2213  010C                     u691:	
  2214  010C  2932               	goto	l1373
  2215  010D                     u690:	
  2216  010D                     l1359:	
  2217                           
  2218                           ;main.c: 121: vol_plus_time_hold = get_time();
  2219  010D  3183  238F  3180   	fcall	_get_time
  2220  0110  0873               	movf	?_get_time+3,w
  2221  0111  0140               	movlb	0	; select bank0
  2222  0112  00AB               	movwf	_vol_plus_time_hold+3
  2223  0113  0872               	movf	?_get_time+2,w
  2224  0114  00AA               	movwf	_vol_plus_time_hold+2
  2225  0115  0871               	movf	?_get_time+1,w
  2226  0116  00A9               	movwf	_vol_plus_time_hold+1
  2227  0117  0870               	movf	?_get_time,w
  2228  0118  00A8               	movwf	_vol_plus_time_hold
  2229  0119                     l1361:	
  2230                           
  2231                           ;main.c: 122: if((volume < 31) && mute_state == 0) volume++;
  2232  0119  301F               	movlw	31
  2233  011A  0242               	subwf	_volume,w
  2234  011B  1803               	skipnc
  2235  011C  291E               	goto	u701
  2236  011D  291F               	goto	u700
  2237  011E                     u701:	
  2238  011E  2932               	goto	l109
  2239  011F                     u700:	
  2240  011F                     l1363:	
  2241  011F  0836               	movf	_mute_state,w
  2242  0120  1D03               	btfss	3,2
  2243  0121  2923               	goto	u711
  2244  0122  2924               	goto	u710
  2245  0123                     u711:	
  2246  0123  2932               	goto	l109
  2247  0124                     u710:	
  2248  0124  28EE               	goto	l1355
  2249  0125                     l1367:	
  2250                           
  2251                           ;main.c: 126: vol_plus_state = 0;
  2252  0125  01B5               	clrf	_vol_plus_state
  2253                           
  2254                           ;main.c: 127: }
  2255  0126  2932               	goto	l1373
  2256  0127                     l1369:	
  2257  0127  0835               	movf	_vol_plus_state,w
  2258                           
  2259                           ; Switch size 1, requested type "simple"
  2260                           ; Number of cases is 3, Range of values is 0 to 2
  2261                           ; switch strategies available:
  2262                           ; Name         Instructions Cycles
  2263                           ; simple_byte           10     6 (average)
  2264                           ; direct_byte           12     6 (fixed)
  2265                           ; jumptable            260     6 (fixed)
  2266                           ;	Chosen strategy is simple_byte
  2267  0128  3A00               	xorlw	0	; case 0
  2268  0129  1903               	skipnz
  2269  012A  28AA               	goto	l1341
  2270  012B  3A01               	xorlw	1	; case 1
  2271  012C  1903               	skipnz
  2272  012D  28B9               	goto	l1345
  2273  012E  3A03               	xorlw	3	; case 2
  2274  012F  1903               	skipnz
  2275  0130  28F3               	goto	l1357
  2276  0131  2925               	goto	l1367
  2277  0132                     l109:	
  2278  0132                     l1373:	
  2279                           ;main.c: 128: }
  2280                           
  2281                           
  2282                           ;main.c: 131: };main.c: 133: if(!RA4) {
  2283  0132  0140               	movlb	0	; select bank0
  2284  0133  1A0C               	btfsc	12,4	;volatile
  2285  0134  2936               	goto	u721
  2286  0135  2937               	goto	u720
  2287  0136                     u721:	
  2288  0136  29AF               	goto	l1403
  2289  0137                     u720:	
  2290  0137  29B1               	goto	l1405
  2291  0138                     l1377:	
  2292                           
  2293                           ;main.c: 136: vol_minus_time_start = get_time();
  2294  0138  3183  238F  3180   	fcall	_get_time
  2295  013B  0873               	movf	?_get_time+3,w
  2296  013C  0140               	movlb	0	; select bank0
  2297  013D  00A7               	movwf	_vol_minus_time_start+3
  2298  013E  0872               	movf	?_get_time+2,w
  2299  013F  00A6               	movwf	_vol_minus_time_start+2
  2300  0140  0871               	movf	?_get_time+1,w
  2301  0141  00A5               	movwf	_vol_minus_time_start+1
  2302  0142  0870               	movf	?_get_time,w
  2303  0143  00A4               	movwf	_vol_minus_time_start
  2304  0144                     l1379:	
  2305                           
  2306                           ;main.c: 137: vol_minus_state = 1;
  2307  0144  01B4               	clrf	_vol_minus_state
  2308  0145  0AB4               	incf	_vol_minus_state,f
  2309                           
  2310                           ;main.c: 138: break;
  2311  0146  29BC               	goto	l1409
  2312  0147                     l1381:	
  2313                           
  2314                           ;main.c: 140: if(timer_diff(vol_minus_time_start) >= 4) {
  2315  0147  0827               	movf	_vol_minus_time_start+3,w
  2316  0148  00F3               	movwf	timer_diff@t+3
  2317  0149  0826               	movf	_vol_minus_time_start+2,w
  2318  014A  00F2               	movwf	timer_diff@t+2
  2319  014B  0825               	movf	_vol_minus_time_start+1,w
  2320  014C  00F1               	movwf	timer_diff@t+1
  2321  014D  0824               	movf	_vol_minus_time_start,w
  2322  014E  00F0               	movwf	timer_diff@t
  2323  014F  3183  2359  3180   	fcall	_timer_diff
  2324  0152  0873               	movf	?_timer_diff+3,w
  2325  0153  1D03               	btfss	3,2
  2326  0154  2961               	goto	u730
  2327  0155  0872               	movf	?_timer_diff+2,w
  2328  0156  1D03               	btfss	3,2
  2329  0157  2961               	goto	u730
  2330  0158  0871               	movf	?_timer_diff+1,w
  2331  0159  1D03               	btfss	3,2
  2332  015A  2961               	goto	u730
  2333  015B  3004               	movlw	4
  2334  015C  0270               	subwf	?_timer_diff,w
  2335  015D  1C03               	btfss	3,0
  2336  015E  2960               	goto	u731
  2337  015F  2961               	goto	u730
  2338  0160                     u731:	
  2339  0160  29BC               	goto	l1409
  2340  0161                     u730:	
  2341  0161                     l1383:	
  2342                           
  2343                           ;main.c: 141: vol_minus_time_hold = get_time();
  2344  0161  3183  238F  3180   	fcall	_get_time
  2345  0164  0873               	movf	?_get_time+3,w
  2346  0165  0140               	movlb	0	; select bank0
  2347  0166  00A3               	movwf	_vol_minus_time_hold+3
  2348  0167  0872               	movf	?_get_time+2,w
  2349  0168  00A2               	movwf	_vol_minus_time_hold+2
  2350  0169  0871               	movf	?_get_time+1,w
  2351  016A  00A1               	movwf	_vol_minus_time_hold+1
  2352  016B  0870               	movf	?_get_time,w
  2353  016C  00A0               	movwf	_vol_minus_time_hold
  2354  016D                     l1385:	
  2355                           
  2356                           ;main.c: 142: vol_minus_state = 2;
  2357  016D  3002               	movlw	2
  2358  016E  00C0               	movwf	??_main
  2359  016F  0840               	movf	??_main,w
  2360  0170  00B4               	movwf	_vol_minus_state
  2361  0171                     l1387:	
  2362                           
  2363                           ;main.c: 143: if((volume > 0) && mute_state == 0) volume--;
  2364  0171  0842               	movf	_volume,w
  2365  0172  1903               	btfsc	3,2
  2366  0173  2975               	goto	u741
  2367  0174  2976               	goto	u740
  2368  0175                     u741:	
  2369  0175  29BC               	goto	l121
  2370  0176                     u740:	
  2371  0176                     l1389:	
  2372  0176  0836               	movf	_mute_state,w
  2373  0177  1D03               	btfss	3,2
  2374  0178  297A               	goto	u751
  2375  0179  297B               	goto	u750
  2376  017A                     u751:	
  2377  017A  29BC               	goto	l121
  2378  017B                     u750:	
  2379  017B                     l1391:	
  2380  017B  3001               	movlw	1
  2381  017C  02C2               	subwf	_volume,f
  2382  017D  29BC               	goto	l1409
  2383  017E                     l1393:	
  2384                           
  2385                           ;main.c: 147: if(timer_diff(vol_minus_time_hold) >= 20) {
  2386  017E  0823               	movf	_vol_minus_time_hold+3,w
  2387  017F  00F3               	movwf	timer_diff@t+3
  2388  0180  0822               	movf	_vol_minus_time_hold+2,w
  2389  0181  00F2               	movwf	timer_diff@t+2
  2390  0182  0821               	movf	_vol_minus_time_hold+1,w
  2391  0183  00F1               	movwf	timer_diff@t+1
  2392  0184  0820               	movf	_vol_minus_time_hold,w
  2393  0185  00F0               	movwf	timer_diff@t
  2394  0186  3183  2359  3180   	fcall	_timer_diff
  2395  0189  0873               	movf	?_timer_diff+3,w
  2396  018A  1D03               	btfss	3,2
  2397  018B  2998               	goto	u760
  2398  018C  0872               	movf	?_timer_diff+2,w
  2399  018D  1D03               	btfss	3,2
  2400  018E  2998               	goto	u760
  2401  018F  0871               	movf	?_timer_diff+1,w
  2402  0190  1D03               	btfss	3,2
  2403  0191  2998               	goto	u760
  2404  0192  3014               	movlw	20
  2405  0193  0270               	subwf	?_timer_diff,w
  2406  0194  1C03               	btfss	3,0
  2407  0195  2997               	goto	u761
  2408  0196  2998               	goto	u760
  2409  0197                     u761:	
  2410  0197  29BC               	goto	l1409
  2411  0198                     u760:	
  2412  0198                     l1395:	
  2413                           
  2414                           ;main.c: 148: vol_minus_time_hold = get_time();
  2415  0198  3183  238F  3180   	fcall	_get_time
  2416  019B  0873               	movf	?_get_time+3,w
  2417  019C  0140               	movlb	0	; select bank0
  2418  019D  00A3               	movwf	_vol_minus_time_hold+3
  2419  019E  0872               	movf	?_get_time+2,w
  2420  019F  00A2               	movwf	_vol_minus_time_hold+2
  2421  01A0  0871               	movf	?_get_time+1,w
  2422  01A1  00A1               	movwf	_vol_minus_time_hold+1
  2423  01A2  0870               	movf	?_get_time,w
  2424  01A3  00A0               	movwf	_vol_minus_time_hold
  2425  01A4                     l1397:	
  2426                           
  2427                           ;main.c: 149: if((volume > 0) && mute_state == 0) volume--;
  2428  01A4  0842               	movf	_volume,w
  2429  01A5  1903               	btfsc	3,2
  2430  01A6  29A8               	goto	u771
  2431  01A7  29A9               	goto	u770
  2432  01A8                     u771:	
  2433  01A8  29BC               	goto	l121
  2434  01A9                     u770:	
  2435  01A9                     l1399:	
  2436  01A9  0836               	movf	_mute_state,w
  2437  01AA  1D03               	btfss	3,2
  2438  01AB  29AD               	goto	u781
  2439  01AC  29AE               	goto	u780
  2440  01AD                     u781:	
  2441  01AD  29BC               	goto	l121
  2442  01AE                     u780:	
  2443  01AE  297B               	goto	l1391
  2444  01AF                     l1403:	
  2445                           
  2446                           ;main.c: 153: vol_minus_state = 0;
  2447  01AF  01B4               	clrf	_vol_minus_state
  2448                           
  2449                           ;main.c: 154: }
  2450  01B0  29BC               	goto	l1409
  2451  01B1                     l1405:	
  2452  01B1  0834               	movf	_vol_minus_state,w
  2453                           
  2454                           ; Switch size 1, requested type "simple"
  2455                           ; Number of cases is 3, Range of values is 0 to 2
  2456                           ; switch strategies available:
  2457                           ; Name         Instructions Cycles
  2458                           ; simple_byte           10     6 (average)
  2459                           ; direct_byte           12     6 (fixed)
  2460                           ; jumptable            260     6 (fixed)
  2461                           ;	Chosen strategy is simple_byte
  2462  01B2  3A00               	xorlw	0	; case 0
  2463  01B3  1903               	skipnz
  2464  01B4  2938               	goto	l1377
  2465  01B5  3A01               	xorlw	1	; case 1
  2466  01B6  1903               	skipnz
  2467  01B7  2947               	goto	l1381
  2468  01B8  3A03               	xorlw	3	; case 2
  2469  01B9  1903               	skipnz
  2470  01BA  297E               	goto	l1393
  2471  01BB  29AF               	goto	l1403
  2472  01BC                     l121:	
  2473  01BC                     l1409:	
  2474                           ;main.c: 155: }
  2475                           
  2476                           
  2477                           ;main.c: 158: };main.c: 161: if((vol_plus_state == 2) && (vol_minus_state == 2)) {
  2478  01BC  3002               	movlw	2
  2479  01BD  0140               	movlb	0	; select bank0
  2480  01BE  0635               	xorwf	_vol_plus_state,w
  2481  01BF  1D03               	btfss	3,2
  2482  01C0  29C2               	goto	u791
  2483  01C1  29C3               	goto	u790
  2484  01C2                     u791:	
  2485  01C2  29F5               	goto	l1427
  2486  01C3                     u790:	
  2487  01C3                     l1411:	
  2488  01C3  3002               	movlw	2
  2489  01C4  0634               	xorwf	_vol_minus_state,w
  2490  01C5  1D03               	btfss	3,2
  2491  01C6  29C8               	goto	u801
  2492  01C7  29C9               	goto	u800
  2493  01C8                     u801:	
  2494  01C8  29F5               	goto	l1427
  2495  01C9                     u800:	
  2496  01C9  29E7               	goto	l1425
  2497  01CA                     l1415:	
  2498                           
  2499                           ;main.c: 165: LM49450_write(0x00, (mute_config | 0b100));
  2500  01CA  0837               	movf	_mute_config,w
  2501  01CB  3804               	iorlw	4
  2502  01CC  00C0               	movwf	??_main
  2503  01CD  0840               	movf	??_main,w
  2504  01CE  00F1               	movwf	LM49450_write@data
  2505  01CF  3000               	movlw	0
  2506  01D0  3183  236F  3180   	fcall	_LM49450_write
  2507  01D3                     l1417:	
  2508                           
  2509                           ;main.c: 166: mute_state = 1;
  2510  01D3  0140               	movlb	0	; select bank0
  2511  01D4  01B6               	clrf	_mute_state
  2512  01D5  0AB6               	incf	_mute_state,f
  2513                           
  2514                           ;main.c: 167: break;
  2515  01D6  2A05               	goto	l1435
  2516  01D7                     l1419:	
  2517                           
  2518                           ;main.c: 172: LM49450_write(0x00, mute_config);
  2519  01D7  0837               	movf	_mute_config,w
  2520  01D8  00C0               	movwf	??_main
  2521  01D9  0840               	movf	??_main,w
  2522  01DA  00F1               	movwf	LM49450_write@data
  2523  01DB  3000               	movlw	0
  2524  01DC  3183  236F  3180   	fcall	_LM49450_write
  2525  01DF                     l1421:	
  2526                           
  2527                           ;main.c: 173: mute_state = 3;
  2528  01DF  3003               	movlw	3
  2529  01E0  0140               	movlb	0	; select bank0
  2530  01E1  00C0               	movwf	??_main
  2531  01E2  0840               	movf	??_main,w
  2532  01E3  00B6               	movwf	_mute_state
  2533                           
  2534                           ;main.c: 174: break;
  2535  01E4  2A05               	goto	l1435
  2536  01E5                     l1423:	
  2537                           
  2538                           ;main.c: 179: mute_state = 0;
  2539  01E5  01B6               	clrf	_mute_state
  2540                           
  2541                           ;main.c: 180: }
  2542  01E6  2A05               	goto	l1435
  2543  01E7                     l1425:	
  2544  01E7  0836               	movf	_mute_state,w
  2545                           
  2546                           ; Switch size 1, requested type "simple"
  2547                           ; Number of cases is 4, Range of values is 0 to 3
  2548                           ; switch strategies available:
  2549                           ; Name         Instructions Cycles
  2550                           ; simple_byte           13     7 (average)
  2551                           ; direct_byte           14     6 (fixed)
  2552                           ; jumptable            260     6 (fixed)
  2553                           ;	Chosen strategy is simple_byte
  2554  01E8  3A00               	xorlw	0	; case 0
  2555  01E9  1903               	skipnz
  2556  01EA  29CA               	goto	l1415
  2557  01EB  3A01               	xorlw	1	; case 1
  2558  01EC  1903               	skipnz
  2559  01ED  2A05               	goto	l1435
  2560  01EE  3A03               	xorlw	3	; case 2
  2561  01EF  1903               	skipnz
  2562  01F0  29D7               	goto	l1419
  2563  01F1  3A01               	xorlw	1	; case 3
  2564  01F2  1903               	skipnz
  2565  01F3  2A05               	goto	l1435
  2566  01F4  29E5               	goto	l1423
  2567  01F5                     l1427:	
  2568                           
  2569                           ;main.c: 182: else {;main.c: 183: if(mute_state == 1) {
  2570  01F5  0336               	decf	_mute_state,w
  2571  01F6  1D03               	btfss	3,2
  2572  01F7  29F9               	goto	u811
  2573  01F8  29FA               	goto	u810
  2574  01F9                     u811:	
  2575  01F9  29FE               	goto	l1431
  2576  01FA                     u810:	
  2577  01FA                     l1429:	
  2578                           
  2579                           ;main.c: 184: mute_state = 2;
  2580  01FA  3002               	movlw	2
  2581  01FB  00C0               	movwf	??_main
  2582  01FC  0840               	movf	??_main,w
  2583  01FD  00B6               	movwf	_mute_state
  2584  01FE                     l1431:	
  2585                           
  2586                           ;main.c: 185: };main.c: 186: if(mute_state == 3) {
  2587  01FE  3003               	movlw	3
  2588  01FF  0636               	xorwf	_mute_state,w
  2589  0200  1D03               	btfss	3,2
  2590  0201  2A03               	goto	u821
  2591  0202  2A04               	goto	u820
  2592  0203                     u821:	
  2593  0203  2A05               	goto	l1435
  2594  0204                     u820:	
  2595  0204  29E5               	goto	l1423
  2596  0205                     l1435:	
  2597                           
  2598                           ;main.c: 188: };main.c: 189: };main.c: 191: if((volume != volume_prev) && mute_state == 
      +                          0) {
  2599  0205  0842               	movf	_volume,w
  2600  0206  0641               	xorwf	_volume_prev,w
  2601  0207  1903               	skipnz
  2602  0208  2A0A               	goto	u831
  2603  0209  2A0B               	goto	u830
  2604  020A                     u831:	
  2605  020A  2A39               	goto	l1445
  2606  020B                     u830:	
  2607  020B                     l1437:	
  2608  020B  0836               	movf	_mute_state,w
  2609  020C  1D03               	btfss	3,2
  2610  020D  2A0F               	goto	u841
  2611  020E  2A10               	goto	u840
  2612  020F                     u841:	
  2613  020F  2A39               	goto	l1445
  2614  0210                     u840:	
  2615  0210                     l1439:	
  2616                           
  2617                           ;main.c: 193: if(volume == 0) {
  2618  0210  0842               	movf	_volume,w
  2619  0211  1D03               	btfss	3,2
  2620  0212  2A14               	goto	u851
  2621  0213  2A15               	goto	u850
  2622  0214                     u851:	
  2623  0214  2A1F               	goto	l1443
  2624  0215                     u850:	
  2625  0215                     l1441:	
  2626                           
  2627                           ;main.c: 194: LM49450_write(0x00, (mute_config | 0b00000100));
  2628  0215  0837               	movf	_mute_config,w
  2629  0216  3804               	iorlw	4
  2630  0217  00C0               	movwf	??_main
  2631  0218  0840               	movf	??_main,w
  2632  0219  00F1               	movwf	LM49450_write@data
  2633  021A  3000               	movlw	0
  2634  021B  3183  236F  3180   	fcall	_LM49450_write
  2635                           
  2636                           ;main.c: 195: }
  2637  021E  2A39               	goto	l1445
  2638  021F                     l1443:	
  2639                           
  2640                           ;main.c: 196: else {;main.c: 197: LM49450_write(0x00, mute_config);
  2641  021F  0837               	movf	_mute_config,w
  2642  0220  00C0               	movwf	??_main
  2643  0221  0840               	movf	??_main,w
  2644  0222  00F1               	movwf	LM49450_write@data
  2645  0223  3000               	movlw	0
  2646  0224  3183  236F  3180   	fcall	_LM49450_write
  2647                           
  2648                           ;main.c: 198: LM49450_write(0x08, volume);
  2649  0227  0140               	movlb	0	; select bank0
  2650  0228  0842               	movf	_volume,w
  2651  0229  00C0               	movwf	??_main
  2652  022A  0840               	movf	??_main,w
  2653  022B  00F1               	movwf	LM49450_write@data
  2654  022C  3008               	movlw	8
  2655  022D  3183  236F  3180   	fcall	_LM49450_write
  2656                           
  2657                           ;main.c: 199: LM49450_write(0x07, volume);
  2658  0230  0140               	movlb	0	; select bank0
  2659  0231  0842               	movf	_volume,w
  2660  0232  00C0               	movwf	??_main
  2661  0233  0840               	movf	??_main,w
  2662  0234  00F1               	movwf	LM49450_write@data
  2663  0235  3007               	movlw	7
  2664  0236  3183  236F  3180   	fcall	_LM49450_write
  2665  0239                     l1445:	
  2666                           
  2667                           ;main.c: 200: };main.c: 201: };main.c: 203: volume_prev = volume;
  2668  0239  0140               	movlb	0	; select bank0
  2669  023A  0842               	movf	_volume,w
  2670  023B  00C0               	movwf	??_main
  2671  023C  0840               	movf	??_main,w
  2672  023D  00C1               	movwf	_volume_prev
  2673  023E  28A4               	goto	l1337
  2674  023F  3180  281C         	ljmp	start
  2675  0241                     __end_of_main:	
  2676                           
  2677                           	psect	text1
  2678  0359                     __ptext1:	
  2679 ;; *************** function _timer_diff *****************
  2680 ;; Defined at:
  2681 ;;		line 17 in file "time.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  t               4    0[COMMON] unsigned long 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;		None
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  4    0[COMMON] unsigned long 
  2688 ;; Registers used:
  2689 ;;		wreg
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2695 ;;      Params:         4       0       0       0       0       0       0       0
  2696 ;;      Locals:         0       0       0       0       0       0       0       0
  2697 ;;      Temps:          4       0       0       0       0       0       0       0
  2698 ;;      Totals:         8       0       0       0       0       0       0       0
  2699 ;;Total ram usage:        8 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    1
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_main
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           
  2710                           ;psect for function _timer_diff
  2711  0359                     _timer_diff:	
  2712  0359                     l1299:	
  2713                           ;incstack = 0
  2714                           ; Regs used in _timer_diff: [wreg]
  2715                           
  2716                           
  2717                           ;time.c: 18: return timer_counter - t;
  2718  0359  0870               	movf	timer_diff@t,w
  2719  035A  0140               	movlb	0	; select bank0
  2720  035B  0230               	subwf	_timer_counter,w
  2721  035C  00F4               	movwf	??_timer_diff
  2722  035D  0871               	movf	timer_diff@t+1,w
  2723  035E  3B31               	subwfb	_timer_counter+1,w
  2724  035F  00F5               	movwf	??_timer_diff+1
  2725  0360  0872               	movf	timer_diff@t+2,w
  2726  0361  3B32               	subwfb	_timer_counter+2,w
  2727  0362  00F6               	movwf	??_timer_diff+2
  2728  0363  0873               	movf	timer_diff@t+3,w
  2729  0364  3B33               	subwfb	_timer_counter+3,w
  2730  0365  00F7               	movwf	??_timer_diff+3
  2731  0366  0877               	movf	??_timer_diff+3,w
  2732  0367  00F3               	movwf	?_timer_diff+3
  2733  0368  0876               	movf	??_timer_diff+2,w
  2734  0369  00F2               	movwf	?_timer_diff+2
  2735  036A  0875               	movf	??_timer_diff+1,w
  2736  036B  00F1               	movwf	?_timer_diff+1
  2737  036C  0874               	movf	??_timer_diff,w
  2738  036D  00F0               	movwf	?_timer_diff
  2739  036E                     l226:	
  2740  036E  0008               	return
  2741  036F                     __end_of_timer_diff:	
  2742                           
  2743                           	psect	text2
  2744  038F                     __ptext2:	
  2745 ;; *************** function _get_time *****************
  2746 ;; Defined at:
  2747 ;;		line 13 in file "time.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;		None
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;		None
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  4    0[COMMON] unsigned long 
  2754 ;; Registers used:
  2755 ;;		wreg
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2761 ;;      Params:         4       0       0       0       0       0       0       0
  2762 ;;      Locals:         0       0       0       0       0       0       0       0
  2763 ;;      Temps:          0       0       0       0       0       0       0       0
  2764 ;;      Totals:         4       0       0       0       0       0       0       0
  2765 ;;Total ram usage:        4 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:    1
  2768 ;; This function calls:
  2769 ;;		Nothing
  2770 ;; This function is called by:
  2771 ;;		_main
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           
  2776                           ;psect for function _get_time
  2777  038F                     _get_time:	
  2778  038F                     l1295:	
  2779                           ;incstack = 0
  2780                           ; Regs used in _get_time: [wreg]
  2781                           
  2782                           
  2783                           ;time.c: 14: return timer_counter;
  2784  038F  0140               	movlb	0	; select bank0
  2785  0390  0833               	movf	_timer_counter+3,w
  2786  0391  00F3               	movwf	?_get_time+3
  2787  0392  0832               	movf	_timer_counter+2,w
  2788  0393  00F2               	movwf	?_get_time+2
  2789  0394  0831               	movf	_timer_counter+1,w
  2790  0395  00F1               	movwf	?_get_time+1
  2791  0396  0830               	movf	_timer_counter,w
  2792  0397  00F0               	movwf	?_get_time
  2793  0398                     l223:	
  2794  0398  0008               	return
  2795  0399                     __end_of_get_time:	
  2796                           
  2797                           	psect	text3
  2798  03B3                     __ptext3:	
  2799 ;; *************** function _PPS_unlock *****************
  2800 ;; Defined at:
  2801 ;;		line 11 in file "PPS.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;		None
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, status,2
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2815 ;;      Params:         0       0       0       0       0       0       0       0
  2816 ;;      Locals:         0       0       0       0       0       0       0       0
  2817 ;;      Temps:          0       0       0       0       0       0       0       0
  2818 ;;      Totals:         0       0       0       0       0       0       0       0
  2819 ;;Total ram usage:        0 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    1
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_main
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           
  2830                           ;psect for function _PPS_unlock
  2831  03B3                     _PPS_unlock:	
  2832  03B3                     l1225:	
  2833                           ;incstack = 0
  2834                           ; Regs used in _PPS_unlock: [wreg+status,2]
  2835                           
  2836                           
  2837                           ;PPS.c: 12: PPSLOCK = 0x55;
  2838  03B3  3055               	movlw	85
  2839  03B4  017D               	movlb	61	; select bank61
  2840  03B5  008F               	movwf	15	;volsfr
  2841                           
  2842                           ;PPS.c: 13: PPSLOCK = 0xAA;
  2843  03B6  30AA               	movlw	170
  2844  03B7  008F               	movwf	15	;volsfr
  2845  03B8                     l1227:	
  2846                           
  2847                           ;PPS.c: 14: PPSLOCK = 0;
  2848  03B8  018F               	clrf	15	;volsfr
  2849  03B9                     l151:	
  2850  03B9  0008               	return
  2851  03BA                     __end_of_PPS_unlock:	
  2852                           
  2853                           	psect	text4
  2854  03A3                     __ptext4:	
  2855 ;; *************** function _PPS_lock *****************
  2856 ;; Defined at:
  2857 ;;		line 17 in file "PPS.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;		None
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;		None
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      void 
  2864 ;; Registers used:
  2865 ;;		wreg
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2871 ;;      Params:         0       0       0       0       0       0       0       0
  2872 ;;      Locals:         0       0       0       0       0       0       0       0
  2873 ;;      Temps:          0       0       0       0       0       0       0       0
  2874 ;;      Totals:         0       0       0       0       0       0       0       0
  2875 ;;Total ram usage:        0 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:    1
  2878 ;; This function calls:
  2879 ;;		Nothing
  2880 ;; This function is called by:
  2881 ;;		_main
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           
  2886                           ;psect for function _PPS_lock
  2887  03A3                     _PPS_lock:	
  2888  03A3                     l1229:	
  2889                           ;incstack = 0
  2890                           ; Regs used in _PPS_lock: [wreg]
  2891                           
  2892                           
  2893                           ;PPS.c: 18: PPSLOCK = 0x55;
  2894  03A3  3055               	movlw	85
  2895  03A4  017D               	movlb	61	; select bank61
  2896  03A5  008F               	movwf	15	;volsfr
  2897                           
  2898                           ;PPS.c: 19: PPSLOCK = 0xAA;
  2899  03A6  30AA               	movlw	170
  2900  03A7  008F               	movwf	15	;volsfr
  2901                           
  2902                           ;PPS.c: 20: PPSLOCK = 1;
  2903  03A8  3001               	movlw	1
  2904  03A9  008F               	movwf	15	;volsfr
  2905  03AA                     l154:	
  2906  03AA  0008               	return
  2907  03AB                     __end_of_PPS_lock:	
  2908                           
  2909                           	psect	text5
  2910  033A                     __ptext5:	
  2911 ;; *************** function _PIC_SETUP *****************
  2912 ;; Defined at:
  2913 ;;		line 16 in file "main.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2927 ;;      Params:         0       0       0       0       0       0       0       0
  2928 ;;      Locals:         0       0       0       0       0       0       0       0
  2929 ;;      Temps:          0       0       0       0       0       0       0       0
  2930 ;;      Totals:         0       0       0       0       0       0       0       0
  2931 ;;Total ram usage:        0 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:    1
  2934 ;; This function calls:
  2935 ;;		Nothing
  2936 ;; This function is called by:
  2937 ;;		_main
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           
  2942                           ;psect for function _PIC_SETUP
  2943  033A                     _PIC_SETUP:	
  2944  033A                     l1199:	
  2945                           ;incstack = 0
  2946                           ; Regs used in _PIC_SETUP: [wreg+status,2+status,0]
  2947                           
  2948                           
  2949                           ;main.c: 19: TRISA = 0xFF;
  2950  033A  30FF               	movlw	255
  2951  033B  0140               	movlb	0	; select bank0
  2952  033C  0092               	movwf	18	;volatile
  2953                           
  2954                           ;main.c: 20: TRISC = 0xFF;
  2955  033D  30FF               	movlw	255
  2956  033E  0094               	movwf	20	;volatile
  2957  033F                     l1201:	
  2958                           
  2959                           ;main.c: 21: ANSELA = 0;
  2960  033F  017E               	movlb	62	; select bank62
  2961  0340  01B8               	clrf	56	;volatile
  2962  0341                     l1203:	
  2963                           
  2964                           ;main.c: 22: ANSELC = 0;
  2965  0341  01CE               	clrf	78	;volatile
  2966                           
  2967                           ;main.c: 23: WPUA = 0b00110000;
  2968  0342  3030               	movlw	48
  2969  0343  00B9               	movwf	57	;volatile
  2970                           
  2971                           ;main.c: 24: WPUC = 0b00011000;
  2972  0344  3018               	movlw	24
  2973  0345  00CF               	movwf	79	;volatile
  2974  0346                     l1205:	
  2975                           
  2976                           ;main.c: 27: T1CONbits.CKPS = 0b00;
  2977  0346  30CF               	movlw	-49
  2978  0347  0144               	movlb	4	; select bank4
  2979  0348  058E               	andwf	14,f	;volatile
  2980  0349                     l1207:	
  2981                           
  2982                           ;main.c: 28: T1CONbits.nSYNC = 0;
  2983  0349  110E               	bcf	14,2	;volatile
  2984  034A                     l1209:	
  2985                           
  2986                           ;main.c: 29: T1CONbits.RD16 = 1;
  2987  034A  148E               	bsf	14,1	;volatile
  2988  034B                     l1211:	
  2989                           
  2990                           ;main.c: 30: T1GCONbits.GE = 0;
  2991  034B  138F               	bcf	15,7	;volatile
  2992  034C                     l1213:	
  2993                           
  2994                           ;main.c: 31: T1CLK = 0b00000100;
  2995  034C  3004               	movlw	4
  2996  034D  0091               	movwf	17	;volatile
  2997  034E                     l1215:	
  2998                           
  2999                           ;main.c: 32: TMR1 = 65228;
  3000  034E  30FE               	movlw	254
  3001  034F  008D               	movwf	13	;volatile
  3002  0350  30CC               	movlw	204
  3003  0351  008C               	movwf	12	;volatile
  3004  0352                     l1217:	
  3005                           
  3006                           ;main.c: 33: PIE4bits.TMR1IE = 1;
  3007  0352  014E               	movlb	14	; select bank14
  3008  0353  141A               	bsf	26,0	;volatile
  3009  0354                     l1219:	
  3010                           
  3011                           ;main.c: 34: T1CONbits.ON = 1;
  3012  0354  0144               	movlb	4	; select bank4
  3013  0355  140E               	bsf	14,0	;volatile
  3014  0356                     l1221:	
  3015                           
  3016                           ;main.c: 36: INTCONbits.GIE = 1;
  3017  0356  178B               	bsf	11,7	;volatile
  3018  0357                     l1223:	
  3019                           
  3020                           ;main.c: 37: INTCONbits.PEIE = 1;
  3021  0357  170B               	bsf	11,6	;volatile
  3022  0358                     l67:	
  3023  0358  0008               	return
  3024  0359                     __end_of_PIC_SETUP:	
  3025                           
  3026                           	psect	text6
  3027  0399                     __ptext6:	
  3028 ;; *************** function _LM49450_analog_init *****************
  3029 ;; Defined at:
  3030 ;;		line 90 in file "LM49450.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  reg0_analog     1    0        unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      unsigned char 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0, pclath, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3044 ;;      Params:         0       0       0       0       0       0       0       0
  3045 ;;      Locals:         1       0       0       0       0       0       0       0
  3046 ;;      Temps:          1       0       0       0       0       0       0       0
  3047 ;;      Totals:         2       0       0       0       0       0       0       0
  3048 ;;Total ram usage:        2 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    4
  3051 ;; This function calls:
  3052 ;;		_LM49450_write
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           
  3059                           ;psect for function _LM49450_analog_init
  3060  0399                     _LM49450_analog_init:	
  3061  0399                     l1271:	
  3062                           ;incstack = 0
  3063                           ; Regs used in _LM49450_analog_init: [wreg+status,2+status,0+pclath+cstack]
  3064                           
  3065  0399                     l1273:	
  3066                           
  3067                           ;LM49450.c: 97: LM49450_write(0x00, reg0_analog);
  3068  0399  302B               	movlw	43
  3069  039A  00F3               	movwf	??_LM49450_analog_init
  3070  039B  0873               	movf	??_LM49450_analog_init,w
  3071  039C  00F1               	movwf	LM49450_write@data
  3072  039D  3000               	movlw	0
  3073  039E  3183  236F  3183   	fcall	_LM49450_write
  3074  03A1                     l1275:	
  3075                           
  3076                           ;LM49450.c: 99: return reg0_analog;
  3077  03A1  302B               	movlw	43
  3078  03A2                     l247:	
  3079  03A2  0008               	return
  3080  03A3                     __end_of_LM49450_analog_init:	
  3081                           
  3082                           	psect	text7
  3083  02F0                     __ptext7:	
  3084 ;; *************** function _LM49450_Wii_init *****************
  3085 ;; Defined at:
  3086 ;;		line 46 in file "LM49450.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  reg0_Wii        1    0        unsigned char 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      unsigned char 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0, pclath, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3100 ;;      Params:         0       0       0       0       0       0       0       0
  3101 ;;      Locals:         1       0       0       0       0       0       0       0
  3102 ;;      Temps:          1       0       0       0       0       0       0       0
  3103 ;;      Totals:         2       0       0       0       0       0       0       0
  3104 ;;Total ram usage:        2 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:    4
  3107 ;; This function calls:
  3108 ;;		_LM49450_write
  3109 ;; This function is called by:
  3110 ;;		_main
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           
  3115                           ;psect for function _LM49450_Wii_init
  3116  02F0                     _LM49450_Wii_init:	
  3117  02F0                     l1239:	
  3118                           ;incstack = 0
  3119                           ; Regs used in _LM49450_Wii_init: [wreg+status,2+status,0+pclath+cstack]
  3120                           
  3121  02F0                     l1241:	
  3122                           
  3123                           ;LM49450.c: 52: LM49450_write(0x00, reg0_Wii);
  3124  02F0  3029               	movlw	41
  3125  02F1  00F3               	movwf	??_LM49450_Wii_init
  3126  02F2  0873               	movf	??_LM49450_Wii_init,w
  3127  02F3  00F1               	movwf	LM49450_write@data
  3128  02F4  3000               	movlw	0
  3129  02F5  3183  236F  3182   	fcall	_LM49450_write
  3130  02F8                     l1243:	
  3131                           
  3132                           ;LM49450.c: 55: LM49450_write(0x01, 0b00000001);
  3133  02F8  01F1               	clrf	LM49450_write@data
  3134  02F9  0AF1               	incf	LM49450_write@data,f
  3135  02FA  3001               	movlw	1
  3136  02FB  3183  236F  3182   	fcall	_LM49450_write
  3137  02FE                     l1245:	
  3138                           
  3139                           ;LM49450.c: 56: LM49450_write(0x02, 0x4B);
  3140  02FE  304B               	movlw	75
  3141  02FF  00F3               	movwf	??_LM49450_Wii_init
  3142  0300  0873               	movf	??_LM49450_Wii_init,w
  3143  0301  00F1               	movwf	LM49450_write@data
  3144  0302  3002               	movlw	2
  3145  0303  3183  236F  3182   	fcall	_LM49450_write
  3146  0306                     l1247:	
  3147                           
  3148                           ;LM49450.c: 61: LM49450_write(0x03, 0b01110001);
  3149  0306  3071               	movlw	113
  3150  0307  00F3               	movwf	??_LM49450_Wii_init
  3151  0308  0873               	movf	??_LM49450_Wii_init,w
  3152  0309  00F1               	movwf	LM49450_write@data
  3153  030A  3003               	movlw	3
  3154  030B  3183  236F  3182   	fcall	_LM49450_write
  3155  030E                     l1249:	
  3156                           
  3157                           ;LM49450.c: 63: LM49450_write(0x04, 0b00000000);
  3158  030E  01F1               	clrf	LM49450_write@data
  3159  030F  3004               	movlw	4
  3160  0310  3183  236F  3182   	fcall	_LM49450_write
  3161  0313                     l1251:	
  3162                           
  3163                           ;LM49450.c: 65: return reg0_Wii;
  3164  0313  3029               	movlw	41
  3165  0314                     l241:	
  3166  0314  0008               	return
  3167  0315                     __end_of_LM49450_Wii_init:	
  3168                           
  3169                           	psect	text8
  3170  02C9                     __ptext8:	
  3171 ;; *************** function _LM49450_PS2_init *****************
  3172 ;; Defined at:
  3173 ;;		line 68 in file "LM49450.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;		None
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;  reg0_PS2        1    0        unsigned char 
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  1    wreg      unsigned char 
  3180 ;; Registers used:
  3181 ;;		wreg, status,2, status,0, pclath, cstack
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3187 ;;      Params:         0       0       0       0       0       0       0       0
  3188 ;;      Locals:         1       0       0       0       0       0       0       0
  3189 ;;      Temps:          1       0       0       0       0       0       0       0
  3190 ;;      Totals:         2       0       0       0       0       0       0       0
  3191 ;;Total ram usage:        2 bytes
  3192 ;; Hardware stack levels used:    1
  3193 ;; Hardware stack levels required when called:    4
  3194 ;; This function calls:
  3195 ;;		_LM49450_write
  3196 ;; This function is called by:
  3197 ;;		_main
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           
  3202                           ;psect for function _LM49450_PS2_init
  3203  02C9                     _LM49450_PS2_init:	
  3204  02C9                     l1255:	
  3205                           ;incstack = 0
  3206                           ; Regs used in _LM49450_PS2_init: [wreg+status,2+status,0+pclath+cstack]
  3207                           
  3208  02C9                     l1257:	
  3209                           
  3210                           ;LM49450.c: 74: LM49450_write(0x00, reg0_PS2);
  3211  02C9  3029               	movlw	41
  3212  02CA  00F3               	movwf	??_LM49450_PS2_init
  3213  02CB  0873               	movf	??_LM49450_PS2_init,w
  3214  02CC  00F1               	movwf	LM49450_write@data
  3215  02CD  3000               	movlw	0
  3216  02CE  3183  236F  3182   	fcall	_LM49450_write
  3217  02D1                     l1259:	
  3218                           
  3219                           ;LM49450.c: 77: LM49450_write(0x01, 0b00000010);
  3220  02D1  3002               	movlw	2
  3221  02D2  00F3               	movwf	??_LM49450_PS2_init
  3222  02D3  0873               	movf	??_LM49450_PS2_init,w
  3223  02D4  00F1               	movwf	LM49450_write@data
  3224  02D5  3001               	movlw	1
  3225  02D6  3183  236F  3182   	fcall	_LM49450_write
  3226  02D9                     l1261:	
  3227                           
  3228                           ;LM49450.c: 79: LM49450_write(0x02, 0x4B);
  3229  02D9  304B               	movlw	75
  3230  02DA  00F3               	movwf	??_LM49450_PS2_init
  3231  02DB  0873               	movf	??_LM49450_PS2_init,w
  3232  02DC  00F1               	movwf	LM49450_write@data
  3233  02DD  3002               	movlw	2
  3234  02DE  3183  236F  3182   	fcall	_LM49450_write
  3235  02E1                     l1263:	
  3236                           
  3237                           ;LM49450.c: 83: LM49450_write(0x03, 0b01110000);
  3238  02E1  3070               	movlw	112
  3239  02E2  00F3               	movwf	??_LM49450_PS2_init
  3240  02E3  0873               	movf	??_LM49450_PS2_init,w
  3241  02E4  00F1               	movwf	LM49450_write@data
  3242  02E5  3003               	movlw	3
  3243  02E6  3183  236F  3182   	fcall	_LM49450_write
  3244  02E9                     l1265:	
  3245                           
  3246                           ;LM49450.c: 85: LM49450_write(0x04, 0b00000000);
  3247  02E9  01F1               	clrf	LM49450_write@data
  3248  02EA  3004               	movlw	4
  3249  02EB  3183  236F  3182   	fcall	_LM49450_write
  3250  02EE                     l1267:	
  3251                           
  3252                           ;LM49450.c: 87: return reg0_PS2;
  3253  02EE  3029               	movlw	41
  3254  02EF                     l244:	
  3255  02EF  0008               	return
  3256  02F0                     __end_of_LM49450_PS2_init:	
  3257                           
  3258                           	psect	text9
  3259  0315                     __ptext9:	
  3260 ;; *************** function _LM49450_DC_init *****************
  3261 ;; Defined at:
  3262 ;;		line 22 in file "LM49450.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;		None
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  reg0_DC         1    0        unsigned char 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      unsigned char 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0, pclath, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3276 ;;      Params:         0       0       0       0       0       0       0       0
  3277 ;;      Locals:         1       0       0       0       0       0       0       0
  3278 ;;      Temps:          1       0       0       0       0       0       0       0
  3279 ;;      Totals:         2       0       0       0       0       0       0       0
  3280 ;;Total ram usage:        2 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; Hardware stack levels required when called:    4
  3283 ;; This function calls:
  3284 ;;		_LM49450_write
  3285 ;; This function is called by:
  3286 ;;		_main
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           
  3291                           ;psect for function _LM49450_DC_init
  3292  0315                     _LM49450_DC_init:	
  3293  0315                     l1279:	
  3294                           ;incstack = 0
  3295                           ; Regs used in _LM49450_DC_init: [wreg+status,2+status,0+pclath+cstack]
  3296                           
  3297  0315                     l1281:	
  3298                           
  3299                           ;LM49450.c: 29: LM49450_write(0x00, reg0_DC);
  3300  0315  3029               	movlw	41
  3301  0316  00F3               	movwf	??_LM49450_DC_init
  3302  0317  0873               	movf	??_LM49450_DC_init,w
  3303  0318  00F1               	movwf	LM49450_write@data
  3304  0319  3000               	movlw	0
  3305  031A  3183  236F  3183   	fcall	_LM49450_write
  3306  031D                     l1283:	
  3307                           
  3308                           ;LM49450.c: 32: LM49450_write(0x01, 0b00000001);
  3309  031D  01F1               	clrf	LM49450_write@data
  3310  031E  0AF1               	incf	LM49450_write@data,f
  3311  031F  3001               	movlw	1
  3312  0320  3183  236F  3183   	fcall	_LM49450_write
  3313  0323                     l1285:	
  3314                           
  3315                           ;LM49450.c: 38: LM49450_write(0x04, 0b00000000);
  3316  0323  01F1               	clrf	LM49450_write@data
  3317  0324  3004               	movlw	4
  3318  0325  3183  236F  3183   	fcall	_LM49450_write
  3319  0328                     l1287:	
  3320                           
  3321                           ;LM49450.c: 40: LM49450_write(0x02, 0x44);
  3322  0328  3044               	movlw	68
  3323  0329  00F3               	movwf	??_LM49450_DC_init
  3324  032A  0873               	movf	??_LM49450_DC_init,w
  3325  032B  00F1               	movwf	LM49450_write@data
  3326  032C  3002               	movlw	2
  3327  032D  3183  236F  3183   	fcall	_LM49450_write
  3328  0330                     l1289:	
  3329                           
  3330                           ;LM49450.c: 41: LM49450_write(0x03, 0b00000010);
  3331  0330  3002               	movlw	2
  3332  0331  00F3               	movwf	??_LM49450_DC_init
  3333  0332  0873               	movf	??_LM49450_DC_init,w
  3334  0333  00F1               	movwf	LM49450_write@data
  3335  0334  3003               	movlw	3
  3336  0335  3183  236F  3183   	fcall	_LM49450_write
  3337  0338                     l1291:	
  3338                           
  3339                           ;LM49450.c: 43: return reg0_DC;
  3340  0338  3029               	movlw	41
  3341  0339                     l238:	
  3342  0339  0008               	return
  3343  033A                     __end_of_LM49450_DC_init:	
  3344                           
  3345                           	psect	text10
  3346  036F                     __ptext10:	
  3347 ;; *************** function _LM49450_write *****************
  3348 ;; Defined at:
  3349 ;;		line 14 in file "LM49450.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  reg             1    wreg     unsigned char 
  3352 ;;  data            1    1[COMMON] unsigned char 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  reg             1    2[COMMON] unsigned char 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2, status,0, pclath, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3364 ;;      Params:         1       0       0       0       0       0       0       0
  3365 ;;      Locals:         1       0       0       0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0
  3367 ;;      Totals:         2       0       0       0       0       0       0       0
  3368 ;;Total ram usage:        2 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    3
  3371 ;; This function calls:
  3372 ;;		_I2C_Master_Start
  3373 ;;		_I2C_Master_Stop
  3374 ;;		_I2C_Master_Write
  3375 ;; This function is called by:
  3376 ;;		_main
  3377 ;;		_LM49450_DC_init
  3378 ;;		_LM49450_Wii_init
  3379 ;;		_LM49450_PS2_init
  3380 ;;		_LM49450_analog_init
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           
  3385                           ;psect for function _LM49450_write
  3386  036F                     _LM49450_write:	
  3387                           
  3388                           ;incstack = 0
  3389                           ; Regs used in _LM49450_write: [wreg+status,2+status,0+pclath+cstack]
  3390                           ;LM49450_write@reg stored from wreg
  3391  036F  00F2               	movwf	LM49450_write@reg
  3392  0370                     l1173:	
  3393                           
  3394                           ;LM49450.c: 15: I2C_Master_Start();
  3395  0370  3183  23C6  3183   	fcall	_I2C_Master_Start
  3396                           
  3397                           ;LM49450.c: 16: I2C_Master_Write(0b1111101 << 1);
  3398  0373  30FA               	movlw	250
  3399  0374  3183  23AB  3183   	fcall	_I2C_Master_Write
  3400                           
  3401                           ;LM49450.c: 17: I2C_Master_Write(reg);
  3402  0377  0872               	movf	LM49450_write@reg,w
  3403  0378  3183  23AB  3183   	fcall	_I2C_Master_Write
  3404                           
  3405                           ;LM49450.c: 18: I2C_Master_Write(data);
  3406  037B  0871               	movf	LM49450_write@data,w
  3407  037C  3183  23AB  3183   	fcall	_I2C_Master_Write
  3408                           
  3409                           ;LM49450.c: 19: I2C_Master_Stop();
  3410  037F  3183  23C0  3183   	fcall	_I2C_Master_Stop
  3411  0382                     l235:	
  3412  0382  0008               	return
  3413  0383                     __end_of_LM49450_write:	
  3414                           
  3415                           	psect	text11
  3416  03AB                     __ptext11:	
  3417 ;; *************** function _I2C_Master_Write *****************
  3418 ;; Defined at:
  3419 ;;		line 76 in file "I2C.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;  data            1    wreg     unsigned char 
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;  data            1    0[COMMON] unsigned char 
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  1    wreg      void 
  3426 ;; Registers used:
  3427 ;;		wreg, status,2, status,0, pclath, cstack
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3433 ;;      Params:         0       0       0       0       0       0       0       0
  3434 ;;      Locals:         1       0       0       0       0       0       0       0
  3435 ;;      Temps:          0       0       0       0       0       0       0       0
  3436 ;;      Totals:         1       0       0       0       0       0       0       0
  3437 ;;Total ram usage:        1 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:    2
  3440 ;; This function calls:
  3441 ;;		_I2C_Master_Wait
  3442 ;; This function is called by:
  3443 ;;		_LM49450_write
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           
  3448                           ;psect for function _I2C_Master_Write
  3449  03AB                     _I2C_Master_Write:	
  3450                           
  3451                           ;incstack = 0
  3452                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3453                           ;I2C_Master_Write@data stored from wreg
  3454  03AB  00F0               	movwf	I2C_Master_Write@data
  3455  03AC                     l1169:	
  3456                           
  3457                           ;I2C.c: 78: I2C_Master_Wait();
  3458  03AC  3183  2383  3183   	fcall	_I2C_Master_Wait
  3459  03AF                     l1171:	
  3460                           
  3461                           ;I2C.c: 79: SSP1BUF = data;
  3462  03AF  0870               	movf	I2C_Master_Write@data,w
  3463  03B0  0143               	movlb	3	; select bank3
  3464  03B1  008C               	movwf	12	;volatile
  3465  03B2                     l207:	
  3466  03B2  0008               	return
  3467  03B3                     __end_of_I2C_Master_Write:	
  3468                           
  3469                           	psect	text12
  3470  03C0                     __ptext12:	
  3471 ;; *************** function _I2C_Master_Stop *****************
  3472 ;; Defined at:
  3473 ;;		line 70 in file "I2C.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, status,2, status,0, pclath, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3487 ;;      Params:         0       0       0       0       0       0       0       0
  3488 ;;      Locals:         0       0       0       0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0       0       0       0
  3490 ;;      Totals:         0       0       0       0       0       0       0       0
  3491 ;;Total ram usage:        0 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    2
  3494 ;; This function calls:
  3495 ;;		_I2C_Master_Wait
  3496 ;; This function is called by:
  3497 ;;		_LM49450_write
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           
  3502                           ;psect for function _I2C_Master_Stop
  3503  03C0                     _I2C_Master_Stop:	
  3504  03C0                     l1165:	
  3505                           ;incstack = 0
  3506                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3507                           
  3508                           
  3509                           ;I2C.c: 72: I2C_Master_Wait();
  3510  03C0  3183  2383  3183   	fcall	_I2C_Master_Wait
  3511  03C3                     l1167:	
  3512                           
  3513                           ;I2C.c: 73: SSP1CON2bits.PEN = 1;
  3514  03C3  0143               	movlb	3	; select bank3
  3515  03C4  1511               	bsf	17,2	;volatile
  3516  03C5                     l204:	
  3517  03C5  0008               	return
  3518  03C6                     __end_of_I2C_Master_Stop:	
  3519                           
  3520                           	psect	text13
  3521  03C6                     __ptext13:	
  3522 ;; *************** function _I2C_Master_Start *****************
  3523 ;; Defined at:
  3524 ;;		line 58 in file "I2C.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;		None
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;		None
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      void 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0, pclath, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3538 ;;      Params:         0       0       0       0       0       0       0       0
  3539 ;;      Locals:         0       0       0       0       0       0       0       0
  3540 ;;      Temps:          0       0       0       0       0       0       0       0
  3541 ;;      Totals:         0       0       0       0       0       0       0       0
  3542 ;;Total ram usage:        0 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    2
  3545 ;; This function calls:
  3546 ;;		_I2C_Master_Wait
  3547 ;; This function is called by:
  3548 ;;		_LM49450_write
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           
  3553                           ;psect for function _I2C_Master_Start
  3554  03C6                     _I2C_Master_Start:	
  3555  03C6                     l1161:	
  3556                           ;incstack = 0
  3557                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3558                           
  3559                           
  3560                           ;I2C.c: 60: I2C_Master_Wait();
  3561  03C6  3183  2383  3183   	fcall	_I2C_Master_Wait
  3562  03C9                     l1163:	
  3563                           
  3564                           ;I2C.c: 61: SSP1CON2bits.SEN = 1;
  3565  03C9  0143               	movlb	3	; select bank3
  3566  03CA  1411               	bsf	17,0	;volatile
  3567  03CB                     l198:	
  3568  03CB  0008               	return
  3569  03CC                     __end_of_I2C_Master_Start:	
  3570                           
  3571                           	psect	text14
  3572  0383                     __ptext14:	
  3573 ;; *************** function _I2C_Master_Wait *****************
  3574 ;; Defined at:
  3575 ;;		line 53 in file "I2C.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;		None
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;		None
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg, status,2
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3589 ;;      Params:         0       0       0       0       0       0       0       0
  3590 ;;      Locals:         0       0       0       0       0       0       0       0
  3591 ;;      Temps:          0       0       0       0       0       0       0       0
  3592 ;;      Totals:         0       0       0       0       0       0       0       0
  3593 ;;Total ram usage:        0 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; Hardware stack levels required when called:    1
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		_I2C_Master_Start
  3600 ;;		_I2C_Master_Stop
  3601 ;;		_I2C_Master_Write
  3602 ;;		_I2C_Master_Repeated_Start
  3603 ;;		_I2C_Master_Read
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           
  3608                           ;psect for function _I2C_Master_Wait
  3609  0383                     _I2C_Master_Wait:	
  3610  0383                     l1157:	
  3611                           ;incstack = 0
  3612                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3613                           
  3614  0383                     l192:	
  3615                           ;I2C.c: 55: while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  3616                           
  3617  0383  0143               	movlb	3	; select bank3
  3618  0384  190F               	btfsc	15,2	;volatile
  3619  0385  2B87               	goto	u461
  3620  0386  2B88               	goto	u460
  3621  0387                     u461:	
  3622  0387  2B83               	goto	l192
  3623  0388                     u460:	
  3624  0388                     l1159:	
  3625  0388  0811               	movf	17,w	;volatile
  3626  0389  391F               	andlw	31
  3627  038A  1D03               	btfss	3,2
  3628  038B  2B8D               	goto	u471
  3629  038C  2B8E               	goto	u470
  3630  038D                     u471:	
  3631  038D  2B83               	goto	l192
  3632  038E                     u470:	
  3633  038E                     l195:	
  3634  038E  0008               	return
  3635  038F                     __end_of_I2C_Master_Wait:	
  3636                           
  3637                           	psect	text15
  3638  029B                     __ptext15:	
  3639 ;; *************** function _I2C_Master_Init *****************
  3640 ;; Defined at:
  3641 ;;		line 45 in file "I2C.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;  clk             4    0[BANK0 ] const unsigned long 
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;		None
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  1    wreg      void 
  3648 ;; Registers used:
  3649 ;;		wreg, status,2, status,0, pclath, cstack
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3655 ;;      Params:         0       4       0       0       0       0       0       0
  3656 ;;      Locals:         0       0       0       0       0       0       0       0
  3657 ;;      Temps:          0       4       0       0       0       0       0       0
  3658 ;;      Totals:         0       8       0       0       0       0       0       0
  3659 ;;Total ram usage:        8 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    2
  3662 ;; This function calls:
  3663 ;;		___lldiv
  3664 ;; This function is called by:
  3665 ;;		_main
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           
  3670                           ;psect for function _I2C_Master_Init
  3671  029B                     _I2C_Master_Init:	
  3672  029B                     l1231:	
  3673                           ;incstack = 0
  3674                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3675                           
  3676                           
  3677                           ;I2C.c: 47: SSP1CON1 = 0b00101000;
  3678  029B  3028               	movlw	40
  3679  029C  0143               	movlb	3	; select bank3
  3680  029D  0090               	movwf	16	;volatile
  3681  029E                     l1233:	
  3682                           
  3683                           ;I2C.c: 48: SSP1CON2 = 0x00;
  3684  029E  0191               	clrf	17	;volatile
  3685  029F                     l1235:	
  3686                           
  3687                           ;I2C.c: 49: SSP1ADD = (32000000 / (4*clk)) - 1;
  3688  029F  0140               	movlb	0	; select bank0
  3689  02A0  0838               	movf	I2C_Master_Init@clk,w
  3690  02A1  00BC               	movwf	??_I2C_Master_Init
  3691  02A2  0839               	movf	I2C_Master_Init@clk+1,w
  3692  02A3  00BD               	movwf	??_I2C_Master_Init+1
  3693  02A4  083A               	movf	I2C_Master_Init@clk+2,w
  3694  02A5  00BE               	movwf	??_I2C_Master_Init+2
  3695  02A6  083B               	movf	I2C_Master_Init@clk+3,w
  3696  02A7  00BF               	movwf	??_I2C_Master_Init+3
  3697  02A8  3002               	movlw	2
  3698  02A9                     u555:	
  3699  02A9  35BC               	lslf	??_I2C_Master_Init,f
  3700  02AA  0DBD               	rlf	??_I2C_Master_Init+1,f
  3701  02AB  0DBE               	rlf	??_I2C_Master_Init+2,f
  3702  02AC  0DBF               	rlf	??_I2C_Master_Init+3,f
  3703  02AD                     u550:	
  3704  02AD  0B89               	decfsz	9,f
  3705  02AE  2AA9               	goto	u555
  3706  02AF  083F               	movf	??_I2C_Master_Init+3,w
  3707  02B0  00F3               	movwf	___lldiv@divisor+3
  3708  02B1  083E               	movf	??_I2C_Master_Init+2,w
  3709  02B2  00F2               	movwf	___lldiv@divisor+2
  3710  02B3  083D               	movf	??_I2C_Master_Init+1,w
  3711  02B4  00F1               	movwf	___lldiv@divisor+1
  3712  02B5  083C               	movf	??_I2C_Master_Init,w
  3713  02B6  00F0               	movwf	___lldiv@divisor
  3714  02B7  3001               	movlw	1
  3715  02B8  00F7               	movwf	___lldiv@dividend+3
  3716  02B9  30E8               	movlw	232
  3717  02BA  00F6               	movwf	___lldiv@dividend+2
  3718  02BB  3048               	movlw	72
  3719  02BC  00F5               	movwf	___lldiv@dividend+1
  3720  02BD  3000               	movlw	0
  3721  02BE  00F4               	movwf	___lldiv@dividend
  3722  02BF  3182  2241  3182   	fcall	___lldiv
  3723  02C2  0870               	movf	?___lldiv,w
  3724  02C3  3EFF               	addlw	255
  3725  02C4  0143               	movlb	3	; select bank3
  3726  02C5  008D               	movwf	13	;volatile
  3727  02C6                     l1237:	
  3728                           
  3729                           ;I2C.c: 50: SSP1STAT = 0b10000000;
  3730  02C6  3080               	movlw	128
  3731  02C7  008F               	movwf	15	;volatile
  3732  02C8                     l189:	
  3733  02C8  0008               	return
  3734  02C9                     __end_of_I2C_Master_Init:	
  3735                           
  3736                           	psect	text16
  3737  0241                     __ptext16:	
  3738 ;; *************** function ___lldiv *****************
  3739 ;; Defined at:
  3740 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;  divisor         4    0[COMMON] unsigned long 
  3743 ;;  dividend        4    4[COMMON] unsigned long 
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;  quotient        4    9[COMMON] unsigned long 
  3746 ;;  counter         1   13[COMMON] unsigned char 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  4    0[COMMON] unsigned long 
  3749 ;; Registers used:
  3750 ;;		wreg, status,2, status,0
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3756 ;;      Params:         8       0       0       0       0       0       0       0
  3757 ;;      Locals:         5       0       0       0       0       0       0       0
  3758 ;;      Temps:          1       0       0       0       0       0       0       0
  3759 ;;      Totals:        14       0       0       0       0       0       0       0
  3760 ;;Total ram usage:       14 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    1
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		_I2C_Master_Init
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           
  3771                           ;psect for function ___lldiv
  3772  0241                     ___lldiv:	
  3773  0241                     l1175:	
  3774                           ;incstack = 0
  3775                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3776                           
  3777  0241  3000               	movlw	0
  3778  0242  00FC               	movwf	___lldiv@quotient+3
  3779  0243  3000               	movlw	0
  3780  0244  00FB               	movwf	___lldiv@quotient+2
  3781  0245  3000               	movlw	0
  3782  0246  00FA               	movwf	___lldiv@quotient+1
  3783  0247  3000               	movlw	0
  3784  0248  00F9               	movwf	___lldiv@quotient
  3785  0249  0873               	movf	___lldiv@divisor+3,w
  3786  024A  0472               	iorwf	___lldiv@divisor+2,w
  3787  024B  0471               	iorwf	___lldiv@divisor+1,w
  3788  024C  0470               	iorwf	___lldiv@divisor,w
  3789  024D  1903               	skipnz
  3790  024E  2A50               	goto	u481
  3791  024F  2A51               	goto	u480
  3792  0250                     u481:	
  3793  0250  2A92               	goto	l1195
  3794  0251                     u480:	
  3795  0251                     l1177:	
  3796  0251  01FD               	clrf	___lldiv@counter
  3797  0252  0AFD               	incf	___lldiv@counter,f
  3798  0253  2A5F               	goto	l1181
  3799  0254                     l1179:	
  3800  0254  3001               	movlw	1
  3801  0255                     u495:	
  3802  0255  35F0               	lslf	___lldiv@divisor,f
  3803  0256  0DF1               	rlf	___lldiv@divisor+1,f
  3804  0257  0DF2               	rlf	___lldiv@divisor+2,f
  3805  0258  0DF3               	rlf	___lldiv@divisor+3,f
  3806  0259  0B89               	decfsz	9,f
  3807  025A  2A55               	goto	u495
  3808  025B  3001               	movlw	1
  3809  025C  00F8               	movwf	??___lldiv
  3810  025D  0878               	movf	??___lldiv,w
  3811  025E  07FD               	addwf	___lldiv@counter,f
  3812  025F                     l1181:	
  3813  025F  1FF3               	btfss	___lldiv@divisor+3,7
  3814  0260  2A62               	goto	u501
  3815  0261  2A63               	goto	u500
  3816  0262                     u501:	
  3817  0262  2A54               	goto	l1179
  3818  0263                     u500:	
  3819  0263                     l1183:	
  3820  0263  3001               	movlw	1
  3821  0264                     u515:	
  3822  0264  35F9               	lslf	___lldiv@quotient,f
  3823  0265  0DFA               	rlf	___lldiv@quotient+1,f
  3824  0266  0DFB               	rlf	___lldiv@quotient+2,f
  3825  0267  0DFC               	rlf	___lldiv@quotient+3,f
  3826  0268  0B89               	decfsz	9,f
  3827  0269  2A64               	goto	u515
  3828  026A                     l1185:	
  3829  026A  0873               	movf	___lldiv@divisor+3,w
  3830  026B  0277               	subwf	___lldiv@dividend+3,w
  3831  026C  1D03               	skipz
  3832  026D  2A78               	goto	u525
  3833  026E  0872               	movf	___lldiv@divisor+2,w
  3834  026F  0276               	subwf	___lldiv@dividend+2,w
  3835  0270  1D03               	skipz
  3836  0271  2A78               	goto	u525
  3837  0272  0871               	movf	___lldiv@divisor+1,w
  3838  0273  0275               	subwf	___lldiv@dividend+1,w
  3839  0274  1D03               	skipz
  3840  0275  2A78               	goto	u525
  3841  0276  0870               	movf	___lldiv@divisor,w
  3842  0277  0274               	subwf	___lldiv@dividend,w
  3843  0278                     u525:	
  3844  0278  1C03               	skipc
  3845  0279  2A7B               	goto	u521
  3846  027A  2A7C               	goto	u520
  3847  027B                     u521:	
  3848  027B  2A85               	goto	l1191
  3849  027C                     u520:	
  3850  027C                     l1187:	
  3851  027C  0870               	movf	___lldiv@divisor,w
  3852  027D  02F4               	subwf	___lldiv@dividend,f
  3853  027E  0871               	movf	___lldiv@divisor+1,w
  3854  027F  3BF5               	subwfb	___lldiv@dividend+1,f
  3855  0280  0872               	movf	___lldiv@divisor+2,w
  3856  0281  3BF6               	subwfb	___lldiv@dividend+2,f
  3857  0282  0873               	movf	___lldiv@divisor+3,w
  3858  0283  3BF7               	subwfb	___lldiv@dividend+3,f
  3859  0284                     l1189:	
  3860  0284  1479               	bsf	___lldiv@quotient,0
  3861  0285                     l1191:	
  3862  0285  3001               	movlw	1
  3863  0286                     u535:	
  3864  0286  36F3               	lsrf	___lldiv@divisor+3,f
  3865  0287  0CF2               	rrf	___lldiv@divisor+2,f
  3866  0288  0CF1               	rrf	___lldiv@divisor+1,f
  3867  0289  0CF0               	rrf	___lldiv@divisor,f
  3868  028A  0B89               	decfsz	9,f
  3869  028B  2A86               	goto	u535
  3870  028C                     l1193:	
  3871  028C  3001               	movlw	1
  3872  028D  02FD               	subwf	___lldiv@counter,f
  3873  028E  1D03               	btfss	3,2
  3874  028F  2A91               	goto	u541
  3875  0290  2A92               	goto	u540
  3876  0291                     u541:	
  3877  0291  2A63               	goto	l1183
  3878  0292                     u540:	
  3879  0292                     l1195:	
  3880  0292  087C               	movf	___lldiv@quotient+3,w
  3881  0293  00F3               	movwf	?___lldiv+3
  3882  0294  087B               	movf	___lldiv@quotient+2,w
  3883  0295  00F2               	movwf	?___lldiv+2
  3884  0296  087A               	movf	___lldiv@quotient+1,w
  3885  0297  00F1               	movwf	?___lldiv+1
  3886  0298  0879               	movf	___lldiv@quotient,w
  3887  0299  00F0               	movwf	?___lldiv
  3888  029A                     l351:	
  3889  029A  0008               	return
  3890  029B                     __end_of___lldiv:	
  3891                           
  3892                           	psect	intentry
  3893  0004                     __pintentry:	
  3894 ;; *************** function _ISR *****************
  3895 ;; Defined at:
  3896 ;;		line 40 in file "main.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;		None
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;		None
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      void 
  3903 ;; Registers used:
  3904 ;;		wreg
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3910 ;;      Params:         0       0       0       0       0       0       0       0
  3911 ;;      Locals:         0       0       0       0       0       0       0       0
  3912 ;;      Temps:          0       0       0       0       0       0       0       0
  3913 ;;      Totals:         0       0       0       0       0       0       0       0
  3914 ;;Total ram usage:        0 bytes
  3915 ;; Hardware stack levels used:    1
  3916 ;; This function calls:
  3917 ;;		Nothing
  3918 ;; This function is called by:
  3919 ;;		Interrupt level 1
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923  0004                     _ISR:	
  3924                           
  3925                           ;incstack = 0
  3926  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3927                           
  3928                           ; Regs used in _ISR: [wreg]
  3929  0005  3180               	pagesel	$
  3930  0006                     i1l1303:	
  3931                           
  3932                           ;main.c: 42: if(TMR1IF) {
  3933  0006  014E               	movlb	14	; select bank14
  3934  0007  1C10               	btfss	16,0	;volatile
  3935  0008  280A               	goto	u56_21
  3936  0009  280B               	goto	u56_20
  3937  000A                     u56_21:	
  3938  000A  281A               	goto	i1l73
  3939  000B                     u56_20:	
  3940  000B                     i1l1305:	
  3941                           
  3942                           ;main.c: 43: TMR1IF = 0;
  3943  000B  1010               	bcf	16,0	;volatile
  3944                           
  3945                           ;main.c: 44: TMR1 = 65228;
  3946  000C  30FE               	movlw	254
  3947  000D  0144               	movlb	4	; select bank4
  3948  000E  008D               	movwf	13	;volatile
  3949  000F  30CC               	movlw	204
  3950  0010  008C               	movwf	12	;volatile
  3951  0011                     i1l1307:	
  3952                           
  3953                           ;main.c: 45: timer_counter++;
  3954  0011  3001               	movlw	1
  3955  0012  0140               	movlb	0	; select bank0
  3956  0013  07B0               	addwf	_timer_counter,f
  3957  0014  3000               	movlw	0
  3958  0015  3DB1               	addwfc	_timer_counter+1,f
  3959  0016  3000               	movlw	0
  3960  0017  3DB2               	addwfc	_timer_counter+2,f
  3961  0018  3000               	movlw	0
  3962  0019  3DB3               	addwfc	_timer_counter+3,f
  3963  001A                     i1l73:	
  3964  001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3965  001B  0009               	retfie
  3966  001C                     __end_of_ISR:	
  3967  007E                     btemp	set	126	;btemp
  3968  007E                     int$flags	set	126
  3969  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         24
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9      35
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LM49450_analog_init->_LM49450_write
    _LM49450_Wii_init->_LM49450_write
    _LM49450_PS2_init->_LM49450_write
    _LM49450_DC_init->_LM49450_write
    _LM49450_write->_I2C_Master_Write
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   10368
                                              8 BANK0      1     1      0
                    _I2C_Master_Init
                    _LM49450_DC_init
                   _LM49450_PS2_init
                   _LM49450_Wii_init
                _LM49450_analog_init
                      _LM49450_write
                          _PIC_SETUP
                           _PPS_lock
                         _PPS_unlock
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _timer_diff                                           8     4      4     326
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _get_time                                             4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _PPS_unlock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PPS_lock                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIC_SETUP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LM49450_analog_init                                  2     2      0    1935
                                              3 COMMON     2     2      0
                      _LM49450_write
 ---------------------------------------------------------------------------------
 (1) _LM49450_Wii_init                                     2     2      0    1935
                                              3 COMMON     2     2      0
                      _LM49450_write
 ---------------------------------------------------------------------------------
 (1) _LM49450_PS2_init                                     2     2      0    1935
                                              3 COMMON     2     2      0
                      _LM49450_write
 ---------------------------------------------------------------------------------
 (1) _LM49450_DC_init                                      2     2      0    1935
                                              3 COMMON     2     2      0
                      _LM49450_write
 ---------------------------------------------------------------------------------
 (1) _LM49450_write                                        2     1      1    1890
                                              1 COMMON     2     1      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _LM49450_DC_init
     _LM49450_write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _LM49450_PS2_init
     _LM49450_write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _LM49450_Wii_init
     _LM49450_write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _LM49450_analog_init
     _LM49450_write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _LM49450_write
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _PIC_SETUP
   _PPS_lock
   _PPS_unlock
   _get_time
   _timer_diff

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      31       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      9      23       6       43.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      31      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov 10 09:30:56 2019

       __end_of_LM49450_write 0383         ??_LM49450_analog_init 0073                   __CFG_CP$OFF 0000  
                          l67 0358                            l98 0064                            l99 0093  
                  _PPS_unlock 03B3                           l100 0074                           l102 0084  
                         l121 01BC                           l204 03C5                           l109 0132  
                         l207 03B2                           l151 03B9                           l223 0398  
                         l241 0314                           l154 03AA                           l226 036E  
                         l235 0382                           l244 02EF                           l238 0339  
                         l351 029A                           l247 03A2                           l192 0383  
                         l195 038E                           l189 02C8                           l198 03CB  
                         _RA4 0064                           _RC0 0070                           _RA5 0065  
                         _RC1 0071                           _RC3 0073                           _RC4 0074  
                         u500 0263                           u501 0262                           u520 027C  
                         u600 006C                           u521 027B                           u601 006B  
                         u610 0078                           u515 0264                           u611 0077  
                         u540 0292                           u460 0388                           u700 011F  
                         u620 007C                           _ISR 0004                           u541 0291  
                         u525 0278                           u461 0387                           u701 011E  
                         u621 007B                           u550 02AD                           u470 038E  
                         u710 0124                           u630 0088                           u535 0286  
                         u471 038D                           u711 0123                           u631 0087  
                         u480 0251                           u800 01C9                           u720 0137  
                         u640 008C                           u481 0250                           u801 01C8  
                         u721 0136                           u641 008B                           u810 01FA  
                         u730 0161                           u650 00A9                           u570 0058  
                         u555 02A9                           u811 01F9                           u731 0160  
                         u651 00A8                           u571 0057                           u820 0204  
                         u740 0176                           u660 00D3                           u580 005C  
                         u821 0203                           u741 0175                           u661 00D2  
                         u581 005B                           u830 020B                           u750 017B  
                         u670 00E9                           u590 0068                           u495 0255  
                         u831 020A                           u751 017A                           u671 00E8  
                         u591 0067                           u840 0210                           u760 0198  
                         u680 00EE                           u841 020F                           u761 0197  
                         u681 00ED                           u850 0215                           u770 01A9  
                         u690 010D                           u851 0214                           u771 01A8  
                         u691 010C                           u780 01AE                           u781 01AD  
                         u790 01C3                           u791 01C2          _vol_minus_time_start 0024  
                __CFG_BORV$LO 0000                           wreg 0009                 __CFG_BBEN$OFF 0000  
                __CFG_LVP$OFF 0000                          ?_ISR 0070                  __CFG_ZCD$OFF 0000  
                        l1201 033F                          l1211 034B                          l1203 0341  
                        l1221 0356                          l1213 034C                          l1205 0346  
                        l1231 029B                          l1223 0357                          l1215 034E  
                        l1207 0349                          l1311 0038                          l1233 029E  
                        l1161 03C6                          l1241 02F0                          l1217 0352  
                        l1209 034A                          l1225 03B3                          l1321 0058  
                        l1313 003B                          l1235 029F                          l1163 03C9  
                        l1171 03AF                          l1251 0313                          l1243 02F8  
                        l1219 0354                          l1227 03B8                          l1411 01C3  
                        l1403 01AF                          l1331 007C                          l1323 005C  
                        l1315 003E                          l1181 025F                          l1237 02C6  
                        l1157 0383                          l1165 03C0                          l1173 0370  
                        l1261 02D9                          l1245 02FE                          l1229 03A3  
                        l1421 01DF                          l1405 01B1                          l1341 00AA  
                        l1333 0088                          l1325 0068                          l1317 0041  
                        l1309 0032                          l1191 0285                          l1183 0263  
                        l1175 0241                          l1159 0388                          l1167 03C3  
                        l1263 02E1                          l1255 02C9                          l1247 0306  
                        l1239 02F0                          l1271 0399                          l1431 01FE  
                        l1423 01E5                          l1415 01CA                          l1351 00E3  
                        l1343 00B6                          l1335 008C                          l1327 006C  
                        l1319 0053                          l1193 028C                          l1185 026A  
                        l1177 0251                          l1169 03AC                          l1281 0315  
                        l1265 02E9                          l1257 02C9                          l1249 030E  
                        l1273 0399                          l1441 0215                          l1417 01D3  
                        l1425 01E7                          l1409 01BC                          l1361 0119  
                        l1353 00E9                          l1345 00B9                          l1337 00A4  
                        l1329 0078                          l1187 027C                          l1179 0254  
                        l1195 0292                          l1291 0338                          l1283 031D  
                        l1267 02EE                          l1259 02D1                          l1275 03A1  
                        l1443 021F                          l1419 01D7                          l1435 0205  
                        l1427 01F5                          l1363 011F                          l1355 00EE  
                        l1347 00D3                          l1189 0284                          l1285 0323  
                        l1437 020B                          l1445 0239                          l1429 01FA  
                        l1381 0147                          l1357 00F3                          l1349 00DF  
                        l1373 0132                          l1287 0328                          l1279 0315  
                        l1199 033A                          l1295 038F                          l1439 0210  
                        l1391 017B                          l1383 0161                          l1359 010D  
                        l1367 0125                          l1289 0330                          l1393 017E  
                        l1385 016D                          l1377 0138                          l1369 0127  
                        l1299 0359                          l1395 0198                          l1387 0171  
                        l1379 0144                          l1397 01A4                          l1389 0176  
                        l1399 01A9                          i1l73 001A                          _TMR1 020C  
                        _WPUA 1F39                          _WPUC 1F4F                 __CFG_FCMEN$ON 0000  
                        _main 0032                          fsr0h 0005                          indf0 0000  
                        fsr0l 0004                          btemp 007E                 __CFG_BOREN$ON 0000  
                        start 001C                 __CFG_CSWEN$ON 0000              ?_LM49450_DC_init 0070  
                       ??_ISR 0070            __size_of_PIC_SETUP 001F              ?_I2C_Master_Init 0038  
            ?_I2C_Master_Wait 0070                   _volume_prev 0041              ?_I2C_Master_Stop 0070  
                       ?_main 0070                 __CFG_WDTE$OFF 0000               __end_of___lldiv 029B  
                       _T1CLK 0211                         u56_20 000B                         u56_21 000A  
                       _TRISA 0012                         _TRISC 0014                 __CFG_WRTB$OFF 0000  
               __CFG_WRTC$OFF 0000              __end_of_PPS_lock 03AB                         status 0003  
                       wtemp0 007E                __CFG_MCLRE$OFF 0000               __initialization 001E  
                __end_of_main 0241                __CFG_SAFEN$OFF 0000             ?_LM49450_PS2_init 0070  
                 ?_PPS_unlock 0070                        ??_main 0040            ??_LM49450_PS2_init 0073  
           ?_I2C_Master_Start 0070             ?_I2C_Master_Write 0070            ??_I2C_Master_Start 0070  
          ??_I2C_Master_Write 0070                        _ANSELA 1F38                        _ANSELC 1F4E  
                      _RC0PPS 1F20                        _RC1PPS 1F21                        i1l1303 0006  
                      i1l1305 000B                        i1l1307 0011             __end_of_PIC_SETUP 0359  
                      _TMR1IF 3880                __CFG_PWRTE$OFF 0000              __end_of_get_time 0399  
              __CFG_STVREN$ON 0000                     ??___lldiv 0078             ?_LM49450_Wii_init 0070  
                      _volume 0042            ??_LM49450_Wii_init 0073       __end_of__initialization 002E  
         __size_of_PPS_unlock 0007                __pcstackCOMMON 0070                  __pidataBANK0 03CC  
                   ?_PPS_lock 0070                    __pbssBANK0 0020   __end_of_LM49450_analog_init 03A3  
                  __pmaintext 0032                    __pintentry 0004           __CFG_RSTOSC$HFINT32 0000  
                  ??_PPS_lock 0070                       _SSP1ADD 018D                       _PPSLOCK 1E8F  
                     _SSP1BUF 018C                _vol_plus_state 0035        __size_of_LM49450_write 0014  
                   ?_get_time 0070                       ___lldiv 0241                  ??_PPS_unlock 0070  
                     __ptext1 0359                       __ptext2 038F                       __ptext3 03B3  
                     __ptext4 03A3                       __ptext5 033A                       __ptext6 0399  
                     __ptext7 02F0                       __ptext8 02C9                       __ptext9 0315  
    __size_of_LM49450_DC_init 0025               __CFG_WRTAPP$OFF 0000                  __size_of_ISR 0018  
                   _T1CONbits 020E               __CFG_WRTSAF$OFF 0000      __size_of_I2C_Master_Init 002E  
    __size_of_I2C_Master_Wait 000C      __size_of_I2C_Master_Stop 0006                       clrloop0 03BB  
                  ??_get_time 0074          end_of_initialization 002E     __size_of_LM49450_PS2_init 0027  
   __size_of_I2C_Master_Start 0006            __end_of_PPS_unlock 03BA                     _PIC_SETUP 033A  
   __size_of_I2C_Master_Write 0008               ___lldiv@divisor 0070               ___lldiv@counter 007D  
               _LM49450_write 036F         __CFG_WDTCPS$WDTCPS_13 0000                    _timer_diff 0359  
                  _mute_state 0036             LM49450_write@data 0071          __CFG_WDTCCS$LFINTOSC 0000  
                   _TRISCbits 0014                   timer_diff@t 0070              __CFG_FEXTOSC$OFF 0000  
         _vol_minus_time_hold 0020     __size_of_LM49450_Wii_init 0025                    ?_PIC_SETUP 0070  
              ?_LM49450_write 0071             __size_of_PPS_lock 0008           start_initialization 001E  
                 __end_of_ISR 001C             ??_LM49450_DC_init 0073             ??_I2C_Master_Init 003C  
           ??_I2C_Master_Wait 0070             ??_I2C_Master_Stop 0070              __CFG_LPBOREN$OFF 0000  
                 __pdataBANK0 0041                   ?_timer_diff 0070                     ___latbits 0001  
               __pcstackBANK0 0038              _LM49450_PS2_init 02C9             __size_of_get_time 000A  
             _vol_minus_state 0034              _I2C_Master_Start 03C6                   ??_PIC_SETUP 0070  
            _I2C_Master_Write 03AB               ??_LM49450_write 0072                      ?___lldiv 0070  
            __CFG_PPS1WAY$OFF 0000  __size_of_LM49450_analog_init 000A          I2C_Master_Write@data 0070  
            _LM49450_Wii_init 02F0           __size_of_timer_diff 0016                     clear_ram0 03BA  
                    _PIE4bits 071A             __CFG_BBSIZE$BB512 0000                      _SSP1CON1 0190  
                    _SSP1CON2 0191                      _SSP1STAT 018F              LM49450_write@reg 0072  
                    _PPS_lock 03A3              __size_of___lldiv 005A               _LM49450_DC_init 0315  
             _I2C_Master_Init 029B               _I2C_Master_Wait 0383               _I2C_Master_Stop 03C0  
                    __ptext10 036F                      __ptext11 03AB                      __ptext12 03C0  
                    __ptext13 03C6                    _T1GCONbits 020F                      __ptext14 0383  
                    __ptext15 029B                      __ptext16 0241                  _SSP1CON2bits 0191  
                    _get_time 038F                 __size_of_main 020F          __CFG_WDTCWS$WDTCWS_7 0000  
                    int$flags 007E      __end_of_LM49450_PS2_init 02F0                 _timer_counter 0030  
                ??_timer_diff 0074            I2C_Master_Init@clk 0038      __end_of_I2C_Master_Start 03CC  
    __end_of_I2C_Master_Write 03B3                    _INTCONbits 000B                      intlevel1 0000  
         _LM49450_analog_init 0399              ___lldiv@dividend 0074             __CFG_CLKOUTEN$OFF 0000  
          __end_of_timer_diff 036F       __end_of_LM49450_DC_init 033A           _vol_plus_time_start 002C  
     __end_of_I2C_Master_Init 02C9       __end_of_I2C_Master_Wait 038F          ?_LM49450_analog_init 0070  
     __end_of_I2C_Master_Stop 03C6      __end_of_LM49450_Wii_init 0315                    _SSP1DATPPS 1EC6  
                  _SSP1CLKPPS 1EC5              ___lldiv@quotient 0079            _vol_plus_time_hold 0028  
                 _mute_config 0037  
